"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/convex";
exports.ids = ["vendor-chunks/convex"];
exports.modules = {

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/http_client.js":
/*!*************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/http_client.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConvexHttpClient: () => (/* binding */ ConvexHttpClient),\n/* harmony export */   STATUS_CODE_BAD_REQUEST: () => (/* binding */ STATUS_CODE_BAD_REQUEST),\n/* harmony export */   STATUS_CODE_OK: () => (/* binding */ STATUS_CODE_OK),\n/* harmony export */   STATUS_CODE_UDF_FAILED: () => (/* binding */ STATUS_CODE_UDF_FAILED),\n/* harmony export */   setFetch: () => (/* binding */ setFetch)\n/* harmony export */ });\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../server/api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/index.js */ \"(ssr)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../index.js */ \"(ssr)/./node_modules/convex/dist/esm/index.js\");\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _logging_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./logging.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/logging.js\");\n\n\n\n\n\n\nconst STATUS_CODE_OK = 200;\nconst STATUS_CODE_BAD_REQUEST = 400;\nconst STATUS_CODE_UDF_FAILED = 560;\nlet specifiedFetch = void 0;\nfunction setFetch(f) {\n    specifiedFetch = f;\n}\nclass ConvexHttpClient {\n    /**\n   * Create a new {@link ConvexHttpClient}.\n   *\n   * @param address - The url of your Convex deployment, often provided\n   * by an environment variable. E.g. `https://small-mouse-123.convex.cloud`.\n   */ constructor(address){\n        (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.validateDeploymentUrl)(address);\n        this.address = `${address}/api`;\n        this.debug = true;\n    }\n    /**\n   * Obtain the {@link ConvexHttpClient}'s URL to its backend.\n   *\n   * @returns The URL to the Convex backend, including the client's API version.\n   */ backendUrl() {\n        return this.address;\n    }\n    /**\n   * Set the authentication token to be used for subsequent queries and mutations.\n   *\n   * Should be called whenever the token changes (i.e. due to expiration and refresh).\n   *\n   * @param value - JWT-encoded OpenID Connect identity token.\n   */ setAuth(value) {\n        this.clearAuth();\n        this.auth = value;\n    }\n    /**\n   * @internal\n   */ setAdminAuth(token) {\n        this.clearAuth();\n        this.adminAuth = token;\n    }\n    /**\n   * Clear the current authentication token if set.\n   */ clearAuth() {\n        this.auth = void 0;\n        this.adminAuth = void 0;\n    }\n    /**\n   * Sets whether the result log lines should be printed on the console or not.\n   *\n   * @internal\n   */ setDebug(debug) {\n        this.debug = debug;\n    }\n    /**\n   * Used to customize the fetch behavior in some runtimes.\n   *\n   * @internal\n   */ setFetchOptions(fetchOptions) {\n        this.fetchOptions = fetchOptions;\n    }\n    /**\n   * Execute a Convex query function.\n   *\n   * @param name - The name of the query.\n   * @param args - The arguments object for the query. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the query's result.\n   */ async query(query, ...args) {\n        const queryArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args[0]);\n        const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(query);\n        const body = JSON.stringify({\n            path: name,\n            format: \"convex_encoded_json\",\n            args: [\n                (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.convexToJson)(queryArgs)\n            ]\n        });\n        const headers = {\n            \"Content-Type\": \"application/json\",\n            \"Convex-Client\": `npm-${_index_js__WEBPACK_IMPORTED_MODULE_2__.version}`\n        };\n        if (this.adminAuth) {\n            headers[\"Authorization\"] = `Convex ${this.adminAuth}`;\n        } else if (this.auth) {\n            headers[\"Authorization\"] = `Bearer ${this.auth}`;\n        }\n        const localFetch = specifiedFetch || fetch;\n        const response = await localFetch(`${this.address}/query`, {\n            ...this.fetchOptions,\n            body,\n            method: \"POST\",\n            headers,\n            credentials: \"include\"\n        });\n        if (!response.ok && response.status !== STATUS_CODE_UDF_FAILED) {\n            throw new Error(await response.text());\n        }\n        const respJSON = await response.json();\n        if (this.debug) {\n            for (const line of respJSON.logLines ?? []){\n                (0,_logging_js__WEBPACK_IMPORTED_MODULE_4__.logToConsole)(\"info\", \"query\", name, line);\n            }\n        }\n        switch(respJSON.status){\n            case \"success\":\n                return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.jsonToConvex)(respJSON.value, true);\n            case \"error\":\n                if (respJSON.errorData !== void 0) {\n                    throw forwardErrorData(respJSON.errorData, new _values_index_js__WEBPACK_IMPORTED_MODULE_3__.ConvexError(respJSON.errorMessage));\n                }\n                throw new Error(respJSON.errorMessage);\n            default:\n                throw new Error(`Invalid response: ${JSON.stringify(respJSON)}`);\n        }\n    }\n    /**\n   * Execute a Convex mutation function.\n   *\n   * @param name - The name of the mutation.\n   * @param args - The arguments object for the mutation. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the mutation's result.\n   */ async mutation(mutation, ...args) {\n        const mutationArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args[0]);\n        const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(mutation);\n        const body = JSON.stringify({\n            path: name,\n            format: \"convex_encoded_json\",\n            args: [\n                (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.convexToJson)(mutationArgs)\n            ]\n        });\n        const headers = {\n            \"Content-Type\": \"application/json\",\n            \"Convex-Client\": `npm-${_index_js__WEBPACK_IMPORTED_MODULE_2__.version}`\n        };\n        if (this.adminAuth) {\n            headers[\"Authorization\"] = `Convex ${this.adminAuth}`;\n        } else if (this.auth) {\n            headers[\"Authorization\"] = `Bearer ${this.auth}`;\n        }\n        const localFetch = specifiedFetch || fetch;\n        const response = await localFetch(`${this.address}/mutation`, {\n            ...this.fetchOptions,\n            body,\n            method: \"POST\",\n            headers,\n            credentials: \"include\"\n        });\n        if (!response.ok && response.status !== STATUS_CODE_UDF_FAILED) {\n            throw new Error(await response.text());\n        }\n        const respJSON = await response.json();\n        if (this.debug) {\n            for (const line of respJSON.logLines ?? []){\n                (0,_logging_js__WEBPACK_IMPORTED_MODULE_4__.logToConsole)(\"info\", \"mutation\", name, line);\n            }\n        }\n        switch(respJSON.status){\n            case \"success\":\n                return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.jsonToConvex)(respJSON.value, true);\n            case \"error\":\n                if (respJSON.errorData !== void 0) {\n                    throw forwardErrorData(respJSON.errorData, new _values_index_js__WEBPACK_IMPORTED_MODULE_3__.ConvexError(respJSON.errorMessage));\n                }\n                throw new Error(respJSON.errorMessage);\n            default:\n                throw new Error(`Invalid response: ${JSON.stringify(respJSON)}`);\n        }\n    }\n    /**\n   * Execute a Convex action function.\n   *\n   * @param name - The name of the action.\n   * @param args - The arguments object for the action. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the action's result.\n   */ async action(action, ...args) {\n        const actionArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args[0]);\n        const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(action);\n        const body = JSON.stringify({\n            path: name,\n            format: \"convex_encoded_json\",\n            args: [\n                (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.convexToJson)(actionArgs)\n            ]\n        });\n        const headers = {\n            \"Content-Type\": \"application/json\",\n            \"Convex-Client\": `npm-${_index_js__WEBPACK_IMPORTED_MODULE_2__.version}`\n        };\n        if (this.adminAuth) {\n            headers[\"Authorization\"] = `Convex ${this.adminAuth}`;\n        } else if (this.auth) {\n            headers[\"Authorization\"] = `Bearer ${this.auth}`;\n        }\n        const localFetch = specifiedFetch || fetch;\n        const response = await localFetch(`${this.address}/action`, {\n            ...this.fetchOptions,\n            body,\n            method: \"POST\",\n            headers,\n            credentials: \"include\"\n        });\n        if (!response.ok && response.status !== STATUS_CODE_UDF_FAILED) {\n            throw new Error(await response.text());\n        }\n        const respJSON = await response.json();\n        if (this.debug) {\n            for (const line of respJSON.logLines ?? []){\n                (0,_logging_js__WEBPACK_IMPORTED_MODULE_4__.logToConsole)(\"info\", \"action\", name, line);\n            }\n        }\n        switch(respJSON.status){\n            case \"success\":\n                return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.jsonToConvex)(respJSON.value, true);\n            case \"error\":\n                if (respJSON.errorData !== void 0) {\n                    throw forwardErrorData(respJSON.errorData, new _values_index_js__WEBPACK_IMPORTED_MODULE_3__.ConvexError(respJSON.errorMessage));\n                }\n                throw new Error(respJSON.errorMessage);\n            default:\n                throw new Error(`Invalid response: ${JSON.stringify(respJSON)}`);\n        }\n    }\n    /**\n   * Execute a Convex function of an unknown type.\n   *\n   * @param name - The name of the function.\n   * @param args - The arguments object for the function. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the function's result.\n   *\n   * @internal\n   */ async function(anyFunction, ...args) {\n        const functionArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args[0]);\n        const name = typeof anyFunction === \"string\" ? anyFunction : (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(anyFunction);\n        const body = JSON.stringify({\n            path: name,\n            format: \"convex_encoded_json\",\n            args: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.convexToJson)(functionArgs)\n        });\n        const headers = {\n            \"Content-Type\": \"application/json\",\n            \"Convex-Client\": `npm-${_index_js__WEBPACK_IMPORTED_MODULE_2__.version}`\n        };\n        if (this.adminAuth) {\n            headers[\"Authorization\"] = `Convex ${this.adminAuth}`;\n        } else if (this.auth) {\n            headers[\"Authorization\"] = `Bearer ${this.auth}`;\n        }\n        const localFetch = specifiedFetch || fetch;\n        const response = await localFetch(`${this.address}/function`, {\n            ...this.fetchOptions,\n            body,\n            method: \"POST\",\n            headers,\n            credentials: \"include\"\n        });\n        if (!response.ok && response.status !== STATUS_CODE_UDF_FAILED) {\n            throw new Error(await response.text());\n        }\n        const respJSON = await response.json();\n        if (this.debug) {\n            for (const line of respJSON.logLines ?? []){\n                (0,_logging_js__WEBPACK_IMPORTED_MODULE_4__.logToConsole)(\"info\", \"any\", name, line);\n            }\n        }\n        switch(respJSON.status){\n            case \"success\":\n                return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.jsonToConvex)(respJSON.value, true);\n            case \"error\":\n                if (respJSON.errorData !== void 0) {\n                    throw forwardErrorData(respJSON.errorData, new _values_index_js__WEBPACK_IMPORTED_MODULE_3__.ConvexError(respJSON.errorMessage));\n                }\n                throw new Error(respJSON.errorMessage);\n            default:\n                throw new Error(`Invalid response: ${JSON.stringify(respJSON)}`);\n        }\n    }\n}\nfunction forwardErrorData(errorData, error) {\n    error.data = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.jsonToConvex)(errorData);\n    return error;\n} //# sourceMappingURL=http_client.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/http_client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseConvexClient: () => (/* reexport safe */ _sync_client_js__WEBPACK_IMPORTED_MODULE_0__.BaseConvexClient),\n/* harmony export */   ConvexClient: () => (/* reexport safe */ _simple_client_js__WEBPACK_IMPORTED_MODULE_1__.ConvexClient),\n/* harmony export */   ConvexHttpClient: () => (/* reexport safe */ _http_client_js__WEBPACK_IMPORTED_MODULE_2__.ConvexHttpClient)\n/* harmony export */ });\n/* harmony import */ var _sync_client_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sync/client.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/client.js\");\n/* harmony import */ var _simple_client_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./simple_client.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/simple_client.js\");\n/* harmony import */ var _http_client_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./http_client.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/http_client.js\");\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWE7QUFDdUM7QUFDRjtBQUNFLENBQ3BELGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2VyYXNvcl9jbG9uZS8uL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vYnJvd3Nlci9pbmRleC5qcz81ZjJlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuZXhwb3J0IHsgQmFzZUNvbnZleENsaWVudCB9IGZyb20gXCIuL3N5bmMvY2xpZW50LmpzXCI7XG5leHBvcnQgeyBDb252ZXhDbGllbnQgfSBmcm9tIFwiLi9zaW1wbGVfY2xpZW50LmpzXCI7XG5leHBvcnQgeyBDb252ZXhIdHRwQ2xpZW50IH0gZnJvbSBcIi4vaHR0cF9jbGllbnQuanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcFxuIl0sIm5hbWVzIjpbIkJhc2VDb252ZXhDbGllbnQiLCJDb252ZXhDbGllbnQiLCJDb252ZXhIdHRwQ2xpZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/logging.js":
/*!*********************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/logging.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createHybridErrorStacktrace: () => (/* binding */ createHybridErrorStacktrace),\n/* harmony export */   forwardData: () => (/* binding */ forwardData),\n/* harmony export */   logFatalError: () => (/* binding */ logFatalError),\n/* harmony export */   logToConsole: () => (/* binding */ logToConsole)\n/* harmony export */ });\n\nconst INFO_COLOR = \"color:rgb(0, 145, 255)\";\nfunction prefix_for_source(source) {\n    switch(source){\n        case \"query\":\n            return \"Q\";\n        case \"mutation\":\n            return \"M\";\n        case \"action\":\n            return \"A\";\n        case \"any\":\n            return \"?\";\n    }\n}\nfunction logToConsole(type, source, udfPath, message) {\n    const prefix = prefix_for_source(source);\n    if (typeof message === \"object\") {\n        message = `ConvexError ${JSON.stringify(message.errorData, null, 2)}`;\n    }\n    if (type === \"info\") {\n        const match = message.match(/^\\[.*?\\] /);\n        if (match === null) {\n            console.error(`[CONVEX ${prefix}(${udfPath})] Could not parse console.log`);\n            return;\n        }\n        const level = message.slice(1, match[0].length - 2);\n        const args = message.slice(match[0].length);\n        console.log(`%c[CONVEX ${prefix}(${udfPath})] [${level}]`, INFO_COLOR, args);\n    } else {\n        console.error(`[CONVEX ${prefix}(${udfPath})] ${message}`);\n    }\n}\nfunction logFatalError(message) {\n    const errorMessage = `[CONVEX FATAL ERROR] ${message}`;\n    console.error(errorMessage);\n    return new Error(errorMessage);\n}\nfunction createHybridErrorStacktrace(source, udfPath, result) {\n    const prefix = prefix_for_source(source);\n    return `[CONVEX ${prefix}(${udfPath})] ${result.errorMessage}\n  Called by client`;\n}\nfunction forwardData(result, error) {\n    error.data = result.errorData;\n    return error;\n} //# sourceMappingURL=logging.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvbG9nZ2luZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWE7QUFDYixNQUFNQSxhQUFhO0FBQ25CLFNBQVNDLGtCQUFrQkMsTUFBTTtJQUMvQixPQUFRQTtRQUNOLEtBQUs7WUFDSCxPQUFPO1FBQ1QsS0FBSztZQUNILE9BQU87UUFDVCxLQUFLO1lBQ0gsT0FBTztRQUNULEtBQUs7WUFDSCxPQUFPO0lBQ1g7QUFDRjtBQUNPLFNBQVNDLGFBQWFDLElBQUksRUFBRUYsTUFBTSxFQUFFRyxPQUFPLEVBQUVDLE9BQU87SUFDekQsTUFBTUMsU0FBU04sa0JBQWtCQztJQUNqQyxJQUFJLE9BQU9JLFlBQVksVUFBVTtRQUMvQkEsVUFBVSxDQUFDLFlBQVksRUFBRUUsS0FBS0MsU0FBUyxDQUFDSCxRQUFRSSxTQUFTLEVBQUUsTUFBTSxHQUFHLENBQUM7SUFDdkU7SUFDQSxJQUFJTixTQUFTLFFBQVE7UUFDbkIsTUFBTU8sUUFBUUwsUUFBUUssS0FBSyxDQUFDO1FBQzVCLElBQUlBLFVBQVUsTUFBTTtZQUNsQkMsUUFBUUMsS0FBSyxDQUNYLENBQUMsUUFBUSxFQUFFTixPQUFPLENBQUMsRUFBRUYsUUFBUSw4QkFBOEIsQ0FBQztZQUU5RDtRQUNGO1FBQ0EsTUFBTVMsUUFBUVIsUUFBUVMsS0FBSyxDQUFDLEdBQUdKLEtBQUssQ0FBQyxFQUFFLENBQUNLLE1BQU0sR0FBRztRQUNqRCxNQUFNQyxPQUFPWCxRQUFRUyxLQUFLLENBQUNKLEtBQUssQ0FBQyxFQUFFLENBQUNLLE1BQU07UUFDMUNKLFFBQVFNLEdBQUcsQ0FDVCxDQUFDLFVBQVUsRUFBRVgsT0FBTyxDQUFDLEVBQUVGLFFBQVEsSUFBSSxFQUFFUyxNQUFNLENBQUMsQ0FBQyxFQUM3Q2QsWUFDQWlCO0lBRUosT0FBTztRQUNMTCxRQUFRQyxLQUFLLENBQUMsQ0FBQyxRQUFRLEVBQUVOLE9BQU8sQ0FBQyxFQUFFRixRQUFRLEdBQUcsRUFBRUMsUUFBUSxDQUFDO0lBQzNEO0FBQ0Y7QUFDTyxTQUFTYSxjQUFjYixPQUFPO0lBQ25DLE1BQU1jLGVBQWUsQ0FBQyxxQkFBcUIsRUFBRWQsUUFBUSxDQUFDO0lBQ3RETSxRQUFRQyxLQUFLLENBQUNPO0lBQ2QsT0FBTyxJQUFJQyxNQUFNRDtBQUNuQjtBQUNPLFNBQVNFLDRCQUE0QnBCLE1BQU0sRUFBRUcsT0FBTyxFQUFFa0IsTUFBTTtJQUNqRSxNQUFNaEIsU0FBU04sa0JBQWtCQztJQUNqQyxPQUFPLENBQUMsUUFBUSxFQUFFSyxPQUFPLENBQUMsRUFBRUYsUUFBUSxHQUFHLEVBQUVrQixPQUFPSCxZQUFZLENBQUM7a0JBQzdDLENBQUM7QUFDbkI7QUFDTyxTQUFTSSxZQUFZRCxNQUFNLEVBQUVWLEtBQUs7SUFDdkNBLE1BQU1ZLElBQUksR0FBR0YsT0FBT2IsU0FBUztJQUM3QixPQUFPRztBQUNULEVBQ0EsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXJhc29yX2Nsb25lLy4vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9icm93c2VyL2xvZ2dpbmcuanM/NWJlMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmNvbnN0IElORk9fQ09MT1IgPSBcImNvbG9yOnJnYigwLCAxNDUsIDI1NSlcIjtcbmZ1bmN0aW9uIHByZWZpeF9mb3Jfc291cmNlKHNvdXJjZSkge1xuICBzd2l0Y2ggKHNvdXJjZSkge1xuICAgIGNhc2UgXCJxdWVyeVwiOlxuICAgICAgcmV0dXJuIFwiUVwiO1xuICAgIGNhc2UgXCJtdXRhdGlvblwiOlxuICAgICAgcmV0dXJuIFwiTVwiO1xuICAgIGNhc2UgXCJhY3Rpb25cIjpcbiAgICAgIHJldHVybiBcIkFcIjtcbiAgICBjYXNlIFwiYW55XCI6XG4gICAgICByZXR1cm4gXCI/XCI7XG4gIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBsb2dUb0NvbnNvbGUodHlwZSwgc291cmNlLCB1ZGZQYXRoLCBtZXNzYWdlKSB7XG4gIGNvbnN0IHByZWZpeCA9IHByZWZpeF9mb3Jfc291cmNlKHNvdXJjZSk7XG4gIGlmICh0eXBlb2YgbWVzc2FnZSA9PT0gXCJvYmplY3RcIikge1xuICAgIG1lc3NhZ2UgPSBgQ29udmV4RXJyb3IgJHtKU09OLnN0cmluZ2lmeShtZXNzYWdlLmVycm9yRGF0YSwgbnVsbCwgMil9YDtcbiAgfVxuICBpZiAodHlwZSA9PT0gXCJpbmZvXCIpIHtcbiAgICBjb25zdCBtYXRjaCA9IG1lc3NhZ2UubWF0Y2goL15cXFsuKj9cXF0gLyk7XG4gICAgaWYgKG1hdGNoID09PSBudWxsKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFxuICAgICAgICBgW0NPTlZFWCAke3ByZWZpeH0oJHt1ZGZQYXRofSldIENvdWxkIG5vdCBwYXJzZSBjb25zb2xlLmxvZ2BcbiAgICAgICk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IGxldmVsID0gbWVzc2FnZS5zbGljZSgxLCBtYXRjaFswXS5sZW5ndGggLSAyKTtcbiAgICBjb25zdCBhcmdzID0gbWVzc2FnZS5zbGljZShtYXRjaFswXS5sZW5ndGgpO1xuICAgIGNvbnNvbGUubG9nKFxuICAgICAgYCVjW0NPTlZFWCAke3ByZWZpeH0oJHt1ZGZQYXRofSldIFske2xldmVsfV1gLFxuICAgICAgSU5GT19DT0xPUixcbiAgICAgIGFyZ3NcbiAgICApO1xuICB9IGVsc2Uge1xuICAgIGNvbnNvbGUuZXJyb3IoYFtDT05WRVggJHtwcmVmaXh9KCR7dWRmUGF0aH0pXSAke21lc3NhZ2V9YCk7XG4gIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBsb2dGYXRhbEVycm9yKG1lc3NhZ2UpIHtcbiAgY29uc3QgZXJyb3JNZXNzYWdlID0gYFtDT05WRVggRkFUQUwgRVJST1JdICR7bWVzc2FnZX1gO1xuICBjb25zb2xlLmVycm9yKGVycm9yTWVzc2FnZSk7XG4gIHJldHVybiBuZXcgRXJyb3IoZXJyb3JNZXNzYWdlKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVIeWJyaWRFcnJvclN0YWNrdHJhY2Uoc291cmNlLCB1ZGZQYXRoLCByZXN1bHQpIHtcbiAgY29uc3QgcHJlZml4ID0gcHJlZml4X2Zvcl9zb3VyY2Uoc291cmNlKTtcbiAgcmV0dXJuIGBbQ09OVkVYICR7cHJlZml4fSgke3VkZlBhdGh9KV0gJHtyZXN1bHQuZXJyb3JNZXNzYWdlfVxuICBDYWxsZWQgYnkgY2xpZW50YDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmb3J3YXJkRGF0YShyZXN1bHQsIGVycm9yKSB7XG4gIGVycm9yLmRhdGEgPSByZXN1bHQuZXJyb3JEYXRhO1xuICByZXR1cm4gZXJyb3I7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sb2dnaW5nLmpzLm1hcFxuIl0sIm5hbWVzIjpbIklORk9fQ09MT1IiLCJwcmVmaXhfZm9yX3NvdXJjZSIsInNvdXJjZSIsImxvZ1RvQ29uc29sZSIsInR5cGUiLCJ1ZGZQYXRoIiwibWVzc2FnZSIsInByZWZpeCIsIkpTT04iLCJzdHJpbmdpZnkiLCJlcnJvckRhdGEiLCJtYXRjaCIsImNvbnNvbGUiLCJlcnJvciIsImxldmVsIiwic2xpY2UiLCJsZW5ndGgiLCJhcmdzIiwibG9nIiwibG9nRmF0YWxFcnJvciIsImVycm9yTWVzc2FnZSIsIkVycm9yIiwiY3JlYXRlSHlicmlkRXJyb3JTdGFja3RyYWNlIiwicmVzdWx0IiwiZm9yd2FyZERhdGEiLCJkYXRhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/logging.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/long.js":
/*!******************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/long.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Long: () => (/* binding */ Long)\n/* harmony export */ });\n\nclass Long {\n    static isLong(obj) {\n        return (obj && obj.__isUnsignedLong__) === true;\n    }\n    constructor(low, high){\n        this.low = low | 0;\n        this.high = high | 0;\n        this.__isUnsignedLong__ = true;\n    }\n    // prettier-ignore\n    static fromBytesLE(bytes) {\n        return new Long(bytes[0] | bytes[1] << 8 | bytes[2] << 16 | bytes[3] << 24, bytes[4] | bytes[5] << 8 | bytes[6] << 16 | bytes[7] << 24);\n    }\n    // prettier-ignore\n    toBytesLE() {\n        const hi = this.high;\n        const lo = this.low;\n        return [\n            lo & 255,\n            lo >>> 8 & 255,\n            lo >>> 16 & 255,\n            lo >>> 24,\n            hi & 255,\n            hi >>> 8 & 255,\n            hi >>> 16 & 255,\n            hi >>> 24\n        ];\n    }\n    static fromNumber(value) {\n        if (isNaN(value)) return UZERO;\n        if (value < 0) return UZERO;\n        if (value >= TWO_PWR_64_DBL) return MAX_UNSIGNED_VALUE;\n        return new Long(value % TWO_PWR_32_DBL | 0, value / TWO_PWR_32_DBL | 0);\n    }\n    toString() {\n        return (BigInt(this.high) * BigInt(TWO_PWR_32_DBL) + BigInt(this.low)).toString();\n    }\n    equals(other) {\n        if (!Long.isLong(other)) other = Long.fromValue(other);\n        if (this.high >>> 31 === 1 && other.high >>> 31 === 1) return false;\n        return this.high === other.high && this.low === other.low;\n    }\n    notEquals(other) {\n        return !this.equals(other);\n    }\n    comp(other) {\n        if (!Long.isLong(other)) other = Long.fromValue(other);\n        if (this.equals(other)) return 0;\n        return other.high >>> 0 > this.high >>> 0 || other.high === this.high && other.low >>> 0 > this.low >>> 0 ? -1 : 1;\n    }\n    lessThanOrEqual(other) {\n        return this.comp(/* validates */ other) <= 0;\n    }\n    static fromValue(val) {\n        if (typeof val === \"number\") return Long.fromNumber(val);\n        return new Long(val.low, val.high);\n    }\n}\nconst UZERO = new Long(0, 0);\nconst TWO_PWR_16_DBL = 1 << 16;\nconst TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\nconst TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\nconst MAX_UNSIGNED_VALUE = new Long(4294967295 | 0, 4294967295 | 0); //# sourceMappingURL=long.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvbG9uZy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWE7QUFDTixNQUFNQTtJQUNYLE9BQU9DLE9BQU9DLEdBQUcsRUFBRTtRQUNqQixPQUFPLENBQUNBLE9BQU9BLElBQUlDLGtCQUFrQixNQUFNO0lBQzdDO0lBQ0FDLFlBQVlDLEdBQUcsRUFBRUMsSUFBSSxDQUFFO1FBQ3JCLElBQUksQ0FBQ0QsR0FBRyxHQUFHQSxNQUFNO1FBQ2pCLElBQUksQ0FBQ0MsSUFBSSxHQUFHQSxPQUFPO1FBQ25CLElBQUksQ0FBQ0gsa0JBQWtCLEdBQUc7SUFDNUI7SUFDQSxrQkFBa0I7SUFDbEIsT0FBT0ksWUFBWUMsS0FBSyxFQUFFO1FBQ3hCLE9BQU8sSUFBSVIsS0FDVFEsS0FBSyxDQUFDLEVBQUUsR0FBR0EsS0FBSyxDQUFDLEVBQUUsSUFBSSxJQUFJQSxLQUFLLENBQUMsRUFBRSxJQUFJLEtBQUtBLEtBQUssQ0FBQyxFQUFFLElBQUksSUFDeERBLEtBQUssQ0FBQyxFQUFFLEdBQUdBLEtBQUssQ0FBQyxFQUFFLElBQUksSUFBSUEsS0FBSyxDQUFDLEVBQUUsSUFBSSxLQUFLQSxLQUFLLENBQUMsRUFBRSxJQUFJO0lBRTVEO0lBQ0Esa0JBQWtCO0lBQ2xCQyxZQUFZO1FBQ1YsTUFBTUMsS0FBSyxJQUFJLENBQUNKLElBQUk7UUFDcEIsTUFBTUssS0FBSyxJQUFJLENBQUNOLEdBQUc7UUFDbkIsT0FBTztZQUNMTSxLQUFLO1lBQ0xBLE9BQU8sSUFBSTtZQUNYQSxPQUFPLEtBQUs7WUFDWkEsT0FBTztZQUNQRCxLQUFLO1lBQ0xBLE9BQU8sSUFBSTtZQUNYQSxPQUFPLEtBQUs7WUFDWkEsT0FBTztTQUNSO0lBQ0g7SUFDQSxPQUFPRSxXQUFXQyxLQUFLLEVBQUU7UUFDdkIsSUFBSUMsTUFBTUQsUUFDUixPQUFPRTtRQUNULElBQUlGLFFBQVEsR0FDVixPQUFPRTtRQUNULElBQUlGLFNBQVNHLGdCQUNYLE9BQU9DO1FBQ1QsT0FBTyxJQUFJakIsS0FBS2EsUUFBUUssaUJBQWlCLEdBQUdMLFFBQVFLLGlCQUFpQjtJQUN2RTtJQUNBQyxXQUFXO1FBQ1QsT0FBTyxDQUFDQyxPQUFPLElBQUksQ0FBQ2QsSUFBSSxJQUFJYyxPQUFPRixrQkFBa0JFLE9BQU8sSUFBSSxDQUFDZixHQUFHLEdBQUdjLFFBQVE7SUFDakY7SUFDQUUsT0FBT0MsS0FBSyxFQUFFO1FBQ1osSUFBSSxDQUFDdEIsS0FBS0MsTUFBTSxDQUFDcUIsUUFDZkEsUUFBUXRCLEtBQUt1QixTQUFTLENBQUNEO1FBQ3pCLElBQUksSUFBSSxDQUFDaEIsSUFBSSxLQUFLLE9BQU8sS0FBS2dCLE1BQU1oQixJQUFJLEtBQUssT0FBTyxHQUNsRCxPQUFPO1FBQ1QsT0FBTyxJQUFJLENBQUNBLElBQUksS0FBS2dCLE1BQU1oQixJQUFJLElBQUksSUFBSSxDQUFDRCxHQUFHLEtBQUtpQixNQUFNakIsR0FBRztJQUMzRDtJQUNBbUIsVUFBVUYsS0FBSyxFQUFFO1FBQ2YsT0FBTyxDQUFDLElBQUksQ0FBQ0QsTUFBTSxDQUFDQztJQUN0QjtJQUNBRyxLQUFLSCxLQUFLLEVBQUU7UUFDVixJQUFJLENBQUN0QixLQUFLQyxNQUFNLENBQUNxQixRQUNmQSxRQUFRdEIsS0FBS3VCLFNBQVMsQ0FBQ0Q7UUFDekIsSUFBSSxJQUFJLENBQUNELE1BQU0sQ0FBQ0MsUUFDZCxPQUFPO1FBQ1QsT0FBT0EsTUFBTWhCLElBQUksS0FBSyxJQUFJLElBQUksQ0FBQ0EsSUFBSSxLQUFLLEtBQUtnQixNQUFNaEIsSUFBSSxLQUFLLElBQUksQ0FBQ0EsSUFBSSxJQUFJZ0IsTUFBTWpCLEdBQUcsS0FBSyxJQUFJLElBQUksQ0FBQ0EsR0FBRyxLQUFLLElBQUksQ0FBQyxJQUFJO0lBQ25IO0lBQ0FxQixnQkFBZ0JKLEtBQUssRUFBRTtRQUNyQixPQUFPLElBQUksQ0FBQ0csSUFBSSxDQUNkLGFBQWEsR0FDYkgsVUFDRztJQUNQO0lBQ0EsT0FBT0MsVUFBVUksR0FBRyxFQUFFO1FBQ3BCLElBQUksT0FBT0EsUUFBUSxVQUNqQixPQUFPM0IsS0FBS1ksVUFBVSxDQUFDZTtRQUN6QixPQUFPLElBQUkzQixLQUFLMkIsSUFBSXRCLEdBQUcsRUFBRXNCLElBQUlyQixJQUFJO0lBQ25DO0FBQ0Y7QUFDQSxNQUFNUyxRQUFRLElBQUlmLEtBQUssR0FBRztBQUMxQixNQUFNNEIsaUJBQWlCLEtBQUs7QUFDNUIsTUFBTVYsaUJBQWlCVSxpQkFBaUJBO0FBQ3hDLE1BQU1aLGlCQUFpQkUsaUJBQWlCQTtBQUN4QyxNQUFNRCxxQkFBcUIsSUFBSWpCLEtBQUssYUFBYSxHQUFHLGFBQWEsSUFDakUsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXJhc29yX2Nsb25lLy4vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9icm93c2VyL2xvbmcuanM/MmIzNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmV4cG9ydCBjbGFzcyBMb25nIHtcbiAgc3RhdGljIGlzTG9uZyhvYmopIHtcbiAgICByZXR1cm4gKG9iaiAmJiBvYmouX19pc1Vuc2lnbmVkTG9uZ19fKSA9PT0gdHJ1ZTtcbiAgfVxuICBjb25zdHJ1Y3Rvcihsb3csIGhpZ2gpIHtcbiAgICB0aGlzLmxvdyA9IGxvdyB8IDA7XG4gICAgdGhpcy5oaWdoID0gaGlnaCB8IDA7XG4gICAgdGhpcy5fX2lzVW5zaWduZWRMb25nX18gPSB0cnVlO1xuICB9XG4gIC8vIHByZXR0aWVyLWlnbm9yZVxuICBzdGF0aWMgZnJvbUJ5dGVzTEUoYnl0ZXMpIHtcbiAgICByZXR1cm4gbmV3IExvbmcoXG4gICAgICBieXRlc1swXSB8IGJ5dGVzWzFdIDw8IDggfCBieXRlc1syXSA8PCAxNiB8IGJ5dGVzWzNdIDw8IDI0LFxuICAgICAgYnl0ZXNbNF0gfCBieXRlc1s1XSA8PCA4IHwgYnl0ZXNbNl0gPDwgMTYgfCBieXRlc1s3XSA8PCAyNFxuICAgICk7XG4gIH1cbiAgLy8gcHJldHRpZXItaWdub3JlXG4gIHRvQnl0ZXNMRSgpIHtcbiAgICBjb25zdCBoaSA9IHRoaXMuaGlnaDtcbiAgICBjb25zdCBsbyA9IHRoaXMubG93O1xuICAgIHJldHVybiBbXG4gICAgICBsbyAmIDI1NSxcbiAgICAgIGxvID4+PiA4ICYgMjU1LFxuICAgICAgbG8gPj4+IDE2ICYgMjU1LFxuICAgICAgbG8gPj4+IDI0LFxuICAgICAgaGkgJiAyNTUsXG4gICAgICBoaSA+Pj4gOCAmIDI1NSxcbiAgICAgIGhpID4+PiAxNiAmIDI1NSxcbiAgICAgIGhpID4+PiAyNFxuICAgIF07XG4gIH1cbiAgc3RhdGljIGZyb21OdW1iZXIodmFsdWUpIHtcbiAgICBpZiAoaXNOYU4odmFsdWUpKVxuICAgICAgcmV0dXJuIFVaRVJPO1xuICAgIGlmICh2YWx1ZSA8IDApXG4gICAgICByZXR1cm4gVVpFUk87XG4gICAgaWYgKHZhbHVlID49IFRXT19QV1JfNjRfREJMKVxuICAgICAgcmV0dXJuIE1BWF9VTlNJR05FRF9WQUxVRTtcbiAgICByZXR1cm4gbmV3IExvbmcodmFsdWUgJSBUV09fUFdSXzMyX0RCTCB8IDAsIHZhbHVlIC8gVFdPX1BXUl8zMl9EQkwgfCAwKTtcbiAgfVxuICB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gKEJpZ0ludCh0aGlzLmhpZ2gpICogQmlnSW50KFRXT19QV1JfMzJfREJMKSArIEJpZ0ludCh0aGlzLmxvdykpLnRvU3RyaW5nKCk7XG4gIH1cbiAgZXF1YWxzKG90aGVyKSB7XG4gICAgaWYgKCFMb25nLmlzTG9uZyhvdGhlcikpXG4gICAgICBvdGhlciA9IExvbmcuZnJvbVZhbHVlKG90aGVyKTtcbiAgICBpZiAodGhpcy5oaWdoID4+PiAzMSA9PT0gMSAmJiBvdGhlci5oaWdoID4+PiAzMSA9PT0gMSlcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gdGhpcy5oaWdoID09PSBvdGhlci5oaWdoICYmIHRoaXMubG93ID09PSBvdGhlci5sb3c7XG4gIH1cbiAgbm90RXF1YWxzKG90aGVyKSB7XG4gICAgcmV0dXJuICF0aGlzLmVxdWFscyhvdGhlcik7XG4gIH1cbiAgY29tcChvdGhlcikge1xuICAgIGlmICghTG9uZy5pc0xvbmcob3RoZXIpKVxuICAgICAgb3RoZXIgPSBMb25nLmZyb21WYWx1ZShvdGhlcik7XG4gICAgaWYgKHRoaXMuZXF1YWxzKG90aGVyKSlcbiAgICAgIHJldHVybiAwO1xuICAgIHJldHVybiBvdGhlci5oaWdoID4+PiAwID4gdGhpcy5oaWdoID4+PiAwIHx8IG90aGVyLmhpZ2ggPT09IHRoaXMuaGlnaCAmJiBvdGhlci5sb3cgPj4+IDAgPiB0aGlzLmxvdyA+Pj4gMCA/IC0xIDogMTtcbiAgfVxuICBsZXNzVGhhbk9yRXF1YWwob3RoZXIpIHtcbiAgICByZXR1cm4gdGhpcy5jb21wKFxuICAgICAgLyogdmFsaWRhdGVzICovXG4gICAgICBvdGhlclxuICAgICkgPD0gMDtcbiAgfVxuICBzdGF0aWMgZnJvbVZhbHVlKHZhbCkge1xuICAgIGlmICh0eXBlb2YgdmFsID09PSBcIm51bWJlclwiKVxuICAgICAgcmV0dXJuIExvbmcuZnJvbU51bWJlcih2YWwpO1xuICAgIHJldHVybiBuZXcgTG9uZyh2YWwubG93LCB2YWwuaGlnaCk7XG4gIH1cbn1cbmNvbnN0IFVaRVJPID0gbmV3IExvbmcoMCwgMCk7XG5jb25zdCBUV09fUFdSXzE2X0RCTCA9IDEgPDwgMTY7XG5jb25zdCBUV09fUFdSXzMyX0RCTCA9IFRXT19QV1JfMTZfREJMICogVFdPX1BXUl8xNl9EQkw7XG5jb25zdCBUV09fUFdSXzY0X0RCTCA9IFRXT19QV1JfMzJfREJMICogVFdPX1BXUl8zMl9EQkw7XG5jb25zdCBNQVhfVU5TSUdORURfVkFMVUUgPSBuZXcgTG9uZyg0Mjk0OTY3Mjk1IHwgMCwgNDI5NDk2NzI5NSB8IDApO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9uZy5qcy5tYXBcbiJdLCJuYW1lcyI6WyJMb25nIiwiaXNMb25nIiwib2JqIiwiX19pc1Vuc2lnbmVkTG9uZ19fIiwiY29uc3RydWN0b3IiLCJsb3ciLCJoaWdoIiwiZnJvbUJ5dGVzTEUiLCJieXRlcyIsInRvQnl0ZXNMRSIsImhpIiwibG8iLCJmcm9tTnVtYmVyIiwidmFsdWUiLCJpc05hTiIsIlVaRVJPIiwiVFdPX1BXUl82NF9EQkwiLCJNQVhfVU5TSUdORURfVkFMVUUiLCJUV09fUFdSXzMyX0RCTCIsInRvU3RyaW5nIiwiQmlnSW50IiwiZXF1YWxzIiwib3RoZXIiLCJmcm9tVmFsdWUiLCJub3RFcXVhbHMiLCJjb21wIiwibGVzc1RoYW5PckVxdWFsIiwidmFsIiwiVFdPX1BXUl8xNl9EQkwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/long.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/simple_client.js":
/*!***************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/simple_client.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConvexClient: () => (/* binding */ ConvexClient),\n/* harmony export */   setDefaultWebSocketConstructor: () => (/* binding */ setDefaultWebSocketConstructor)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/index.js */ \"(ssr)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/index.js\");\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../server/api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n\n\n\n\nlet defaultWebSocketConstructor;\nfunction setDefaultWebSocketConstructor(ws) {\n    defaultWebSocketConstructor = ws;\n}\nclass ConvexClient {\n    /**\n   * Once closed no registered callbacks will fire again.\n   */ get closed() {\n        return this._closed;\n    }\n    get client() {\n        if (this._client) return this._client;\n        throw new Error(\"ConvexClient is disabled\");\n    }\n    /**\n   * Construct a client and immediately initiate a WebSocket connection to the passed address.\n   *\n   * @public\n   */ constructor(address, options = {}){\n        (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.validateDeploymentUrl)(address);\n        const { disabled, ...baseOptions } = options;\n        this._closed = false;\n        this.disabled = !!disabled;\n        if (defaultWebSocketConstructor && !(\"webSocketConstructor\" in baseOptions) && typeof WebSocket === \"undefined\") {\n            baseOptions.webSocketConstructor = defaultWebSocketConstructor;\n        }\n        if ( true && !(\"unsavedChangesWarning\" in baseOptions)) {\n            baseOptions.unsavedChangesWarning = false;\n        }\n        if (!this.disabled) {\n            this._client = new _index_js__WEBPACK_IMPORTED_MODULE_1__.BaseConvexClient(address, (updatedQueries)=>this._transition(updatedQueries), baseOptions);\n        }\n        this.listeners = /* @__PURE__ */ new Set();\n    }\n    /**\n   * Call a callback whenever a new result for a query is received. The callback\n   * will run soon after being registered if a result for the query is already\n   * in memory.\n   *\n   * The return value is an {@link Unsubscribe} object which is both a function\n   * an an object with properties. Both of the patterns below work with this object:\n   *\n   *```ts\n   * // call the return value as a function\n   * const unsubscribe = client.onUpdate(api.messages.list, {}, (messages) => {\n   *   console.log(messages);\n   * });\n   * unsubscribe();\n   *\n   * // unpack the return value into its properties\n   * const {\n   *   getCurrentValue,\n   *   unsubscribe,\n   * } = client.onUpdate(api.messages.list, {}, (messages) => {\n   *   console.log(messages);\n   * });\n   *```\n   *\n   * @param query - A {@link server.FunctionReference} for the public query to run.\n   * @param args - The arguments to run the query with.\n   * @param callback - Function to call when the query result updates.\n   * @param onError - Function to call when the query result updates with an error.\n   * If not provided, errors will be thrown instead of calling the callback.\n   *\n   * @return an {@link Unsubscribe} function to stop calling the onUpdate function.\n   */ onUpdate(query, args, callback, onError) {\n        if (this.disabled) {\n            const disabledUnsubscribe = ()=>{};\n            const unsubscribeProps2 = {\n                unsubscribe: disabledUnsubscribe,\n                getCurrentValue: ()=>void 0,\n                getQueryLogs: ()=>void 0\n            };\n            Object.assign(disabledUnsubscribe, unsubscribeProps2);\n            return disabledUnsubscribe;\n        }\n        const { queryToken, unsubscribe } = this.client.subscribe((0,_server_api_js__WEBPACK_IMPORTED_MODULE_2__.getFunctionName)(query), args);\n        const queryInfo = {\n            queryToken,\n            callback,\n            onError,\n            unsubscribe,\n            hasEverRun: false,\n            query,\n            args\n        };\n        this.listeners.add(queryInfo);\n        if (this.queryResultReady(queryToken) && this.callNewListenersWithCurrentValuesTimer === void 0) {\n            this.callNewListenersWithCurrentValuesTimer = setTimeout(()=>this.callNewListenersWithCurrentValues(), 0);\n        }\n        const unsubscribeProps = {\n            unsubscribe: ()=>{\n                if (this.closed) {\n                    return;\n                }\n                this.listeners.delete(queryInfo);\n                unsubscribe();\n            },\n            getCurrentValue: ()=>this.client.localQueryResultByToken(queryToken),\n            getQueryLogs: ()=>this.client.localQueryLogs(queryToken)\n        };\n        const ret = unsubscribeProps.unsubscribe;\n        Object.assign(ret, unsubscribeProps);\n        return ret;\n    }\n    // Run all callbacks that have never been run before if they have a query\n    // result available now.\n    callNewListenersWithCurrentValues() {\n        this.callNewListenersWithCurrentValuesTimer = void 0;\n        this._transition([], true);\n    }\n    queryResultReady(queryToken) {\n        return this.client.hasLocalQueryResultByToken(queryToken);\n    }\n    async close() {\n        if (this.disabled) return;\n        this.listeners.clear();\n        this._closed = true;\n        return this.client.close();\n    }\n    /**\n   * Set the authentication token to be used for subsequent queries and mutations.\n   * `fetchToken` will be called automatically again if a token expires.\n   * `fetchToken` should return `null` if the token cannot be retrieved, for example\n   * when the user's rights were permanently revoked.\n   * @param fetchToken - an async function returning the JWT-encoded OpenID Connect Identity Token\n   * @param onChange - a callback that will be called when the authentication status changes\n   */ setAuth(fetchToken, onChange) {\n        this.client.setAuth(fetchToken, onChange ?? (()=>{}));\n    }\n    /**\n   * @internal\n   */ setAdminAuth(token, identity) {\n        if (this.closed) {\n            throw new Error(\"ConvexClient has already been closed.\");\n        }\n        if (this.disabled) return;\n        this.client.setAdminAuth(token, identity);\n    }\n    /**\n   * @internal\n   */ _transition(updatedQueries, callNewListeners = false) {\n        for (const queryInfo of this.listeners){\n            const { callback, queryToken, onError, hasEverRun } = queryInfo;\n            if (updatedQueries.includes(queryToken) || callNewListeners && !hasEverRun && this.client.hasLocalQueryResultByToken(queryToken)) {\n                queryInfo.hasEverRun = true;\n                let newValue;\n                try {\n                    newValue = this.client.localQueryResultByToken(queryToken);\n                } catch (error) {\n                    if (!(error instanceof Error)) throw error;\n                    if (onError) {\n                        onError(error, \"Second argument to onUpdate onError is reserved for later use\");\n                    } else {\n                        void Promise.reject(error);\n                    }\n                    continue;\n                }\n                callback(newValue, \"Second argument to onUpdate callback is reserved for later use\");\n            }\n        }\n    }\n    /**\n   * Execute a mutation function.\n   *\n   * @param mutation - A {@link server.FunctionReference} for the public mutation\n   * to run.\n   * @param args - An arguments object for the mutation.\n   * @param options - A {@link MutationOptions} options object for the mutation.\n   * @returns A promise of the mutation's result.\n   */ async mutation(mutation, args) {\n        if (this.disabled) throw new Error(\"ConvexClient is disabled\");\n        return await this.client.mutation((0,_server_api_js__WEBPACK_IMPORTED_MODULE_2__.getFunctionName)(mutation), args);\n    }\n    /**\n   * Execute an action function.\n   *\n   * @param action - A {@link server.FunctionReference} for the public action\n   * to run.\n   * @param args - An arguments object for the action.\n   * @returns A promise of the action's result.\n   */ async action(action, args) {\n        if (this.disabled) throw new Error(\"ConvexClient is disabled\");\n        return await this.client.action((0,_server_api_js__WEBPACK_IMPORTED_MODULE_2__.getFunctionName)(action), args);\n    }\n    /**\n   * Fetch a query result once.\n   *\n   * @param query - A {@link server.FunctionReference} for the public query\n   * to run.\n   * @param args - An arguments object for the query.\n   * @returns A promise of the query's result.\n   */ async query(query, args) {\n        if (this.disabled) throw new Error(\"ConvexClient is disabled\");\n        const value = this.client.localQueryResult((0,_server_api_js__WEBPACK_IMPORTED_MODULE_2__.getFunctionName)(query), args);\n        if (value !== void 0) return value;\n        return new Promise((resolve, reject)=>{\n            const { unsubscribe } = this.onUpdate(query, args, (value2)=>{\n                unsubscribe();\n                resolve(value2);\n            }, (e)=>{\n                unsubscribe();\n                reject(e);\n            });\n        });\n    }\n} //# sourceMappingURL=simple_client.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc2ltcGxlX2NsaWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFhO0FBQzhDO0FBR3ZDO0FBQytCO0FBQ25ELElBQUlHO0FBQ0csU0FBU0MsK0JBQStCQyxFQUFFO0lBQy9DRiw4QkFBOEJFO0FBQ2hDO0FBQ08sTUFBTUM7SUFDWDs7R0FFQyxHQUNELElBQUlDLFNBQVM7UUFDWCxPQUFPLElBQUksQ0FBQ0MsT0FBTztJQUNyQjtJQUNBLElBQUlDLFNBQVM7UUFDWCxJQUFJLElBQUksQ0FBQ0MsT0FBTyxFQUNkLE9BQU8sSUFBSSxDQUFDQSxPQUFPO1FBQ3JCLE1BQU0sSUFBSUMsTUFBTTtJQUNsQjtJQUNBOzs7O0dBSUMsR0FDREMsWUFBWUMsT0FBTyxFQUFFQyxVQUFVLENBQUMsQ0FBQyxDQUFFO1FBQ2pDZCx1RUFBcUJBLENBQUNhO1FBQ3RCLE1BQU0sRUFBRUUsUUFBUSxFQUFFLEdBQUdDLGFBQWEsR0FBR0Y7UUFDckMsSUFBSSxDQUFDTixPQUFPLEdBQUc7UUFDZixJQUFJLENBQUNPLFFBQVEsR0FBRyxDQUFDLENBQUNBO1FBQ2xCLElBQUlaLCtCQUErQixDQUFFLDJCQUEwQmEsV0FBVSxLQUFNLE9BQU9DLGNBQWMsYUFBYTtZQUMvR0QsWUFBWUUsb0JBQW9CLEdBQUdmO1FBQ3JDO1FBQ0EsSUFBSSxLQUE2QixJQUFJLENBQUUsNEJBQTJCYSxXQUFVLEdBQUk7WUFDOUVBLFlBQVlHLHFCQUFxQixHQUFHO1FBQ3RDO1FBQ0EsSUFBSSxDQUFDLElBQUksQ0FBQ0osUUFBUSxFQUFFO1lBQ2xCLElBQUksQ0FBQ0wsT0FBTyxHQUFHLElBQUlULHVEQUFnQkEsQ0FDakNZLFNBQ0EsQ0FBQ08saUJBQW1CLElBQUksQ0FBQ0MsV0FBVyxDQUFDRCxpQkFDckNKO1FBRUo7UUFDQSxJQUFJLENBQUNNLFNBQVMsR0FBRyxhQUFhLEdBQUcsSUFBSUM7SUFDdkM7SUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQStCQyxHQUNEQyxTQUFTQyxLQUFLLEVBQUVDLElBQUksRUFBRUMsUUFBUSxFQUFFQyxPQUFPLEVBQUU7UUFDdkMsSUFBSSxJQUFJLENBQUNiLFFBQVEsRUFBRTtZQUNqQixNQUFNYyxzQkFBc0IsS0FDNUI7WUFDQSxNQUFNQyxvQkFBb0I7Z0JBQ3hCQyxhQUFhRjtnQkFDYkcsaUJBQWlCLElBQU0sS0FBSztnQkFDNUJDLGNBQWMsSUFBTSxLQUFLO1lBQzNCO1lBQ0FDLE9BQU9DLE1BQU0sQ0FBQ04scUJBQXFCQztZQUNuQyxPQUFPRDtRQUNUO1FBQ0EsTUFBTSxFQUFFTyxVQUFVLEVBQUVMLFdBQVcsRUFBRSxHQUFHLElBQUksQ0FBQ3RCLE1BQU0sQ0FBQzRCLFNBQVMsQ0FDdkRuQywrREFBZUEsQ0FBQ3VCLFFBQ2hCQztRQUVGLE1BQU1ZLFlBQVk7WUFDaEJGO1lBQ0FUO1lBQ0FDO1lBQ0FHO1lBQ0FRLFlBQVk7WUFDWmQ7WUFDQUM7UUFDRjtRQUNBLElBQUksQ0FBQ0osU0FBUyxDQUFDa0IsR0FBRyxDQUFDRjtRQUNuQixJQUFJLElBQUksQ0FBQ0csZ0JBQWdCLENBQUNMLGVBQWUsSUFBSSxDQUFDTSxzQ0FBc0MsS0FBSyxLQUFLLEdBQUc7WUFDL0YsSUFBSSxDQUFDQSxzQ0FBc0MsR0FBR0MsV0FDNUMsSUFBTSxJQUFJLENBQUNDLGlDQUFpQyxJQUM1QztRQUVKO1FBQ0EsTUFBTUMsbUJBQW1CO1lBQ3ZCZCxhQUFhO2dCQUNYLElBQUksSUFBSSxDQUFDeEIsTUFBTSxFQUFFO29CQUNmO2dCQUNGO2dCQUNBLElBQUksQ0FBQ2UsU0FBUyxDQUFDd0IsTUFBTSxDQUFDUjtnQkFDdEJQO1lBQ0Y7WUFDQUMsaUJBQWlCLElBQU0sSUFBSSxDQUFDdkIsTUFBTSxDQUFDc0MsdUJBQXVCLENBQUNYO1lBQzNESCxjQUFjLElBQU0sSUFBSSxDQUFDeEIsTUFBTSxDQUFDdUMsY0FBYyxDQUFDWjtRQUNqRDtRQUNBLE1BQU1hLE1BQU1KLGlCQUFpQmQsV0FBVztRQUN4Q0csT0FBT0MsTUFBTSxDQUFDYyxLQUFLSjtRQUNuQixPQUFPSTtJQUNUO0lBQ0EseUVBQXlFO0lBQ3pFLHdCQUF3QjtJQUN4Qkwsb0NBQW9DO1FBQ2xDLElBQUksQ0FBQ0Ysc0NBQXNDLEdBQUcsS0FBSztRQUNuRCxJQUFJLENBQUNyQixXQUFXLENBQUMsRUFBRSxFQUFFO0lBQ3ZCO0lBQ0FvQixpQkFBaUJMLFVBQVUsRUFBRTtRQUMzQixPQUFPLElBQUksQ0FBQzNCLE1BQU0sQ0FBQ3lDLDBCQUEwQixDQUFDZDtJQUNoRDtJQUNBLE1BQU1lLFFBQVE7UUFDWixJQUFJLElBQUksQ0FBQ3BDLFFBQVEsRUFDZjtRQUNGLElBQUksQ0FBQ08sU0FBUyxDQUFDOEIsS0FBSztRQUNwQixJQUFJLENBQUM1QyxPQUFPLEdBQUc7UUFDZixPQUFPLElBQUksQ0FBQ0MsTUFBTSxDQUFDMEMsS0FBSztJQUMxQjtJQUNBOzs7Ozs7O0dBT0MsR0FDREUsUUFBUUMsVUFBVSxFQUFFQyxRQUFRLEVBQUU7UUFDNUIsSUFBSSxDQUFDOUMsTUFBTSxDQUFDNEMsT0FBTyxDQUNqQkMsWUFDQUMsWUFBYSxNQUNiO0lBRUo7SUFDQTs7R0FFQyxHQUNEQyxhQUFhQyxLQUFLLEVBQUVDLFFBQVEsRUFBRTtRQUM1QixJQUFJLElBQUksQ0FBQ25ELE1BQU0sRUFBRTtZQUNmLE1BQU0sSUFBSUksTUFBTTtRQUNsQjtRQUNBLElBQUksSUFBSSxDQUFDSSxRQUFRLEVBQ2Y7UUFDRixJQUFJLENBQUNOLE1BQU0sQ0FBQytDLFlBQVksQ0FBQ0MsT0FBT0M7SUFDbEM7SUFDQTs7R0FFQyxHQUNEckMsWUFBWUQsY0FBYyxFQUFFdUMsbUJBQW1CLEtBQUssRUFBRTtRQUNwRCxLQUFLLE1BQU1yQixhQUFhLElBQUksQ0FBQ2hCLFNBQVMsQ0FBRTtZQUN0QyxNQUFNLEVBQUVLLFFBQVEsRUFBRVMsVUFBVSxFQUFFUixPQUFPLEVBQUVXLFVBQVUsRUFBRSxHQUFHRDtZQUN0RCxJQUFJbEIsZUFBZXdDLFFBQVEsQ0FBQ3hCLGVBQWV1QixvQkFBb0IsQ0FBQ3BCLGNBQWMsSUFBSSxDQUFDOUIsTUFBTSxDQUFDeUMsMEJBQTBCLENBQUNkLGFBQWE7Z0JBQ2hJRSxVQUFVQyxVQUFVLEdBQUc7Z0JBQ3ZCLElBQUlzQjtnQkFDSixJQUFJO29CQUNGQSxXQUFXLElBQUksQ0FBQ3BELE1BQU0sQ0FBQ3NDLHVCQUF1QixDQUFDWDtnQkFDakQsRUFBRSxPQUFPMEIsT0FBTztvQkFDZCxJQUFJLENBQUVBLENBQUFBLGlCQUFpQm5ELEtBQUksR0FDekIsTUFBTW1EO29CQUNSLElBQUlsQyxTQUFTO3dCQUNYQSxRQUNFa0MsT0FDQTtvQkFFSixPQUFPO3dCQUNMLEtBQUtDLFFBQVFDLE1BQU0sQ0FBQ0Y7b0JBQ3RCO29CQUNBO2dCQUNGO2dCQUNBbkMsU0FDRWtDLFVBQ0E7WUFFSjtRQUNGO0lBQ0Y7SUFDQTs7Ozs7Ozs7R0FRQyxHQUNELE1BQU1JLFNBQVNBLFFBQVEsRUFBRXZDLElBQUksRUFBRTtRQUM3QixJQUFJLElBQUksQ0FBQ1gsUUFBUSxFQUNmLE1BQU0sSUFBSUosTUFBTTtRQUNsQixPQUFPLE1BQU0sSUFBSSxDQUFDRixNQUFNLENBQUN3RCxRQUFRLENBQUMvRCwrREFBZUEsQ0FBQytELFdBQVd2QztJQUMvRDtJQUNBOzs7Ozs7O0dBT0MsR0FDRCxNQUFNd0MsT0FBT0EsTUFBTSxFQUFFeEMsSUFBSSxFQUFFO1FBQ3pCLElBQUksSUFBSSxDQUFDWCxRQUFRLEVBQ2YsTUFBTSxJQUFJSixNQUFNO1FBQ2xCLE9BQU8sTUFBTSxJQUFJLENBQUNGLE1BQU0sQ0FBQ3lELE1BQU0sQ0FBQ2hFLCtEQUFlQSxDQUFDZ0UsU0FBU3hDO0lBQzNEO0lBQ0E7Ozs7Ozs7R0FPQyxHQUNELE1BQU1ELE1BQU1BLEtBQUssRUFBRUMsSUFBSSxFQUFFO1FBQ3ZCLElBQUksSUFBSSxDQUFDWCxRQUFRLEVBQ2YsTUFBTSxJQUFJSixNQUFNO1FBQ2xCLE1BQU13RCxRQUFRLElBQUksQ0FBQzFELE1BQU0sQ0FBQzJELGdCQUFnQixDQUFDbEUsK0RBQWVBLENBQUN1QixRQUFRQztRQUNuRSxJQUFJeUMsVUFBVSxLQUFLLEdBQ2pCLE9BQU9BO1FBQ1QsT0FBTyxJQUFJSixRQUFRLENBQUNNLFNBQVNMO1lBQzNCLE1BQU0sRUFBRWpDLFdBQVcsRUFBRSxHQUFHLElBQUksQ0FBQ1AsUUFBUSxDQUNuQ0MsT0FDQUMsTUFDQSxDQUFDNEM7Z0JBQ0N2QztnQkFDQXNDLFFBQVFDO1lBQ1YsR0FDQSxDQUFDQztnQkFDQ3hDO2dCQUNBaUMsT0FBT087WUFDVDtRQUVKO0lBQ0Y7QUFDRixFQUNBLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL2VyYXNvcl9jbG9uZS8uL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vYnJvd3Nlci9zaW1wbGVfY2xpZW50LmpzPzMyM2MiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5pbXBvcnQgeyB2YWxpZGF0ZURlcGxveW1lbnRVcmwgfSBmcm9tIFwiLi4vY29tbW9uL2luZGV4LmpzXCI7XG5pbXBvcnQge1xuICBCYXNlQ29udmV4Q2xpZW50XG59IGZyb20gXCIuL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBnZXRGdW5jdGlvbk5hbWUgfSBmcm9tIFwiLi4vc2VydmVyL2FwaS5qc1wiO1xubGV0IGRlZmF1bHRXZWJTb2NrZXRDb25zdHJ1Y3RvcjtcbmV4cG9ydCBmdW5jdGlvbiBzZXREZWZhdWx0V2ViU29ja2V0Q29uc3RydWN0b3Iod3MpIHtcbiAgZGVmYXVsdFdlYlNvY2tldENvbnN0cnVjdG9yID0gd3M7XG59XG5leHBvcnQgY2xhc3MgQ29udmV4Q2xpZW50IHtcbiAgLyoqXG4gICAqIE9uY2UgY2xvc2VkIG5vIHJlZ2lzdGVyZWQgY2FsbGJhY2tzIHdpbGwgZmlyZSBhZ2Fpbi5cbiAgICovXG4gIGdldCBjbG9zZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2Nsb3NlZDtcbiAgfVxuICBnZXQgY2xpZW50KCkge1xuICAgIGlmICh0aGlzLl9jbGllbnQpXG4gICAgICByZXR1cm4gdGhpcy5fY2xpZW50O1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvbnZleENsaWVudCBpcyBkaXNhYmxlZFwiKTtcbiAgfVxuICAvKipcbiAgICogQ29uc3RydWN0IGEgY2xpZW50IGFuZCBpbW1lZGlhdGVseSBpbml0aWF0ZSBhIFdlYlNvY2tldCBjb25uZWN0aW9uIHRvIHRoZSBwYXNzZWQgYWRkcmVzcy5cbiAgICpcbiAgICogQHB1YmxpY1xuICAgKi9cbiAgY29uc3RydWN0b3IoYWRkcmVzcywgb3B0aW9ucyA9IHt9KSB7XG4gICAgdmFsaWRhdGVEZXBsb3ltZW50VXJsKGFkZHJlc3MpO1xuICAgIGNvbnN0IHsgZGlzYWJsZWQsIC4uLmJhc2VPcHRpb25zIH0gPSBvcHRpb25zO1xuICAgIHRoaXMuX2Nsb3NlZCA9IGZhbHNlO1xuICAgIHRoaXMuZGlzYWJsZWQgPSAhIWRpc2FibGVkO1xuICAgIGlmIChkZWZhdWx0V2ViU29ja2V0Q29uc3RydWN0b3IgJiYgIShcIndlYlNvY2tldENvbnN0cnVjdG9yXCIgaW4gYmFzZU9wdGlvbnMpICYmIHR5cGVvZiBXZWJTb2NrZXQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIGJhc2VPcHRpb25zLndlYlNvY2tldENvbnN0cnVjdG9yID0gZGVmYXVsdFdlYlNvY2tldENvbnN0cnVjdG9yO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJ1bmRlZmluZWRcIiAmJiAhKFwidW5zYXZlZENoYW5nZXNXYXJuaW5nXCIgaW4gYmFzZU9wdGlvbnMpKSB7XG4gICAgICBiYXNlT3B0aW9ucy51bnNhdmVkQ2hhbmdlc1dhcm5pbmcgPSBmYWxzZTtcbiAgICB9XG4gICAgaWYgKCF0aGlzLmRpc2FibGVkKSB7XG4gICAgICB0aGlzLl9jbGllbnQgPSBuZXcgQmFzZUNvbnZleENsaWVudChcbiAgICAgICAgYWRkcmVzcyxcbiAgICAgICAgKHVwZGF0ZWRRdWVyaWVzKSA9PiB0aGlzLl90cmFuc2l0aW9uKHVwZGF0ZWRRdWVyaWVzKSxcbiAgICAgICAgYmFzZU9wdGlvbnNcbiAgICAgICk7XG4gICAgfVxuICAgIHRoaXMubGlzdGVuZXJzID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKTtcbiAgfVxuICAvKipcbiAgICogQ2FsbCBhIGNhbGxiYWNrIHdoZW5ldmVyIGEgbmV3IHJlc3VsdCBmb3IgYSBxdWVyeSBpcyByZWNlaXZlZC4gVGhlIGNhbGxiYWNrXG4gICAqIHdpbGwgcnVuIHNvb24gYWZ0ZXIgYmVpbmcgcmVnaXN0ZXJlZCBpZiBhIHJlc3VsdCBmb3IgdGhlIHF1ZXJ5IGlzIGFscmVhZHlcbiAgICogaW4gbWVtb3J5LlxuICAgKlxuICAgKiBUaGUgcmV0dXJuIHZhbHVlIGlzIGFuIHtAbGluayBVbnN1YnNjcmliZX0gb2JqZWN0IHdoaWNoIGlzIGJvdGggYSBmdW5jdGlvblxuICAgKiBhbiBhbiBvYmplY3Qgd2l0aCBwcm9wZXJ0aWVzLiBCb3RoIG9mIHRoZSBwYXR0ZXJucyBiZWxvdyB3b3JrIHdpdGggdGhpcyBvYmplY3Q6XG4gICAqXG4gICAqYGBgdHNcbiAgICogLy8gY2FsbCB0aGUgcmV0dXJuIHZhbHVlIGFzIGEgZnVuY3Rpb25cbiAgICogY29uc3QgdW5zdWJzY3JpYmUgPSBjbGllbnQub25VcGRhdGUoYXBpLm1lc3NhZ2VzLmxpc3QsIHt9LCAobWVzc2FnZXMpID0+IHtcbiAgICogICBjb25zb2xlLmxvZyhtZXNzYWdlcyk7XG4gICAqIH0pO1xuICAgKiB1bnN1YnNjcmliZSgpO1xuICAgKlxuICAgKiAvLyB1bnBhY2sgdGhlIHJldHVybiB2YWx1ZSBpbnRvIGl0cyBwcm9wZXJ0aWVzXG4gICAqIGNvbnN0IHtcbiAgICogICBnZXRDdXJyZW50VmFsdWUsXG4gICAqICAgdW5zdWJzY3JpYmUsXG4gICAqIH0gPSBjbGllbnQub25VcGRhdGUoYXBpLm1lc3NhZ2VzLmxpc3QsIHt9LCAobWVzc2FnZXMpID0+IHtcbiAgICogICBjb25zb2xlLmxvZyhtZXNzYWdlcyk7XG4gICAqIH0pO1xuICAgKmBgYFxuICAgKlxuICAgKiBAcGFyYW0gcXVlcnkgLSBBIHtAbGluayBzZXJ2ZXIuRnVuY3Rpb25SZWZlcmVuY2V9IGZvciB0aGUgcHVibGljIHF1ZXJ5IHRvIHJ1bi5cbiAgICogQHBhcmFtIGFyZ3MgLSBUaGUgYXJndW1lbnRzIHRvIHJ1biB0aGUgcXVlcnkgd2l0aC5cbiAgICogQHBhcmFtIGNhbGxiYWNrIC0gRnVuY3Rpb24gdG8gY2FsbCB3aGVuIHRoZSBxdWVyeSByZXN1bHQgdXBkYXRlcy5cbiAgICogQHBhcmFtIG9uRXJyb3IgLSBGdW5jdGlvbiB0byBjYWxsIHdoZW4gdGhlIHF1ZXJ5IHJlc3VsdCB1cGRhdGVzIHdpdGggYW4gZXJyb3IuXG4gICAqIElmIG5vdCBwcm92aWRlZCwgZXJyb3JzIHdpbGwgYmUgdGhyb3duIGluc3RlYWQgb2YgY2FsbGluZyB0aGUgY2FsbGJhY2suXG4gICAqXG4gICAqIEByZXR1cm4gYW4ge0BsaW5rIFVuc3Vic2NyaWJlfSBmdW5jdGlvbiB0byBzdG9wIGNhbGxpbmcgdGhlIG9uVXBkYXRlIGZ1bmN0aW9uLlxuICAgKi9cbiAgb25VcGRhdGUocXVlcnksIGFyZ3MsIGNhbGxiYWNrLCBvbkVycm9yKSB7XG4gICAgaWYgKHRoaXMuZGlzYWJsZWQpIHtcbiAgICAgIGNvbnN0IGRpc2FibGVkVW5zdWJzY3JpYmUgPSAoKSA9PiB7XG4gICAgICB9O1xuICAgICAgY29uc3QgdW5zdWJzY3JpYmVQcm9wczIgPSB7XG4gICAgICAgIHVuc3Vic2NyaWJlOiBkaXNhYmxlZFVuc3Vic2NyaWJlLFxuICAgICAgICBnZXRDdXJyZW50VmFsdWU6ICgpID0+IHZvaWQgMCxcbiAgICAgICAgZ2V0UXVlcnlMb2dzOiAoKSA9PiB2b2lkIDBcbiAgICAgIH07XG4gICAgICBPYmplY3QuYXNzaWduKGRpc2FibGVkVW5zdWJzY3JpYmUsIHVuc3Vic2NyaWJlUHJvcHMyKTtcbiAgICAgIHJldHVybiBkaXNhYmxlZFVuc3Vic2NyaWJlO1xuICAgIH1cbiAgICBjb25zdCB7IHF1ZXJ5VG9rZW4sIHVuc3Vic2NyaWJlIH0gPSB0aGlzLmNsaWVudC5zdWJzY3JpYmUoXG4gICAgICBnZXRGdW5jdGlvbk5hbWUocXVlcnkpLFxuICAgICAgYXJnc1xuICAgICk7XG4gICAgY29uc3QgcXVlcnlJbmZvID0ge1xuICAgICAgcXVlcnlUb2tlbixcbiAgICAgIGNhbGxiYWNrLFxuICAgICAgb25FcnJvcixcbiAgICAgIHVuc3Vic2NyaWJlLFxuICAgICAgaGFzRXZlclJ1bjogZmFsc2UsXG4gICAgICBxdWVyeSxcbiAgICAgIGFyZ3NcbiAgICB9O1xuICAgIHRoaXMubGlzdGVuZXJzLmFkZChxdWVyeUluZm8pO1xuICAgIGlmICh0aGlzLnF1ZXJ5UmVzdWx0UmVhZHkocXVlcnlUb2tlbikgJiYgdGhpcy5jYWxsTmV3TGlzdGVuZXJzV2l0aEN1cnJlbnRWYWx1ZXNUaW1lciA9PT0gdm9pZCAwKSB7XG4gICAgICB0aGlzLmNhbGxOZXdMaXN0ZW5lcnNXaXRoQ3VycmVudFZhbHVlc1RpbWVyID0gc2V0VGltZW91dChcbiAgICAgICAgKCkgPT4gdGhpcy5jYWxsTmV3TGlzdGVuZXJzV2l0aEN1cnJlbnRWYWx1ZXMoKSxcbiAgICAgICAgMFxuICAgICAgKTtcbiAgICB9XG4gICAgY29uc3QgdW5zdWJzY3JpYmVQcm9wcyA9IHtcbiAgICAgIHVuc3Vic2NyaWJlOiAoKSA9PiB7XG4gICAgICAgIGlmICh0aGlzLmNsb3NlZCkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmxpc3RlbmVycy5kZWxldGUocXVlcnlJbmZvKTtcbiAgICAgICAgdW5zdWJzY3JpYmUoKTtcbiAgICAgIH0sXG4gICAgICBnZXRDdXJyZW50VmFsdWU6ICgpID0+IHRoaXMuY2xpZW50LmxvY2FsUXVlcnlSZXN1bHRCeVRva2VuKHF1ZXJ5VG9rZW4pLFxuICAgICAgZ2V0UXVlcnlMb2dzOiAoKSA9PiB0aGlzLmNsaWVudC5sb2NhbFF1ZXJ5TG9ncyhxdWVyeVRva2VuKVxuICAgIH07XG4gICAgY29uc3QgcmV0ID0gdW5zdWJzY3JpYmVQcm9wcy51bnN1YnNjcmliZTtcbiAgICBPYmplY3QuYXNzaWduKHJldCwgdW5zdWJzY3JpYmVQcm9wcyk7XG4gICAgcmV0dXJuIHJldDtcbiAgfVxuICAvLyBSdW4gYWxsIGNhbGxiYWNrcyB0aGF0IGhhdmUgbmV2ZXIgYmVlbiBydW4gYmVmb3JlIGlmIHRoZXkgaGF2ZSBhIHF1ZXJ5XG4gIC8vIHJlc3VsdCBhdmFpbGFibGUgbm93LlxuICBjYWxsTmV3TGlzdGVuZXJzV2l0aEN1cnJlbnRWYWx1ZXMoKSB7XG4gICAgdGhpcy5jYWxsTmV3TGlzdGVuZXJzV2l0aEN1cnJlbnRWYWx1ZXNUaW1lciA9IHZvaWQgMDtcbiAgICB0aGlzLl90cmFuc2l0aW9uKFtdLCB0cnVlKTtcbiAgfVxuICBxdWVyeVJlc3VsdFJlYWR5KHF1ZXJ5VG9rZW4pIHtcbiAgICByZXR1cm4gdGhpcy5jbGllbnQuaGFzTG9jYWxRdWVyeVJlc3VsdEJ5VG9rZW4ocXVlcnlUb2tlbik7XG4gIH1cbiAgYXN5bmMgY2xvc2UoKSB7XG4gICAgaWYgKHRoaXMuZGlzYWJsZWQpXG4gICAgICByZXR1cm47XG4gICAgdGhpcy5saXN0ZW5lcnMuY2xlYXIoKTtcbiAgICB0aGlzLl9jbG9zZWQgPSB0cnVlO1xuICAgIHJldHVybiB0aGlzLmNsaWVudC5jbG9zZSgpO1xuICB9XG4gIC8qKlxuICAgKiBTZXQgdGhlIGF1dGhlbnRpY2F0aW9uIHRva2VuIHRvIGJlIHVzZWQgZm9yIHN1YnNlcXVlbnQgcXVlcmllcyBhbmQgbXV0YXRpb25zLlxuICAgKiBgZmV0Y2hUb2tlbmAgd2lsbCBiZSBjYWxsZWQgYXV0b21hdGljYWxseSBhZ2FpbiBpZiBhIHRva2VuIGV4cGlyZXMuXG4gICAqIGBmZXRjaFRva2VuYCBzaG91bGQgcmV0dXJuIGBudWxsYCBpZiB0aGUgdG9rZW4gY2Fubm90IGJlIHJldHJpZXZlZCwgZm9yIGV4YW1wbGVcbiAgICogd2hlbiB0aGUgdXNlcidzIHJpZ2h0cyB3ZXJlIHBlcm1hbmVudGx5IHJldm9rZWQuXG4gICAqIEBwYXJhbSBmZXRjaFRva2VuIC0gYW4gYXN5bmMgZnVuY3Rpb24gcmV0dXJuaW5nIHRoZSBKV1QtZW5jb2RlZCBPcGVuSUQgQ29ubmVjdCBJZGVudGl0eSBUb2tlblxuICAgKiBAcGFyYW0gb25DaGFuZ2UgLSBhIGNhbGxiYWNrIHRoYXQgd2lsbCBiZSBjYWxsZWQgd2hlbiB0aGUgYXV0aGVudGljYXRpb24gc3RhdHVzIGNoYW5nZXNcbiAgICovXG4gIHNldEF1dGgoZmV0Y2hUb2tlbiwgb25DaGFuZ2UpIHtcbiAgICB0aGlzLmNsaWVudC5zZXRBdXRoKFxuICAgICAgZmV0Y2hUb2tlbixcbiAgICAgIG9uQ2hhbmdlID8/ICgoKSA9PiB7XG4gICAgICB9KVxuICAgICk7XG4gIH1cbiAgLyoqXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cbiAgc2V0QWRtaW5BdXRoKHRva2VuLCBpZGVudGl0eSkge1xuICAgIGlmICh0aGlzLmNsb3NlZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ29udmV4Q2xpZW50IGhhcyBhbHJlYWR5IGJlZW4gY2xvc2VkLlwiKTtcbiAgICB9XG4gICAgaWYgKHRoaXMuZGlzYWJsZWQpXG4gICAgICByZXR1cm47XG4gICAgdGhpcy5jbGllbnQuc2V0QWRtaW5BdXRoKHRva2VuLCBpZGVudGl0eSk7XG4gIH1cbiAgLyoqXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cbiAgX3RyYW5zaXRpb24odXBkYXRlZFF1ZXJpZXMsIGNhbGxOZXdMaXN0ZW5lcnMgPSBmYWxzZSkge1xuICAgIGZvciAoY29uc3QgcXVlcnlJbmZvIG9mIHRoaXMubGlzdGVuZXJzKSB7XG4gICAgICBjb25zdCB7IGNhbGxiYWNrLCBxdWVyeVRva2VuLCBvbkVycm9yLCBoYXNFdmVyUnVuIH0gPSBxdWVyeUluZm87XG4gICAgICBpZiAodXBkYXRlZFF1ZXJpZXMuaW5jbHVkZXMocXVlcnlUb2tlbikgfHwgY2FsbE5ld0xpc3RlbmVycyAmJiAhaGFzRXZlclJ1biAmJiB0aGlzLmNsaWVudC5oYXNMb2NhbFF1ZXJ5UmVzdWx0QnlUb2tlbihxdWVyeVRva2VuKSkge1xuICAgICAgICBxdWVyeUluZm8uaGFzRXZlclJ1biA9IHRydWU7XG4gICAgICAgIGxldCBuZXdWYWx1ZTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBuZXdWYWx1ZSA9IHRoaXMuY2xpZW50LmxvY2FsUXVlcnlSZXN1bHRCeVRva2VuKHF1ZXJ5VG9rZW4pO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgIGlmICghKGVycm9yIGluc3RhbmNlb2YgRXJyb3IpKVxuICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgICAgaWYgKG9uRXJyb3IpIHtcbiAgICAgICAgICAgIG9uRXJyb3IoXG4gICAgICAgICAgICAgIGVycm9yLFxuICAgICAgICAgICAgICBcIlNlY29uZCBhcmd1bWVudCB0byBvblVwZGF0ZSBvbkVycm9yIGlzIHJlc2VydmVkIGZvciBsYXRlciB1c2VcIlxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdm9pZCBQcm9taXNlLnJlamVjdChlcnJvcik7XG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGNhbGxiYWNrKFxuICAgICAgICAgIG5ld1ZhbHVlLFxuICAgICAgICAgIFwiU2Vjb25kIGFyZ3VtZW50IHRvIG9uVXBkYXRlIGNhbGxiYWNrIGlzIHJlc2VydmVkIGZvciBsYXRlciB1c2VcIlxuICAgICAgICApO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICAvKipcbiAgICogRXhlY3V0ZSBhIG11dGF0aW9uIGZ1bmN0aW9uLlxuICAgKlxuICAgKiBAcGFyYW0gbXV0YXRpb24gLSBBIHtAbGluayBzZXJ2ZXIuRnVuY3Rpb25SZWZlcmVuY2V9IGZvciB0aGUgcHVibGljIG11dGF0aW9uXG4gICAqIHRvIHJ1bi5cbiAgICogQHBhcmFtIGFyZ3MgLSBBbiBhcmd1bWVudHMgb2JqZWN0IGZvciB0aGUgbXV0YXRpb24uXG4gICAqIEBwYXJhbSBvcHRpb25zIC0gQSB7QGxpbmsgTXV0YXRpb25PcHRpb25zfSBvcHRpb25zIG9iamVjdCBmb3IgdGhlIG11dGF0aW9uLlxuICAgKiBAcmV0dXJucyBBIHByb21pc2Ugb2YgdGhlIG11dGF0aW9uJ3MgcmVzdWx0LlxuICAgKi9cbiAgYXN5bmMgbXV0YXRpb24obXV0YXRpb24sIGFyZ3MpIHtcbiAgICBpZiAodGhpcy5kaXNhYmxlZClcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvbnZleENsaWVudCBpcyBkaXNhYmxlZFwiKTtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5jbGllbnQubXV0YXRpb24oZ2V0RnVuY3Rpb25OYW1lKG11dGF0aW9uKSwgYXJncyk7XG4gIH1cbiAgLyoqXG4gICAqIEV4ZWN1dGUgYW4gYWN0aW9uIGZ1bmN0aW9uLlxuICAgKlxuICAgKiBAcGFyYW0gYWN0aW9uIC0gQSB7QGxpbmsgc2VydmVyLkZ1bmN0aW9uUmVmZXJlbmNlfSBmb3IgdGhlIHB1YmxpYyBhY3Rpb25cbiAgICogdG8gcnVuLlxuICAgKiBAcGFyYW0gYXJncyAtIEFuIGFyZ3VtZW50cyBvYmplY3QgZm9yIHRoZSBhY3Rpb24uXG4gICAqIEByZXR1cm5zIEEgcHJvbWlzZSBvZiB0aGUgYWN0aW9uJ3MgcmVzdWx0LlxuICAgKi9cbiAgYXN5bmMgYWN0aW9uKGFjdGlvbiwgYXJncykge1xuICAgIGlmICh0aGlzLmRpc2FibGVkKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ29udmV4Q2xpZW50IGlzIGRpc2FibGVkXCIpO1xuICAgIHJldHVybiBhd2FpdCB0aGlzLmNsaWVudC5hY3Rpb24oZ2V0RnVuY3Rpb25OYW1lKGFjdGlvbiksIGFyZ3MpO1xuICB9XG4gIC8qKlxuICAgKiBGZXRjaCBhIHF1ZXJ5IHJlc3VsdCBvbmNlLlxuICAgKlxuICAgKiBAcGFyYW0gcXVlcnkgLSBBIHtAbGluayBzZXJ2ZXIuRnVuY3Rpb25SZWZlcmVuY2V9IGZvciB0aGUgcHVibGljIHF1ZXJ5XG4gICAqIHRvIHJ1bi5cbiAgICogQHBhcmFtIGFyZ3MgLSBBbiBhcmd1bWVudHMgb2JqZWN0IGZvciB0aGUgcXVlcnkuXG4gICAqIEByZXR1cm5zIEEgcHJvbWlzZSBvZiB0aGUgcXVlcnkncyByZXN1bHQuXG4gICAqL1xuICBhc3luYyBxdWVyeShxdWVyeSwgYXJncykge1xuICAgIGlmICh0aGlzLmRpc2FibGVkKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ29udmV4Q2xpZW50IGlzIGRpc2FibGVkXCIpO1xuICAgIGNvbnN0IHZhbHVlID0gdGhpcy5jbGllbnQubG9jYWxRdWVyeVJlc3VsdChnZXRGdW5jdGlvbk5hbWUocXVlcnkpLCBhcmdzKTtcbiAgICBpZiAodmFsdWUgIT09IHZvaWQgMClcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgY29uc3QgeyB1bnN1YnNjcmliZSB9ID0gdGhpcy5vblVwZGF0ZShcbiAgICAgICAgcXVlcnksXG4gICAgICAgIGFyZ3MsXG4gICAgICAgICh2YWx1ZTIpID0+IHtcbiAgICAgICAgICB1bnN1YnNjcmliZSgpO1xuICAgICAgICAgIHJlc29sdmUodmFsdWUyKTtcbiAgICAgICAgfSxcbiAgICAgICAgKGUpID0+IHtcbiAgICAgICAgICB1bnN1YnNjcmliZSgpO1xuICAgICAgICAgIHJlamVjdChlKTtcbiAgICAgICAgfVxuICAgICAgKTtcbiAgICB9KTtcbiAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2ltcGxlX2NsaWVudC5qcy5tYXBcbiJdLCJuYW1lcyI6WyJ2YWxpZGF0ZURlcGxveW1lbnRVcmwiLCJCYXNlQ29udmV4Q2xpZW50IiwiZ2V0RnVuY3Rpb25OYW1lIiwiZGVmYXVsdFdlYlNvY2tldENvbnN0cnVjdG9yIiwic2V0RGVmYXVsdFdlYlNvY2tldENvbnN0cnVjdG9yIiwid3MiLCJDb252ZXhDbGllbnQiLCJjbG9zZWQiLCJfY2xvc2VkIiwiY2xpZW50IiwiX2NsaWVudCIsIkVycm9yIiwiY29uc3RydWN0b3IiLCJhZGRyZXNzIiwib3B0aW9ucyIsImRpc2FibGVkIiwiYmFzZU9wdGlvbnMiLCJXZWJTb2NrZXQiLCJ3ZWJTb2NrZXRDb25zdHJ1Y3RvciIsInVuc2F2ZWRDaGFuZ2VzV2FybmluZyIsInVwZGF0ZWRRdWVyaWVzIiwiX3RyYW5zaXRpb24iLCJsaXN0ZW5lcnMiLCJTZXQiLCJvblVwZGF0ZSIsInF1ZXJ5IiwiYXJncyIsImNhbGxiYWNrIiwib25FcnJvciIsImRpc2FibGVkVW5zdWJzY3JpYmUiLCJ1bnN1YnNjcmliZVByb3BzMiIsInVuc3Vic2NyaWJlIiwiZ2V0Q3VycmVudFZhbHVlIiwiZ2V0UXVlcnlMb2dzIiwiT2JqZWN0IiwiYXNzaWduIiwicXVlcnlUb2tlbiIsInN1YnNjcmliZSIsInF1ZXJ5SW5mbyIsImhhc0V2ZXJSdW4iLCJhZGQiLCJxdWVyeVJlc3VsdFJlYWR5IiwiY2FsbE5ld0xpc3RlbmVyc1dpdGhDdXJyZW50VmFsdWVzVGltZXIiLCJzZXRUaW1lb3V0IiwiY2FsbE5ld0xpc3RlbmVyc1dpdGhDdXJyZW50VmFsdWVzIiwidW5zdWJzY3JpYmVQcm9wcyIsImRlbGV0ZSIsImxvY2FsUXVlcnlSZXN1bHRCeVRva2VuIiwibG9jYWxRdWVyeUxvZ3MiLCJyZXQiLCJoYXNMb2NhbFF1ZXJ5UmVzdWx0QnlUb2tlbiIsImNsb3NlIiwiY2xlYXIiLCJzZXRBdXRoIiwiZmV0Y2hUb2tlbiIsIm9uQ2hhbmdlIiwic2V0QWRtaW5BdXRoIiwidG9rZW4iLCJpZGVudGl0eSIsImNhbGxOZXdMaXN0ZW5lcnMiLCJpbmNsdWRlcyIsIm5ld1ZhbHVlIiwiZXJyb3IiLCJQcm9taXNlIiwicmVqZWN0IiwibXV0YXRpb24iLCJhY3Rpb24iLCJ2YWx1ZSIsImxvY2FsUXVlcnlSZXN1bHQiLCJyZXNvbHZlIiwidmFsdWUyIiwiZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/simple_client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/authentication_manager.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/authentication_manager.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthenticationManager: () => (/* binding */ AuthenticationManager)\n/* harmony export */ });\n/* harmony import */ var jwt_decode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jwt-decode */ \"(ssr)/./node_modules/jwt-decode/build/jwt-decode.esm.js\");\n\n\nclass AuthenticationManager {\n    constructor(syncState, { authenticate, pauseSocket: pause, resumeSocket: resume, clearAuth, verbose }){\n        this.authState = {\n            state: \"noAuth\"\n        };\n        // Used to detect races involving `setConfig` calls\n        // while a token is being fetched.\n        this.configVersion = 0;\n        this.syncState = syncState;\n        this.authenticate = authenticate;\n        this.pauseSocket = pause;\n        this.resumeSocket = resume;\n        this.clearAuth = clearAuth;\n        this.verbose = verbose;\n    }\n    async setConfig(fetchToken, onChange) {\n        this.resetAuthState();\n        const token = await this.fetchTokenAndGuardAgainstRace(fetchToken, {\n            forceRefreshToken: false\n        });\n        if (token.isFromOutdatedConfig) {\n            return;\n        }\n        if (token.value) {\n            this.setAuthState({\n                state: \"waitingForServerConfirmationOfCachedToken\",\n                config: {\n                    fetchToken,\n                    onAuthChange: onChange\n                },\n                hasRetried: false\n            });\n            this.authenticate(token.value);\n        } else {\n            this.setAuthState({\n                state: \"initialRefetch\",\n                config: {\n                    fetchToken,\n                    onAuthChange: onChange\n                }\n            });\n            await this.refetchToken();\n        }\n    }\n    onTransition(serverMessage) {\n        if (!this.syncState.isCurrentOrNewerAuthVersion(serverMessage.endVersion.identity)) {\n            return;\n        }\n        if (serverMessage.endVersion.identity <= serverMessage.startVersion.identity) {\n            return;\n        }\n        if (this.authState.state === \"waitingForServerConfirmationOfCachedToken\") {\n            this._logVerbose(\"server confirmed auth token is valid\");\n            void this.refetchToken();\n            this.authState.config.onAuthChange(true);\n            return;\n        }\n        if (this.authState.state === \"waitingForServerConfirmationOfFreshToken\") {\n            this._logVerbose(\"server confirmed new auth token is valid\");\n            this.scheduleTokenRefetch(this.authState.token);\n            if (!this.authState.hadAuth) {\n                this.authState.config.onAuthChange(true);\n            }\n        }\n    }\n    onAuthError(serverMessage) {\n        const { baseVersion } = serverMessage;\n        if (baseVersion !== null && baseVersion !== void 0) {\n            if (!this.syncState.isCurrentOrNewerAuthVersion(baseVersion + 1)) {\n                this._logVerbose(\"ignoring auth error for previous auth attempt\");\n                return;\n            }\n            void this.tryToReauthenticate(serverMessage);\n            return;\n        }\n        void this.tryToReauthenticate(serverMessage);\n    }\n    // This is similar to `refetchToken` defined below, in fact we\n    // don't represent them as different states, but it is different\n    // in that we pause the WebSocket so that mutations\n    // don't retry with bad auth.\n    async tryToReauthenticate(serverMessage) {\n        if (// No way to fetch another token, kaboom\n        this.authState.state === \"noAuth\" || // We failed on a fresh token, trying another one won't help\n        this.authState.state === \"waitingForServerConfirmationOfFreshToken\") {\n            console.error(`Failed to authenticate: \"${serverMessage.error}\", check your server auth config`);\n            if (this.syncState.hasAuth()) {\n                this.syncState.clearAuth();\n            }\n            if (this.authState.state !== \"noAuth\") {\n                this.setAndReportAuthFailed(this.authState.config.onAuthChange);\n            }\n            return;\n        }\n        this._logVerbose(\"attempting to reauthenticate\");\n        await this.pauseSocket();\n        const token = await this.fetchTokenAndGuardAgainstRace(this.authState.config.fetchToken, {\n            forceRefreshToken: true\n        });\n        if (token.isFromOutdatedConfig) {\n            await this.resumeSocket();\n            return;\n        }\n        if (token.value && this.syncState.isNewAuth(token.value)) {\n            this.syncState.setAuth(token.value);\n            this.setAuthState({\n                state: \"waitingForServerConfirmationOfFreshToken\",\n                config: this.authState.config,\n                token: token.value,\n                hadAuth: this.authState.state === \"notRefetching\" || this.authState.state === \"waitingForScheduledRefetch\"\n            });\n        } else {\n            this._logVerbose(\"reauthentication failed, could not fetch a new token\");\n            if (this.syncState.hasAuth()) {\n                this.syncState.clearAuth();\n            }\n            this.setAndReportAuthFailed(this.authState.config.onAuthChange);\n        }\n        await this.resumeSocket();\n    }\n    // Force refetch the token and schedule another refetch\n    // before the token expires - an active client should never\n    // need to reauthenticate.\n    async refetchToken() {\n        if (this.authState.state === \"noAuth\") {\n            return;\n        }\n        this._logVerbose(\"refetching auth token\");\n        const token = await this.fetchTokenAndGuardAgainstRace(this.authState.config.fetchToken, {\n            forceRefreshToken: true\n        });\n        if (token.isFromOutdatedConfig) {\n            return;\n        }\n        if (token.value) {\n            if (this.syncState.isNewAuth(token.value)) {\n                this.setAuthState({\n                    state: \"waitingForServerConfirmationOfFreshToken\",\n                    hadAuth: this.syncState.hasAuth(),\n                    token: token.value,\n                    config: this.authState.config\n                });\n                this.authenticate(token.value);\n            } else {\n                this.setAuthState({\n                    state: \"notRefetching\",\n                    config: this.authState.config\n                });\n            }\n        } else {\n            this._logVerbose(\"refetching token failed\");\n            if (this.syncState.hasAuth()) {\n                this.clearAuth();\n            }\n            this.setAndReportAuthFailed(this.authState.config.onAuthChange);\n        }\n    }\n    scheduleTokenRefetch(token) {\n        if (this.authState.state === \"noAuth\") {\n            return;\n        }\n        const decodedToken = this.decodeToken(token);\n        if (!decodedToken) {\n            console.error(\"Auth token is not a valid JWT, cannot refetch the token\");\n            return;\n        }\n        const { iat, exp } = decodedToken;\n        if (!iat || !exp) {\n            console.error(\"Auth token does not have required fields, cannot refetch the token\");\n            return;\n        }\n        const leewaySeconds = 2;\n        const delay = (exp - iat - leewaySeconds) * 1e3;\n        if (delay <= 0) {\n            console.error(\"Auth token does not live long enough, cannot refetch the token\");\n            return;\n        }\n        const refetchTokenTimeoutId = setTimeout(()=>{\n            void this.refetchToken();\n        }, delay);\n        this.setAuthState({\n            state: \"waitingForScheduledRefetch\",\n            refetchTokenTimeoutId,\n            config: this.authState.config\n        });\n        this._logVerbose(`scheduled preemptive auth token refetching in ${delay}ms`);\n    }\n    // Protects against simultaneous calls to `setConfig`\n    // while we're fetching a token\n    async fetchTokenAndGuardAgainstRace(fetchToken, fetchArgs) {\n        const originalConfigVersion = ++this.configVersion;\n        const token = await fetchToken(fetchArgs);\n        if (this.configVersion !== originalConfigVersion) {\n            return {\n                isFromOutdatedConfig: true\n            };\n        }\n        return {\n            isFromOutdatedConfig: false,\n            value: token\n        };\n    }\n    stop() {\n        this.resetAuthState();\n        this.configVersion++;\n    }\n    setAndReportAuthFailed(onAuthChange) {\n        onAuthChange(false);\n        this.resetAuthState();\n    }\n    resetAuthState() {\n        this.setAuthState({\n            state: \"noAuth\"\n        });\n    }\n    setAuthState(newAuth) {\n        if (this.authState.state === \"waitingForScheduledRefetch\") {\n            clearTimeout(this.authState.refetchTokenTimeoutId);\n            this.syncState.markAuthCompletion();\n        }\n        this.authState = newAuth;\n    }\n    decodeToken(token) {\n        try {\n            return (0,jwt_decode__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(token);\n        } catch (e) {\n            return null;\n        }\n    }\n    _logVerbose(message) {\n        if (this.verbose) {\n            console.debug(`${/* @__PURE__ */ new Date().toISOString()} ${message} [v${this.configVersion}]`);\n        }\n    }\n} //# sourceMappingURL=authentication_manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/authentication_manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/client.js":
/*!*************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/client.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseConvexClient: () => (/* binding */ BaseConvexClient)\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/convex/dist/esm/index.js\");\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _logging_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../logging.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/logging.js\");\n/* harmony import */ var _local_state_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./local_state.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/local_state.js\");\n/* harmony import */ var _request_manager_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./request_manager.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/request_manager.js\");\n/* harmony import */ var _optimistic_updates_impl_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./optimistic_updates_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/optimistic_updates_impl.js\");\n/* harmony import */ var _remote_query_set_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./remote_query_set.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/remote_query_set.js\");\n/* harmony import */ var _udf_path_utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./udf_path_utils.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/udf_path_utils.js\");\n/* harmony import */ var _web_socket_manager_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./web_socket_manager.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/web_socket_manager.js\");\n/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./session.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/session.js\");\n/* harmony import */ var _authentication_manager_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./authentication_manager.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/authentication_manager.js\");\n/* harmony import */ var _metrics_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./metrics.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/metrics.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../common/index.js */ \"(ssr)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _values_errors_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../values/errors.js */ \"(ssr)/./node_modules/convex/dist/esm/values/errors.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass BaseConvexClient {\n    /**\n   * @param address - The url of your Convex deployment, often provided\n   * by an environment variable. E.g. `https://small-mouse-123.convex.cloud`.\n   * @param onTransition - A callback receiving an array of query tokens\n   * corresponding to query results that have changed.\n   * @param options - See {@link BaseConvexClientOptions} for a full description.\n   */ constructor(address, onTransition, options){\n        this.firstMessageReceived = false;\n        // Instance property so that `mark()` doesn't need to be called as a method.\n        this.mark = (name)=>{\n            if (this.debug) {\n                (0,_metrics_js__WEBPACK_IMPORTED_MODULE_11__.mark)(name, this.sessionId);\n            }\n        };\n        if (typeof address === \"object\") {\n            throw new Error(\"Passing a ClientConfig object is no longer supported. Pass the URL of the Convex deployment as a string directly.\");\n        }\n        (0,_common_index_js__WEBPACK_IMPORTED_MODULE_12__.validateDeploymentUrl)(address);\n        options = {\n            ...options\n        };\n        let webSocketConstructor = options.webSocketConstructor;\n        if (!webSocketConstructor && typeof WebSocket === \"undefined\") {\n            throw new Error(\"No WebSocket global variable defined! To use Convex in an environment without WebSocket try the HTTP client: https://docs.convex.dev/api/classes/browser.ConvexHttpClient\");\n        }\n        webSocketConstructor = webSocketConstructor || WebSocket;\n        this.verbose = options.verbose ?? false;\n        this.debug = options.reportDebugInfoToConvex ?? false;\n        this.address = address;\n        const i = address.search(\"://\");\n        if (i === -1) {\n            throw new Error(\"Provided address was not an absolute URL.\");\n        }\n        const origin = address.substring(i + 3);\n        const protocol = address.substring(0, i);\n        let wsProtocol;\n        if (protocol === \"http\") {\n            wsProtocol = \"ws\";\n        } else if (protocol === \"https\") {\n            wsProtocol = \"wss\";\n        } else {\n            throw new Error(`Unknown parent protocol ${protocol}`);\n        }\n        const wsUri = `${wsProtocol}://${origin}/api/${_index_js__WEBPACK_IMPORTED_MODULE_0__.version}/sync`;\n        this.state = new _local_state_js__WEBPACK_IMPORTED_MODULE_3__.LocalSyncState();\n        this.remoteQuerySet = new _remote_query_set_js__WEBPACK_IMPORTED_MODULE_6__.RemoteQuerySet((queryId)=>this.state.queryPath(queryId));\n        this.requestManager = new _request_manager_js__WEBPACK_IMPORTED_MODULE_4__.RequestManager();\n        this.authenticationManager = new _authentication_manager_js__WEBPACK_IMPORTED_MODULE_10__.AuthenticationManager(this.state, {\n            authenticate: (token)=>{\n                const message = this.state.setAuth(token);\n                this.webSocketManager.sendMessage(message);\n            },\n            pauseSocket: ()=>this.webSocketManager.pause(),\n            resumeSocket: ()=>this.webSocketManager.resume(),\n            clearAuth: ()=>{\n                this.clearAuth();\n            },\n            verbose: this.verbose\n        });\n        this.optimisticQueryResults = new _optimistic_updates_impl_js__WEBPACK_IMPORTED_MODULE_5__.OptimisticQueryResults();\n        this.onTransition = onTransition;\n        this.nextRequestId = 0;\n        this.sessionId = (0,_session_js__WEBPACK_IMPORTED_MODULE_9__.newSessionId)();\n        const { unsavedChangesWarning } = options;\n        if (true) {\n            if (unsavedChangesWarning === true) {\n                throw new Error(\"unsavedChangesWarning requested, but window.addEventListener not found! Remove {unsavedChangesWarning: true} from Convex client options.\");\n            }\n        } else {}\n        this.webSocketManager = new _web_socket_manager_js__WEBPACK_IMPORTED_MODULE_8__.WebSocketManager(wsUri, (reconnectMetadata)=>{\n            this.mark(\"convexWebSocketOpen\");\n            this.webSocketManager.sendMessage({\n                ...reconnectMetadata,\n                type: \"Connect\",\n                sessionId: this.sessionId,\n                maxObservedTimestamp: this.maxObservedTimestamp\n            });\n            const oldRemoteQueryResults = new Set(this.remoteQuerySet.remoteQueryResults().keys());\n            this.remoteQuerySet = new _remote_query_set_js__WEBPACK_IMPORTED_MODULE_6__.RemoteQuerySet((queryId)=>this.state.queryPath(queryId));\n            const [querySetModification, authModification] = this.state.restart(oldRemoteQueryResults);\n            if (authModification) {\n                this.webSocketManager.sendMessage(authModification);\n            }\n            this.webSocketManager.sendMessage(querySetModification);\n            for (const message of this.requestManager.restart()){\n                this.webSocketManager.sendMessage(message);\n            }\n        }, (serverMessage)=>{\n            if (!this.firstMessageReceived) {\n                this.firstMessageReceived = true;\n                this.mark(\"convexFirstMessageReceived\");\n                this.reportMarks();\n            }\n            switch(serverMessage.type){\n                case \"Transition\":\n                    {\n                        this.observedTimestamp(serverMessage.endVersion.ts);\n                        this.authenticationManager.onTransition(serverMessage);\n                        this.remoteQuerySet.transition(serverMessage);\n                        this.state.transition(serverMessage);\n                        const completedRequests = this.requestManager.removeCompleted(this.remoteQuerySet.timestamp());\n                        this.notifyOnQueryResultChanges(completedRequests);\n                        break;\n                    }\n                case \"MutationResponse\":\n                    {\n                        if (serverMessage.success) {\n                            this.observedTimestamp(serverMessage.ts);\n                        }\n                        const completedMutationId = this.requestManager.onResponse(serverMessage);\n                        if (completedMutationId) {\n                            this.notifyOnQueryResultChanges(/* @__PURE__ */ new Set([\n                                completedMutationId\n                            ]));\n                        }\n                        break;\n                    }\n                case \"ActionResponse\":\n                    {\n                        this.requestManager.onResponse(serverMessage);\n                        break;\n                    }\n                case \"AuthError\":\n                    {\n                        this.authenticationManager.onAuthError(serverMessage);\n                        break;\n                    }\n                case \"FatalError\":\n                    {\n                        const error = (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.logFatalError)(serverMessage.error);\n                        void this.webSocketManager.stop();\n                        throw error;\n                    }\n                case \"Ping\":\n                    break;\n                default:\n                    {\n                        const _typeCheck = serverMessage;\n                    }\n            }\n            return {\n                hasSyncedPastLastReconnect: this.hasSyncedPastLastReconnect()\n            };\n        }, webSocketConstructor, this.verbose);\n        this.mark(\"convexClientConstructed\");\n    }\n    /**\n   * Return true if there is outstanding work from prior to the time of the most recent restart.\n   * This indicates that the client has not proven itself to have gotten past the issue that\n   * potentially led to the restart. Use this to influence when to reset backoff after a failure.\n   */ hasSyncedPastLastReconnect() {\n        const hasSyncedPastLastReconnect = this.requestManager.hasSyncedPastLastReconnect() || this.state.hasSyncedPastLastReconnect();\n        return hasSyncedPastLastReconnect;\n    }\n    observedTimestamp(observedTs) {\n        if (this.maxObservedTimestamp === void 0 || this.maxObservedTimestamp.lessThanOrEqual(observedTs)) {\n            this.maxObservedTimestamp = observedTs;\n        }\n    }\n    getMaxObservedTimestamp() {\n        return this.maxObservedTimestamp;\n    }\n    /**\n   * Compute the current query results based on the remoteQuerySet and the\n   * current optimistic updates and call `onTransition` for all the changed\n   * queries.\n   *\n   * @param completedMutations - A set of mutation IDs whose optimistic updates\n   * are no longer needed.\n   */ notifyOnQueryResultChanges(completedRequest) {\n        const remoteQueryResults = this.remoteQuerySet.remoteQueryResults();\n        const queryTokenToValue = /* @__PURE__ */ new Map();\n        for (const [queryId, result] of remoteQueryResults){\n            const queryToken = this.state.queryToken(queryId);\n            if (queryToken !== null) {\n                const query = {\n                    result,\n                    udfPath: this.state.queryPath(queryId),\n                    args: this.state.queryArgs(queryId)\n                };\n                queryTokenToValue.set(queryToken, query);\n            }\n        }\n        this.onTransition(this.optimisticQueryResults.ingestQueryResultsFromServer(queryTokenToValue, completedRequest));\n    }\n    /**\n   * Set the authentication token to be used for subsequent queries and mutations.\n   * `fetchToken` will be called automatically again if a token expires.\n   * `fetchToken` should return `null` if the token cannot be retrieved, for example\n   * when the user's rights were permanently revoked.\n   * @param fetchToken - an async function returning the JWT-encoded OpenID Connect Identity Token\n   * @param onChange - a callback that will be called when the authentication status changes\n   */ setAuth(fetchToken, onChange) {\n        void this.authenticationManager.setConfig(fetchToken, onChange);\n    }\n    hasAuth() {\n        return this.state.hasAuth();\n    }\n    /** @internal */ setAdminAuth(value, fakeUserIdentity) {\n        const message = this.state.setAdminAuth(value, fakeUserIdentity);\n        this.webSocketManager.sendMessage(message);\n    }\n    clearAuth() {\n        const message = this.state.clearAuth();\n        this.webSocketManager.sendMessage(message);\n    }\n    /**\n     * Subscribe to a query function.\n     *\n     * Whenever this query's result changes, the `onTransition` callback\n     * passed into the constructor will be called.\n     *\n     * @param name - The name of the query.\n     * @param args - An arguments object for the query. If this is omitted, the\n     * arguments will be `{}`.\n     * @param options - A {@link SubscribeOptions} options object for this query.\n  \n     * @returns An object containing a {@link QueryToken} corresponding to this\n     * query and an `unsubscribe` callback.\n     */ subscribe(name, args, options) {\n        const argsObject = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_12__.parseArgs)(args);\n        const { modification, queryToken, unsubscribe } = this.state.subscribe(name, argsObject, options?.journal);\n        if (modification !== null) {\n            this.webSocketManager.sendMessage(modification);\n        }\n        return {\n            queryToken,\n            unsubscribe: ()=>{\n                const modification2 = unsubscribe();\n                if (modification2) {\n                    this.webSocketManager.sendMessage(modification2);\n                }\n            }\n        };\n    }\n    /**\n   * A query result based only on the current, local state.\n   *\n   * The only way this will return a value is if we're already subscribed to the\n   * query or its value has been set optimistically.\n   */ localQueryResult(udfPath, args) {\n        const argsObject = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_12__.parseArgs)(args);\n        const queryToken = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_7__.serializePathAndArgs)(udfPath, argsObject);\n        return this.optimisticQueryResults.queryResult(queryToken);\n    }\n    /**\n   * Get query result by query token based on current, local state\n   *\n   * The only way this will return a value is if we're already subscribed to the\n   * query or its value has been set optimistically.\n   *\n   * @internal\n   */ localQueryResultByToken(queryToken) {\n        return this.optimisticQueryResults.queryResult(queryToken);\n    }\n    /**\n   * Whether local query result is available for a toke.\n   *\n   * This method does not throw if the result is an error.\n   *\n   * @internal\n   */ hasLocalQueryResultByToken(queryToken) {\n        return this.optimisticQueryResults.hasQueryResult(queryToken);\n    }\n    /**\n   * @internal\n   */ localQueryLogs(udfPath, args) {\n        const argsObject = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_12__.parseArgs)(args);\n        const queryToken = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_7__.serializePathAndArgs)(udfPath, argsObject);\n        return this.optimisticQueryResults.queryLogs(queryToken);\n    }\n    /**\n   * Retrieve the current {@link QueryJournal} for this query function.\n   *\n   * If we have not yet received a result for this query, this will be `undefined`.\n   *\n   * @param name - The name of the query.\n   * @param args - The arguments object for this query.\n   * @returns The query's {@link QueryJournal} or `undefined`.\n   */ queryJournal(name, args) {\n        const argsObject = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_12__.parseArgs)(args);\n        const queryToken = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_7__.serializePathAndArgs)(name, argsObject);\n        return this.state.queryJournal(queryToken);\n    }\n    /**\n   * Get the current {@link ConnectionState} between the client and the Convex\n   * backend.\n   *\n   * @returns The {@link ConnectionState} with the Convex backend.\n   */ connectionState() {\n        return {\n            hasInflightRequests: this.requestManager.hasInflightRequests(),\n            isWebSocketConnected: this.webSocketManager.socketState() === \"ready\",\n            timeOfOldestInflightRequest: this.requestManager.timeOfOldestInflightRequest()\n        };\n    }\n    /**\n     * Execute a mutation function.\n     *\n     * @param name - The name of the mutation.\n     * @param args - An arguments object for the mutation. If this is omitted,\n     * the arguments will be `{}`.\n     * @param options - A {@link MutationOptions} options object for this mutation.\n  \n     * @returns - A promise of the mutation's result.\n     */ async mutation(name, args, options) {\n        const result = await this.mutationInternal(name, args, options);\n        if (!result.success) {\n            if (result.errorData !== void 0) {\n                throw (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.forwardData)(result, new _values_errors_js__WEBPACK_IMPORTED_MODULE_13__.ConvexError((0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.createHybridErrorStacktrace)(\"mutation\", name, result)));\n            }\n            throw new Error((0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.createHybridErrorStacktrace)(\"mutation\", name, result));\n        }\n        return result.value;\n    }\n    /**\n   * @internal\n   */ async mutationInternal(udfPath, args, options) {\n        const mutationArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_12__.parseArgs)(args);\n        this.tryReportLongDisconnect();\n        const requestId = this.nextRequestId;\n        this.nextRequestId++;\n        if (options !== void 0) {\n            const optimisticUpdate = options.optimisticUpdate;\n            if (optimisticUpdate !== void 0) {\n                const wrappedUpdate = (localQueryStore)=>{\n                    optimisticUpdate(localQueryStore, mutationArgs);\n                };\n                const changedQueries = this.optimisticQueryResults.applyOptimisticUpdate(wrappedUpdate, requestId);\n                this.onTransition(changedQueries);\n            }\n        }\n        const message = {\n            type: \"Mutation\",\n            requestId,\n            udfPath,\n            args: [\n                (0,_values_index_js__WEBPACK_IMPORTED_MODULE_1__.convexToJson)(mutationArgs)\n            ]\n        };\n        const mightBeSent = this.webSocketManager.sendMessage(message);\n        return this.requestManager.request(message, mightBeSent);\n    }\n    /**\n   * Execute an action function.\n   *\n   * @param name - The name of the action.\n   * @param args - An arguments object for the action. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the action's result.\n   */ async action(name, args) {\n        const result = await this.actionInternal(name, args);\n        if (!result.success) {\n            if (result.errorData !== void 0) {\n                throw (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.forwardData)(result, new _values_errors_js__WEBPACK_IMPORTED_MODULE_13__.ConvexError((0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.createHybridErrorStacktrace)(\"action\", name, result)));\n            }\n            throw new Error((0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.createHybridErrorStacktrace)(\"action\", name, result));\n        }\n        return result.value;\n    }\n    /**\n   * @internal\n   */ async actionInternal(udfPath, args) {\n        const actionArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_12__.parseArgs)(args);\n        const requestId = this.nextRequestId;\n        this.nextRequestId++;\n        this.tryReportLongDisconnect();\n        const message = {\n            type: \"Action\",\n            requestId,\n            udfPath,\n            args: [\n                (0,_values_index_js__WEBPACK_IMPORTED_MODULE_1__.convexToJson)(actionArgs)\n            ]\n        };\n        const mightBeSent = this.webSocketManager.sendMessage(message);\n        return this.requestManager.request(message, mightBeSent);\n    }\n    /**\n   * Close any network handles associated with this client and stop all subscriptions.\n   *\n   * Call this method when you're done with an {@link BaseConvexClient} to\n   * dispose of its sockets and resources.\n   *\n   * @returns A `Promise` fulfilled when the connection has been completely closed.\n   */ async close() {\n        this.authenticationManager.stop();\n        return this.webSocketManager.stop();\n    }\n    _logVerbose(message) {\n        if (this.verbose) {\n            console.debug(`${/* @__PURE__ */ new Date().toISOString()} ${message}`);\n        }\n    }\n    /**\n   * Reports performance marks to the server. This should only be called when\n   * we have a functional websocket.\n   */ reportMarks() {\n        if (this.debug) {\n            const report = (0,_metrics_js__WEBPACK_IMPORTED_MODULE_11__.getMarksReport)(this.sessionId);\n            this.webSocketManager.sendMessage({\n                type: \"Event\",\n                eventType: \"ClientConnect\",\n                event: report\n            });\n        }\n    }\n    tryReportLongDisconnect() {\n        if (!this.debug) {\n            return;\n        }\n        const timeOfOldestRequest = this.connectionState().timeOfOldestInflightRequest;\n        if (timeOfOldestRequest === null || Date.now() - timeOfOldestRequest.getTime() <= 60 * 1e3) {\n            return;\n        }\n        const endpoint = `${this.address}/api/debug_event`;\n        fetch(endpoint, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Convex-Client\": `npm-${_index_js__WEBPACK_IMPORTED_MODULE_0__.version}`\n            },\n            body: JSON.stringify({\n                event: \"LongWebsocketDisconnect\"\n            })\n        }).then((response)=>{\n            if (!response.ok) {\n                console.warn(\"Analytics request failed with response:\", response.body);\n            }\n        }).catch((error)=>{\n            console.warn(\"Analytics response failed with error:\", error);\n        });\n    }\n} //# sourceMappingURL=client.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/local_state.js":
/*!******************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/local_state.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LocalSyncState: () => (/* binding */ LocalSyncState)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _udf_path_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./udf_path_utils.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/udf_path_utils.js\");\n\n\n\nclass LocalSyncState {\n    constructor(){\n        this.nextQueryId = 0;\n        this.querySetVersion = 0;\n        this.identityVersion = 0;\n        this.querySet = /* @__PURE__ */ new Map();\n        this.queryIdToToken = /* @__PURE__ */ new Map();\n        this.outstandingQueriesOlderThanRestart = /* @__PURE__ */ new Set();\n        this.outstandingAuthOlderThanRestart = false;\n    }\n    hasSyncedPastLastReconnect() {\n        return this.outstandingQueriesOlderThanRestart.size === 0 && !this.outstandingAuthOlderThanRestart;\n    }\n    markAuthCompletion() {\n        this.outstandingAuthOlderThanRestart = false;\n    }\n    subscribe(udfPath, args, journal) {\n        const canonicalizedUdfPath = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_1__.canonicalizeUdfPath)(udfPath);\n        const queryToken = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_1__.serializePathAndArgs)(canonicalizedUdfPath, args);\n        const existingEntry = this.querySet.get(queryToken);\n        if (existingEntry !== void 0) {\n            existingEntry.numSubscribers += 1;\n            return {\n                queryToken,\n                modification: null,\n                unsubscribe: ()=>this.removeSubscriber(queryToken)\n            };\n        } else {\n            const queryId = this.nextQueryId++;\n            const query = {\n                id: queryId,\n                canonicalizedUdfPath,\n                args,\n                numSubscribers: 1,\n                journal\n            };\n            this.querySet.set(queryToken, query);\n            this.queryIdToToken.set(queryId, queryToken);\n            const baseVersion = this.querySetVersion;\n            const newVersion = ++this.querySetVersion;\n            const add = {\n                type: \"Add\",\n                queryId,\n                udfPath: canonicalizedUdfPath,\n                args: [\n                    (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(args)\n                ],\n                journal\n            };\n            const modification = {\n                type: \"ModifyQuerySet\",\n                baseVersion,\n                newVersion,\n                modifications: [\n                    add\n                ]\n            };\n            return {\n                queryToken,\n                modification,\n                unsubscribe: ()=>this.removeSubscriber(queryToken)\n            };\n        }\n    }\n    transition(transition) {\n        for (const modification of transition.modifications){\n            switch(modification.type){\n                case \"QueryUpdated\":\n                case \"QueryFailed\":\n                    {\n                        this.outstandingQueriesOlderThanRestart.delete(modification.queryId);\n                        const journal = modification.journal;\n                        if (journal !== void 0) {\n                            const queryToken = this.queryIdToToken.get(modification.queryId);\n                            if (queryToken !== void 0) {\n                                this.querySet.get(queryToken).journal = journal;\n                            }\n                        }\n                        break;\n                    }\n                case \"QueryRemoved\":\n                    {\n                        this.outstandingQueriesOlderThanRestart.delete(modification.queryId);\n                        break;\n                    }\n                default:\n                    {\n                        const _ = modification;\n                        throw new Error(`Invalid modification ${modification.type}`);\n                    }\n            }\n        }\n    }\n    queryId(udfPath, args) {\n        const canonicalizedUdfPath = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_1__.canonicalizeUdfPath)(udfPath);\n        const queryToken = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_1__.serializePathAndArgs)(canonicalizedUdfPath, args);\n        const existingEntry = this.querySet.get(queryToken);\n        if (existingEntry !== void 0) {\n            return existingEntry.id;\n        }\n        return null;\n    }\n    isCurrentOrNewerAuthVersion(version) {\n        return version >= this.identityVersion;\n    }\n    setAuth(value) {\n        this.auth = {\n            tokenType: \"User\",\n            value\n        };\n        const baseVersion = this.identityVersion++;\n        return {\n            type: \"Authenticate\",\n            baseVersion,\n            ...this.auth\n        };\n    }\n    setAdminAuth(value, actingAs) {\n        const auth = {\n            tokenType: \"Admin\",\n            value,\n            impersonating: actingAs\n        };\n        this.auth = auth;\n        const baseVersion = this.identityVersion++;\n        return {\n            type: \"Authenticate\",\n            baseVersion,\n            ...auth\n        };\n    }\n    clearAuth() {\n        this.auth = void 0;\n        this.markAuthCompletion();\n        const baseVersion = this.identityVersion++;\n        return {\n            type: \"Authenticate\",\n            tokenType: \"None\",\n            baseVersion\n        };\n    }\n    hasAuth() {\n        return !!this.auth;\n    }\n    isNewAuth(value) {\n        return this.auth?.value !== value;\n    }\n    queryPath(queryId) {\n        const pathAndArgs = this.queryIdToToken.get(queryId);\n        if (pathAndArgs) {\n            return this.querySet.get(pathAndArgs).canonicalizedUdfPath;\n        }\n        return null;\n    }\n    queryArgs(queryId) {\n        const pathAndArgs = this.queryIdToToken.get(queryId);\n        if (pathAndArgs) {\n            return this.querySet.get(pathAndArgs).args;\n        }\n        return null;\n    }\n    queryToken(queryId) {\n        return this.queryIdToToken.get(queryId) ?? null;\n    }\n    queryJournal(queryToken) {\n        return this.querySet.get(queryToken)?.journal;\n    }\n    restart(oldRemoteQueryResults) {\n        this.outstandingQueriesOlderThanRestart.clear();\n        const modifications = [];\n        for (const localQuery of this.querySet.values()){\n            const add = {\n                type: \"Add\",\n                queryId: localQuery.id,\n                udfPath: localQuery.canonicalizedUdfPath,\n                args: [\n                    (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(localQuery.args)\n                ],\n                journal: localQuery.journal\n            };\n            modifications.push(add);\n            if (!oldRemoteQueryResults.has(localQuery.id)) {\n                this.outstandingQueriesOlderThanRestart.add(localQuery.id);\n            }\n        }\n        this.querySetVersion = 1;\n        const querySet = {\n            type: \"ModifyQuerySet\",\n            baseVersion: 0,\n            newVersion: 1,\n            modifications\n        };\n        if (!this.auth) {\n            this.identityVersion = 0;\n            return [\n                querySet,\n                void 0\n            ];\n        }\n        this.outstandingAuthOlderThanRestart = true;\n        const authenticate = {\n            type: \"Authenticate\",\n            baseVersion: 0,\n            ...this.auth\n        };\n        this.identityVersion = 1;\n        return [\n            querySet,\n            authenticate\n        ];\n    }\n    removeSubscriber(queryToken) {\n        const localQuery = this.querySet.get(queryToken);\n        if (localQuery.numSubscribers > 1) {\n            localQuery.numSubscribers -= 1;\n            return null;\n        } else {\n            this.querySet.delete(queryToken);\n            this.queryIdToToken.delete(localQuery.id);\n            this.outstandingQueriesOlderThanRestart.delete(localQuery.id);\n            const baseVersion = this.querySetVersion;\n            const newVersion = ++this.querySetVersion;\n            const remove = {\n                type: \"Remove\",\n                queryId: localQuery.id\n            };\n            return {\n                type: \"ModifyQuerySet\",\n                baseVersion,\n                newVersion,\n                modifications: [\n                    remove\n                ]\n            };\n        }\n    }\n} //# sourceMappingURL=local_state.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/local_state.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/metrics.js":
/*!**************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/metrics.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getMarksReport: () => (/* binding */ getMarksReport),\n/* harmony export */   mark: () => (/* binding */ mark)\n/* harmony export */ });\n\nconst markNames = [\n    \"convexClientConstructed\",\n    \"convexWebSocketOpen\",\n    \"convexFirstMessageReceived\"\n];\nfunction mark(name, sessionId) {\n    const detail = {\n        sessionId\n    };\n    if (typeof performance === \"undefined\" || !performance.mark) return;\n    performance.mark(name, {\n        detail\n    });\n}\nfunction performanceMarkToJson(mark2) {\n    let name = mark2.name.slice(\"convex\".length);\n    name = name.charAt(0).toLowerCase() + name.slice(1);\n    return {\n        name,\n        startTime: mark2.startTime\n    };\n}\nfunction getMarksReport(sessionId) {\n    if (typeof performance === \"undefined\" || !performance.getEntriesByName) {\n        return [];\n    }\n    const allMarks = [];\n    for (const name of markNames){\n        const marks = performance.getEntriesByName(name).filter((entry)=>entry.entryType === \"mark\").filter((mark2)=>mark2.detail.sessionId === sessionId);\n        allMarks.push(...marks);\n    }\n    return allMarks.map(performanceMarkToJson);\n} //# sourceMappingURL=metrics.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy9tZXRyaWNzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWE7QUFDYixNQUFNQSxZQUFZO0lBQ2hCO0lBQ0E7SUFDQTtDQUNEO0FBQ00sU0FBU0MsS0FBS0MsSUFBSSxFQUFFQyxTQUFTO0lBQ2xDLE1BQU1DLFNBQVM7UUFBRUQ7SUFBVTtJQUMzQixJQUFJLE9BQU9FLGdCQUFnQixlQUFlLENBQUNBLFlBQVlKLElBQUksRUFDekQ7SUFDRkksWUFBWUosSUFBSSxDQUFDQyxNQUFNO1FBQUVFO0lBQU87QUFDbEM7QUFDQSxTQUFTRSxzQkFBc0JDLEtBQUs7SUFDbEMsSUFBSUwsT0FBT0ssTUFBTUwsSUFBSSxDQUFDTSxLQUFLLENBQUMsU0FBU0MsTUFBTTtJQUMzQ1AsT0FBT0EsS0FBS1EsTUFBTSxDQUFDLEdBQUdDLFdBQVcsS0FBS1QsS0FBS00sS0FBSyxDQUFDO0lBQ2pELE9BQU87UUFDTE47UUFDQVUsV0FBV0wsTUFBTUssU0FBUztJQUM1QjtBQUNGO0FBQ08sU0FBU0MsZUFBZVYsU0FBUztJQUN0QyxJQUFJLE9BQU9FLGdCQUFnQixlQUFlLENBQUNBLFlBQVlTLGdCQUFnQixFQUFFO1FBQ3ZFLE9BQU8sRUFBRTtJQUNYO0lBQ0EsTUFBTUMsV0FBVyxFQUFFO0lBQ25CLEtBQUssTUFBTWIsUUFBUUYsVUFBVztRQUM1QixNQUFNZ0IsUUFBUVgsWUFBWVMsZ0JBQWdCLENBQUNaLE1BQU1lLE1BQU0sQ0FBQyxDQUFDQyxRQUFVQSxNQUFNQyxTQUFTLEtBQUssUUFBUUYsTUFBTSxDQUFDLENBQUNWLFFBQVVBLE1BQU1ILE1BQU0sQ0FBQ0QsU0FBUyxLQUFLQTtRQUM1SVksU0FBU0ssSUFBSSxJQUFJSjtJQUNuQjtJQUNBLE9BQU9ELFNBQVNNLEdBQUcsQ0FBQ2Y7QUFDdEIsRUFDQSxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9lcmFzb3JfY2xvbmUvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy9tZXRyaWNzLmpzPzNmNTYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5jb25zdCBtYXJrTmFtZXMgPSBbXG4gIFwiY29udmV4Q2xpZW50Q29uc3RydWN0ZWRcIixcbiAgXCJjb252ZXhXZWJTb2NrZXRPcGVuXCIsXG4gIFwiY29udmV4Rmlyc3RNZXNzYWdlUmVjZWl2ZWRcIlxuXTtcbmV4cG9ydCBmdW5jdGlvbiBtYXJrKG5hbWUsIHNlc3Npb25JZCkge1xuICBjb25zdCBkZXRhaWwgPSB7IHNlc3Npb25JZCB9O1xuICBpZiAodHlwZW9mIHBlcmZvcm1hbmNlID09PSBcInVuZGVmaW5lZFwiIHx8ICFwZXJmb3JtYW5jZS5tYXJrKVxuICAgIHJldHVybjtcbiAgcGVyZm9ybWFuY2UubWFyayhuYW1lLCB7IGRldGFpbCB9KTtcbn1cbmZ1bmN0aW9uIHBlcmZvcm1hbmNlTWFya1RvSnNvbihtYXJrMikge1xuICBsZXQgbmFtZSA9IG1hcmsyLm5hbWUuc2xpY2UoXCJjb252ZXhcIi5sZW5ndGgpO1xuICBuYW1lID0gbmFtZS5jaGFyQXQoMCkudG9Mb3dlckNhc2UoKSArIG5hbWUuc2xpY2UoMSk7XG4gIHJldHVybiB7XG4gICAgbmFtZSxcbiAgICBzdGFydFRpbWU6IG1hcmsyLnN0YXJ0VGltZVxuICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldE1hcmtzUmVwb3J0KHNlc3Npb25JZCkge1xuICBpZiAodHlwZW9mIHBlcmZvcm1hbmNlID09PSBcInVuZGVmaW5lZFwiIHx8ICFwZXJmb3JtYW5jZS5nZXRFbnRyaWVzQnlOYW1lKSB7XG4gICAgcmV0dXJuIFtdO1xuICB9XG4gIGNvbnN0IGFsbE1hcmtzID0gW107XG4gIGZvciAoY29uc3QgbmFtZSBvZiBtYXJrTmFtZXMpIHtcbiAgICBjb25zdCBtYXJrcyA9IHBlcmZvcm1hbmNlLmdldEVudHJpZXNCeU5hbWUobmFtZSkuZmlsdGVyKChlbnRyeSkgPT4gZW50cnkuZW50cnlUeXBlID09PSBcIm1hcmtcIikuZmlsdGVyKChtYXJrMikgPT4gbWFyazIuZGV0YWlsLnNlc3Npb25JZCA9PT0gc2Vzc2lvbklkKTtcbiAgICBhbGxNYXJrcy5wdXNoKC4uLm1hcmtzKTtcbiAgfVxuICByZXR1cm4gYWxsTWFya3MubWFwKHBlcmZvcm1hbmNlTWFya1RvSnNvbik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZXRyaWNzLmpzLm1hcFxuIl0sIm5hbWVzIjpbIm1hcmtOYW1lcyIsIm1hcmsiLCJuYW1lIiwic2Vzc2lvbklkIiwiZGV0YWlsIiwicGVyZm9ybWFuY2UiLCJwZXJmb3JtYW5jZU1hcmtUb0pzb24iLCJtYXJrMiIsInNsaWNlIiwibGVuZ3RoIiwiY2hhckF0IiwidG9Mb3dlckNhc2UiLCJzdGFydFRpbWUiLCJnZXRNYXJrc1JlcG9ydCIsImdldEVudHJpZXNCeU5hbWUiLCJhbGxNYXJrcyIsIm1hcmtzIiwiZmlsdGVyIiwiZW50cnkiLCJlbnRyeVR5cGUiLCJwdXNoIiwibWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/metrics.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/optimistic_updates_impl.js":
/*!******************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/optimistic_updates_impl.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OptimisticQueryResults: () => (/* binding */ OptimisticQueryResults)\n/* harmony export */ });\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../server/api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/index.js */ \"(ssr)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _logging_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../logging.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/logging.js\");\n/* harmony import */ var _udf_path_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./udf_path_utils.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/udf_path_utils.js\");\n/* harmony import */ var _values_errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../values/errors.js */ \"(ssr)/./node_modules/convex/dist/esm/values/errors.js\");\n\n\n\n\n\n\nclass OptimisticLocalStoreImpl {\n    constructor(queryResults){\n        this.queryResults = queryResults;\n        this.modifiedQueries = [];\n    }\n    getQuery(query, ...args) {\n        const queryArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args[0]);\n        const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(query);\n        const queryResult = this.queryResults.get((0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_3__.serializePathAndArgs)(name, queryArgs));\n        if (queryResult === void 0) {\n            return void 0;\n        }\n        return OptimisticLocalStoreImpl.queryValue(queryResult.result);\n    }\n    getAllQueries(query) {\n        const queriesWithName = [];\n        const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(query);\n        for (const queryResult of this.queryResults.values()){\n            if (queryResult.udfPath === (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_3__.canonicalizeUdfPath)(name)) {\n                queriesWithName.push({\n                    args: queryResult.args,\n                    value: OptimisticLocalStoreImpl.queryValue(queryResult.result)\n                });\n            }\n        }\n        return queriesWithName;\n    }\n    setQuery(queryReference, args, value) {\n        const queryArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args);\n        const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(queryReference);\n        const queryToken = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_3__.serializePathAndArgs)(name, queryArgs);\n        let result;\n        if (value === void 0) {\n            result = void 0;\n        } else {\n            result = {\n                success: true,\n                value,\n                // It's an optimistic update, so there are no function logs to show.\n                logLines: []\n            };\n        }\n        const query = {\n            udfPath: name,\n            args: queryArgs,\n            result\n        };\n        this.queryResults.set(queryToken, query);\n        this.modifiedQueries.push(queryToken);\n    }\n    static queryValue(result) {\n        if (result === void 0) {\n            return void 0;\n        } else if (result.success) {\n            return result.value;\n        } else {\n            return void 0;\n        }\n    }\n}\nclass OptimisticQueryResults {\n    constructor(){\n        this.queryResults = /* @__PURE__ */ new Map();\n        this.optimisticUpdates = [];\n    }\n    ingestQueryResultsFromServer(serverQueryResults, optimisticUpdatesToDrop) {\n        this.optimisticUpdates = this.optimisticUpdates.filter((updateAndId)=>{\n            return !optimisticUpdatesToDrop.has(updateAndId.mutationId);\n        });\n        const oldQueryResults = this.queryResults;\n        this.queryResults = new Map(serverQueryResults);\n        const localStore = new OptimisticLocalStoreImpl(this.queryResults);\n        for (const updateAndId of this.optimisticUpdates){\n            updateAndId.update(localStore);\n        }\n        const changedQueries = [];\n        for (const [queryToken, query] of this.queryResults){\n            const oldQuery = oldQueryResults.get(queryToken);\n            if (oldQuery === void 0 || oldQuery.result !== query.result) {\n                changedQueries.push(queryToken);\n            }\n        }\n        return changedQueries;\n    }\n    applyOptimisticUpdate(update, mutationId) {\n        this.optimisticUpdates.push({\n            update,\n            mutationId\n        });\n        const localStore = new OptimisticLocalStoreImpl(this.queryResults);\n        update(localStore);\n        return localStore.modifiedQueries;\n    }\n    queryResult(queryToken) {\n        const query = this.queryResults.get(queryToken);\n        if (query === void 0) {\n            return void 0;\n        }\n        const result = query.result;\n        if (result === void 0) {\n            return void 0;\n        } else if (result.success) {\n            return result.value;\n        } else {\n            if (result.errorData !== void 0) {\n                throw (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.forwardData)(result, new _values_errors_js__WEBPACK_IMPORTED_MODULE_4__.ConvexError((0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.createHybridErrorStacktrace)(\"query\", query.udfPath, result)));\n            }\n            throw new Error((0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.createHybridErrorStacktrace)(\"query\", query.udfPath, result));\n        }\n    }\n    hasQueryResult(queryToken) {\n        return this.queryResults.get(queryToken) !== void 0;\n    }\n    /**\n   * @internal\n   */ queryLogs(queryToken) {\n        const query = this.queryResults.get(queryToken);\n        return query?.result?.logLines;\n    }\n} //# sourceMappingURL=optimistic_updates_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy9vcHRpbWlzdGljX3VwZGF0ZXNfaW1wbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBYTtBQUdnQjtBQUNxQjtBQUN1QjtBQUk1QztBQUN3QjtBQUNyRCxNQUFNTztJQUNKQyxZQUFZQyxZQUFZLENBQUU7UUFDeEIsSUFBSSxDQUFDQSxZQUFZLEdBQUdBO1FBQ3BCLElBQUksQ0FBQ0MsZUFBZSxHQUFHLEVBQUU7SUFDM0I7SUFDQUMsU0FBU0MsS0FBSyxFQUFFLEdBQUdDLElBQUksRUFBRTtRQUN2QixNQUFNQyxZQUFZYiwyREFBU0EsQ0FBQ1ksSUFBSSxDQUFDLEVBQUU7UUFDbkMsTUFBTUUsT0FBT2YsK0RBQWVBLENBQUNZO1FBQzdCLE1BQU1JLGNBQWMsSUFBSSxDQUFDUCxZQUFZLENBQUNRLEdBQUcsQ0FDdkNaLHdFQUFvQkEsQ0FBQ1UsTUFBTUQ7UUFFN0IsSUFBSUUsZ0JBQWdCLEtBQUssR0FBRztZQUMxQixPQUFPLEtBQUs7UUFDZDtRQUNBLE9BQU9ULHlCQUF5QlcsVUFBVSxDQUFDRixZQUFZRyxNQUFNO0lBQy9EO0lBQ0FDLGNBQWNSLEtBQUssRUFBRTtRQUNuQixNQUFNUyxrQkFBa0IsRUFBRTtRQUMxQixNQUFNTixPQUFPZiwrREFBZUEsQ0FBQ1k7UUFDN0IsS0FBSyxNQUFNSSxlQUFlLElBQUksQ0FBQ1AsWUFBWSxDQUFDYSxNQUFNLEdBQUk7WUFDcEQsSUFBSU4sWUFBWU8sT0FBTyxLQUFLbkIsdUVBQW1CQSxDQUFDVyxPQUFPO2dCQUNyRE0sZ0JBQWdCRyxJQUFJLENBQUM7b0JBQ25CWCxNQUFNRyxZQUFZSCxJQUFJO29CQUN0QlksT0FBT2xCLHlCQUF5QlcsVUFBVSxDQUFDRixZQUFZRyxNQUFNO2dCQUMvRDtZQUNGO1FBQ0Y7UUFDQSxPQUFPRTtJQUNUO0lBQ0FLLFNBQVNDLGNBQWMsRUFBRWQsSUFBSSxFQUFFWSxLQUFLLEVBQUU7UUFDcEMsTUFBTVgsWUFBWWIsMkRBQVNBLENBQUNZO1FBQzVCLE1BQU1FLE9BQU9mLCtEQUFlQSxDQUFDMkI7UUFDN0IsTUFBTUMsYUFBYXZCLHdFQUFvQkEsQ0FBQ1UsTUFBTUQ7UUFDOUMsSUFBSUs7UUFDSixJQUFJTSxVQUFVLEtBQUssR0FBRztZQUNwQk4sU0FBUyxLQUFLO1FBQ2hCLE9BQU87WUFDTEEsU0FBUztnQkFDUFUsU0FBUztnQkFDVEo7Z0JBQ0Esb0VBQW9FO2dCQUNwRUssVUFBVSxFQUFFO1lBQ2Q7UUFDRjtRQUNBLE1BQU1sQixRQUFRO1lBQ1pXLFNBQVNSO1lBQ1RGLE1BQU1DO1lBQ05LO1FBQ0Y7UUFDQSxJQUFJLENBQUNWLFlBQVksQ0FBQ3NCLEdBQUcsQ0FBQ0gsWUFBWWhCO1FBQ2xDLElBQUksQ0FBQ0YsZUFBZSxDQUFDYyxJQUFJLENBQUNJO0lBQzVCO0lBQ0EsT0FBT1YsV0FBV0MsTUFBTSxFQUFFO1FBQ3hCLElBQUlBLFdBQVcsS0FBSyxHQUFHO1lBQ3JCLE9BQU8sS0FBSztRQUNkLE9BQU8sSUFBSUEsT0FBT1UsT0FBTyxFQUFFO1lBQ3pCLE9BQU9WLE9BQU9NLEtBQUs7UUFDckIsT0FBTztZQUNMLE9BQU8sS0FBSztRQUNkO0lBQ0Y7QUFDRjtBQUNPLE1BQU1PO0lBQ1h4QixhQUFjO1FBQ1osSUFBSSxDQUFDQyxZQUFZLEdBQUcsYUFBYSxHQUFHLElBQUl3QjtRQUN4QyxJQUFJLENBQUNDLGlCQUFpQixHQUFHLEVBQUU7SUFDN0I7SUFDQUMsNkJBQTZCQyxrQkFBa0IsRUFBRUMsdUJBQXVCLEVBQUU7UUFDeEUsSUFBSSxDQUFDSCxpQkFBaUIsR0FBRyxJQUFJLENBQUNBLGlCQUFpQixDQUFDSSxNQUFNLENBQUMsQ0FBQ0M7WUFDdEQsT0FBTyxDQUFDRix3QkFBd0JHLEdBQUcsQ0FBQ0QsWUFBWUUsVUFBVTtRQUM1RDtRQUNBLE1BQU1DLGtCQUFrQixJQUFJLENBQUNqQyxZQUFZO1FBQ3pDLElBQUksQ0FBQ0EsWUFBWSxHQUFHLElBQUl3QixJQUFJRztRQUM1QixNQUFNTyxhQUFhLElBQUlwQyx5QkFBeUIsSUFBSSxDQUFDRSxZQUFZO1FBQ2pFLEtBQUssTUFBTThCLGVBQWUsSUFBSSxDQUFDTCxpQkFBaUIsQ0FBRTtZQUNoREssWUFBWUssTUFBTSxDQUFDRDtRQUNyQjtRQUNBLE1BQU1FLGlCQUFpQixFQUFFO1FBQ3pCLEtBQUssTUFBTSxDQUFDakIsWUFBWWhCLE1BQU0sSUFBSSxJQUFJLENBQUNILFlBQVksQ0FBRTtZQUNuRCxNQUFNcUMsV0FBV0osZ0JBQWdCekIsR0FBRyxDQUFDVztZQUNyQyxJQUFJa0IsYUFBYSxLQUFLLEtBQUtBLFNBQVMzQixNQUFNLEtBQUtQLE1BQU1PLE1BQU0sRUFBRTtnQkFDM0QwQixlQUFlckIsSUFBSSxDQUFDSTtZQUN0QjtRQUNGO1FBQ0EsT0FBT2lCO0lBQ1Q7SUFDQUUsc0JBQXNCSCxNQUFNLEVBQUVILFVBQVUsRUFBRTtRQUN4QyxJQUFJLENBQUNQLGlCQUFpQixDQUFDVixJQUFJLENBQUM7WUFDMUJvQjtZQUNBSDtRQUNGO1FBQ0EsTUFBTUUsYUFBYSxJQUFJcEMseUJBQXlCLElBQUksQ0FBQ0UsWUFBWTtRQUNqRW1DLE9BQU9EO1FBQ1AsT0FBT0EsV0FBV2pDLGVBQWU7SUFDbkM7SUFDQU0sWUFBWVksVUFBVSxFQUFFO1FBQ3RCLE1BQU1oQixRQUFRLElBQUksQ0FBQ0gsWUFBWSxDQUFDUSxHQUFHLENBQUNXO1FBQ3BDLElBQUloQixVQUFVLEtBQUssR0FBRztZQUNwQixPQUFPLEtBQUs7UUFDZDtRQUNBLE1BQU1PLFNBQVNQLE1BQU1PLE1BQU07UUFDM0IsSUFBSUEsV0FBVyxLQUFLLEdBQUc7WUFDckIsT0FBTyxLQUFLO1FBQ2QsT0FBTyxJQUFJQSxPQUFPVSxPQUFPLEVBQUU7WUFDekIsT0FBT1YsT0FBT00sS0FBSztRQUNyQixPQUFPO1lBQ0wsSUFBSU4sT0FBTzZCLFNBQVMsS0FBSyxLQUFLLEdBQUc7Z0JBQy9CLE1BQU03Qyx3REFBV0EsQ0FDZmdCLFFBQ0EsSUFBSWIsMERBQVdBLENBQ2JKLHdFQUEyQkEsQ0FBQyxTQUFTVSxNQUFNVyxPQUFPLEVBQUVKO1lBRzFEO1lBQ0EsTUFBTSxJQUFJOEIsTUFDUi9DLHdFQUEyQkEsQ0FBQyxTQUFTVSxNQUFNVyxPQUFPLEVBQUVKO1FBRXhEO0lBQ0Y7SUFDQStCLGVBQWV0QixVQUFVLEVBQUU7UUFDekIsT0FBTyxJQUFJLENBQUNuQixZQUFZLENBQUNRLEdBQUcsQ0FBQ1csZ0JBQWdCLEtBQUs7SUFDcEQ7SUFDQTs7R0FFQyxHQUNEdUIsVUFBVXZCLFVBQVUsRUFBRTtRQUNwQixNQUFNaEIsUUFBUSxJQUFJLENBQUNILFlBQVksQ0FBQ1EsR0FBRyxDQUFDVztRQUNwQyxPQUFPaEIsT0FBT08sUUFBUVc7SUFDeEI7QUFDRixFQUNBLG1EQUFtRCIsInNvdXJjZXMiOlsid2VicGFjazovL2VyYXNvcl9jbG9uZS8uL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vYnJvd3Nlci9zeW5jL29wdGltaXN0aWNfdXBkYXRlc19pbXBsLmpzPzQ1YTUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5pbXBvcnQge1xuICBnZXRGdW5jdGlvbk5hbWVcbn0gZnJvbSBcIi4uLy4uL3NlcnZlci9hcGkuanNcIjtcbmltcG9ydCB7IHBhcnNlQXJncyB9IGZyb20gXCIuLi8uLi9jb21tb24vaW5kZXguanNcIjtcbmltcG9ydCB7IGNyZWF0ZUh5YnJpZEVycm9yU3RhY2t0cmFjZSwgZm9yd2FyZERhdGEgfSBmcm9tIFwiLi4vbG9nZ2luZy5qc1wiO1xuaW1wb3J0IHtcbiAgY2Fub25pY2FsaXplVWRmUGF0aCxcbiAgc2VyaWFsaXplUGF0aEFuZEFyZ3Ncbn0gZnJvbSBcIi4vdWRmX3BhdGhfdXRpbHMuanNcIjtcbmltcG9ydCB7IENvbnZleEVycm9yIH0gZnJvbSBcIi4uLy4uL3ZhbHVlcy9lcnJvcnMuanNcIjtcbmNsYXNzIE9wdGltaXN0aWNMb2NhbFN0b3JlSW1wbCB7XG4gIGNvbnN0cnVjdG9yKHF1ZXJ5UmVzdWx0cykge1xuICAgIHRoaXMucXVlcnlSZXN1bHRzID0gcXVlcnlSZXN1bHRzO1xuICAgIHRoaXMubW9kaWZpZWRRdWVyaWVzID0gW107XG4gIH1cbiAgZ2V0UXVlcnkocXVlcnksIC4uLmFyZ3MpIHtcbiAgICBjb25zdCBxdWVyeUFyZ3MgPSBwYXJzZUFyZ3MoYXJnc1swXSk7XG4gICAgY29uc3QgbmFtZSA9IGdldEZ1bmN0aW9uTmFtZShxdWVyeSk7XG4gICAgY29uc3QgcXVlcnlSZXN1bHQgPSB0aGlzLnF1ZXJ5UmVzdWx0cy5nZXQoXG4gICAgICBzZXJpYWxpemVQYXRoQW5kQXJncyhuYW1lLCBxdWVyeUFyZ3MpXG4gICAgKTtcbiAgICBpZiAocXVlcnlSZXN1bHQgPT09IHZvaWQgMCkge1xuICAgICAgcmV0dXJuIHZvaWQgMDtcbiAgICB9XG4gICAgcmV0dXJuIE9wdGltaXN0aWNMb2NhbFN0b3JlSW1wbC5xdWVyeVZhbHVlKHF1ZXJ5UmVzdWx0LnJlc3VsdCk7XG4gIH1cbiAgZ2V0QWxsUXVlcmllcyhxdWVyeSkge1xuICAgIGNvbnN0IHF1ZXJpZXNXaXRoTmFtZSA9IFtdO1xuICAgIGNvbnN0IG5hbWUgPSBnZXRGdW5jdGlvbk5hbWUocXVlcnkpO1xuICAgIGZvciAoY29uc3QgcXVlcnlSZXN1bHQgb2YgdGhpcy5xdWVyeVJlc3VsdHMudmFsdWVzKCkpIHtcbiAgICAgIGlmIChxdWVyeVJlc3VsdC51ZGZQYXRoID09PSBjYW5vbmljYWxpemVVZGZQYXRoKG5hbWUpKSB7XG4gICAgICAgIHF1ZXJpZXNXaXRoTmFtZS5wdXNoKHtcbiAgICAgICAgICBhcmdzOiBxdWVyeVJlc3VsdC5hcmdzLFxuICAgICAgICAgIHZhbHVlOiBPcHRpbWlzdGljTG9jYWxTdG9yZUltcGwucXVlcnlWYWx1ZShxdWVyeVJlc3VsdC5yZXN1bHQpXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcXVlcmllc1dpdGhOYW1lO1xuICB9XG4gIHNldFF1ZXJ5KHF1ZXJ5UmVmZXJlbmNlLCBhcmdzLCB2YWx1ZSkge1xuICAgIGNvbnN0IHF1ZXJ5QXJncyA9IHBhcnNlQXJncyhhcmdzKTtcbiAgICBjb25zdCBuYW1lID0gZ2V0RnVuY3Rpb25OYW1lKHF1ZXJ5UmVmZXJlbmNlKTtcbiAgICBjb25zdCBxdWVyeVRva2VuID0gc2VyaWFsaXplUGF0aEFuZEFyZ3MobmFtZSwgcXVlcnlBcmdzKTtcbiAgICBsZXQgcmVzdWx0O1xuICAgIGlmICh2YWx1ZSA9PT0gdm9pZCAwKSB7XG4gICAgICByZXN1bHQgPSB2b2lkIDA7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlc3VsdCA9IHtcbiAgICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgICAgdmFsdWUsXG4gICAgICAgIC8vIEl0J3MgYW4gb3B0aW1pc3RpYyB1cGRhdGUsIHNvIHRoZXJlIGFyZSBubyBmdW5jdGlvbiBsb2dzIHRvIHNob3cuXG4gICAgICAgIGxvZ0xpbmVzOiBbXVxuICAgICAgfTtcbiAgICB9XG4gICAgY29uc3QgcXVlcnkgPSB7XG4gICAgICB1ZGZQYXRoOiBuYW1lLFxuICAgICAgYXJnczogcXVlcnlBcmdzLFxuICAgICAgcmVzdWx0XG4gICAgfTtcbiAgICB0aGlzLnF1ZXJ5UmVzdWx0cy5zZXQocXVlcnlUb2tlbiwgcXVlcnkpO1xuICAgIHRoaXMubW9kaWZpZWRRdWVyaWVzLnB1c2gocXVlcnlUb2tlbik7XG4gIH1cbiAgc3RhdGljIHF1ZXJ5VmFsdWUocmVzdWx0KSB7XG4gICAgaWYgKHJlc3VsdCA9PT0gdm9pZCAwKSB7XG4gICAgICByZXR1cm4gdm9pZCAwO1xuICAgIH0gZWxzZSBpZiAocmVzdWx0LnN1Y2Nlc3MpIHtcbiAgICAgIHJldHVybiByZXN1bHQudmFsdWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB2b2lkIDA7XG4gICAgfVxuICB9XG59XG5leHBvcnQgY2xhc3MgT3B0aW1pc3RpY1F1ZXJ5UmVzdWx0cyB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMucXVlcnlSZXN1bHRzID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTtcbiAgICB0aGlzLm9wdGltaXN0aWNVcGRhdGVzID0gW107XG4gIH1cbiAgaW5nZXN0UXVlcnlSZXN1bHRzRnJvbVNlcnZlcihzZXJ2ZXJRdWVyeVJlc3VsdHMsIG9wdGltaXN0aWNVcGRhdGVzVG9Ecm9wKSB7XG4gICAgdGhpcy5vcHRpbWlzdGljVXBkYXRlcyA9IHRoaXMub3B0aW1pc3RpY1VwZGF0ZXMuZmlsdGVyKCh1cGRhdGVBbmRJZCkgPT4ge1xuICAgICAgcmV0dXJuICFvcHRpbWlzdGljVXBkYXRlc1RvRHJvcC5oYXModXBkYXRlQW5kSWQubXV0YXRpb25JZCk7XG4gICAgfSk7XG4gICAgY29uc3Qgb2xkUXVlcnlSZXN1bHRzID0gdGhpcy5xdWVyeVJlc3VsdHM7XG4gICAgdGhpcy5xdWVyeVJlc3VsdHMgPSBuZXcgTWFwKHNlcnZlclF1ZXJ5UmVzdWx0cyk7XG4gICAgY29uc3QgbG9jYWxTdG9yZSA9IG5ldyBPcHRpbWlzdGljTG9jYWxTdG9yZUltcGwodGhpcy5xdWVyeVJlc3VsdHMpO1xuICAgIGZvciAoY29uc3QgdXBkYXRlQW5kSWQgb2YgdGhpcy5vcHRpbWlzdGljVXBkYXRlcykge1xuICAgICAgdXBkYXRlQW5kSWQudXBkYXRlKGxvY2FsU3RvcmUpO1xuICAgIH1cbiAgICBjb25zdCBjaGFuZ2VkUXVlcmllcyA9IFtdO1xuICAgIGZvciAoY29uc3QgW3F1ZXJ5VG9rZW4sIHF1ZXJ5XSBvZiB0aGlzLnF1ZXJ5UmVzdWx0cykge1xuICAgICAgY29uc3Qgb2xkUXVlcnkgPSBvbGRRdWVyeVJlc3VsdHMuZ2V0KHF1ZXJ5VG9rZW4pO1xuICAgICAgaWYgKG9sZFF1ZXJ5ID09PSB2b2lkIDAgfHwgb2xkUXVlcnkucmVzdWx0ICE9PSBxdWVyeS5yZXN1bHQpIHtcbiAgICAgICAgY2hhbmdlZFF1ZXJpZXMucHVzaChxdWVyeVRva2VuKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGNoYW5nZWRRdWVyaWVzO1xuICB9XG4gIGFwcGx5T3B0aW1pc3RpY1VwZGF0ZSh1cGRhdGUsIG11dGF0aW9uSWQpIHtcbiAgICB0aGlzLm9wdGltaXN0aWNVcGRhdGVzLnB1c2goe1xuICAgICAgdXBkYXRlLFxuICAgICAgbXV0YXRpb25JZFxuICAgIH0pO1xuICAgIGNvbnN0IGxvY2FsU3RvcmUgPSBuZXcgT3B0aW1pc3RpY0xvY2FsU3RvcmVJbXBsKHRoaXMucXVlcnlSZXN1bHRzKTtcbiAgICB1cGRhdGUobG9jYWxTdG9yZSk7XG4gICAgcmV0dXJuIGxvY2FsU3RvcmUubW9kaWZpZWRRdWVyaWVzO1xuICB9XG4gIHF1ZXJ5UmVzdWx0KHF1ZXJ5VG9rZW4pIHtcbiAgICBjb25zdCBxdWVyeSA9IHRoaXMucXVlcnlSZXN1bHRzLmdldChxdWVyeVRva2VuKTtcbiAgICBpZiAocXVlcnkgPT09IHZvaWQgMCkge1xuICAgICAgcmV0dXJuIHZvaWQgMDtcbiAgICB9XG4gICAgY29uc3QgcmVzdWx0ID0gcXVlcnkucmVzdWx0O1xuICAgIGlmIChyZXN1bHQgPT09IHZvaWQgMCkge1xuICAgICAgcmV0dXJuIHZvaWQgMDtcbiAgICB9IGVsc2UgaWYgKHJlc3VsdC5zdWNjZXNzKSB7XG4gICAgICByZXR1cm4gcmVzdWx0LnZhbHVlO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAocmVzdWx0LmVycm9yRGF0YSAhPT0gdm9pZCAwKSB7XG4gICAgICAgIHRocm93IGZvcndhcmREYXRhKFxuICAgICAgICAgIHJlc3VsdCxcbiAgICAgICAgICBuZXcgQ29udmV4RXJyb3IoXG4gICAgICAgICAgICBjcmVhdGVIeWJyaWRFcnJvclN0YWNrdHJhY2UoXCJxdWVyeVwiLCBxdWVyeS51ZGZQYXRoLCByZXN1bHQpXG4gICAgICAgICAgKVxuICAgICAgICApO1xuICAgICAgfVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBjcmVhdGVIeWJyaWRFcnJvclN0YWNrdHJhY2UoXCJxdWVyeVwiLCBxdWVyeS51ZGZQYXRoLCByZXN1bHQpXG4gICAgICApO1xuICAgIH1cbiAgfVxuICBoYXNRdWVyeVJlc3VsdChxdWVyeVRva2VuKSB7XG4gICAgcmV0dXJuIHRoaXMucXVlcnlSZXN1bHRzLmdldChxdWVyeVRva2VuKSAhPT0gdm9pZCAwO1xuICB9XG4gIC8qKlxuICAgKiBAaW50ZXJuYWxcbiAgICovXG4gIHF1ZXJ5TG9ncyhxdWVyeVRva2VuKSB7XG4gICAgY29uc3QgcXVlcnkgPSB0aGlzLnF1ZXJ5UmVzdWx0cy5nZXQocXVlcnlUb2tlbik7XG4gICAgcmV0dXJuIHF1ZXJ5Py5yZXN1bHQ/LmxvZ0xpbmVzO1xuICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vcHRpbWlzdGljX3VwZGF0ZXNfaW1wbC5qcy5tYXBcbiJdLCJuYW1lcyI6WyJnZXRGdW5jdGlvbk5hbWUiLCJwYXJzZUFyZ3MiLCJjcmVhdGVIeWJyaWRFcnJvclN0YWNrdHJhY2UiLCJmb3J3YXJkRGF0YSIsImNhbm9uaWNhbGl6ZVVkZlBhdGgiLCJzZXJpYWxpemVQYXRoQW5kQXJncyIsIkNvbnZleEVycm9yIiwiT3B0aW1pc3RpY0xvY2FsU3RvcmVJbXBsIiwiY29uc3RydWN0b3IiLCJxdWVyeVJlc3VsdHMiLCJtb2RpZmllZFF1ZXJpZXMiLCJnZXRRdWVyeSIsInF1ZXJ5IiwiYXJncyIsInF1ZXJ5QXJncyIsIm5hbWUiLCJxdWVyeVJlc3VsdCIsImdldCIsInF1ZXJ5VmFsdWUiLCJyZXN1bHQiLCJnZXRBbGxRdWVyaWVzIiwicXVlcmllc1dpdGhOYW1lIiwidmFsdWVzIiwidWRmUGF0aCIsInB1c2giLCJ2YWx1ZSIsInNldFF1ZXJ5IiwicXVlcnlSZWZlcmVuY2UiLCJxdWVyeVRva2VuIiwic3VjY2VzcyIsImxvZ0xpbmVzIiwic2V0IiwiT3B0aW1pc3RpY1F1ZXJ5UmVzdWx0cyIsIk1hcCIsIm9wdGltaXN0aWNVcGRhdGVzIiwiaW5nZXN0UXVlcnlSZXN1bHRzRnJvbVNlcnZlciIsInNlcnZlclF1ZXJ5UmVzdWx0cyIsIm9wdGltaXN0aWNVcGRhdGVzVG9Ecm9wIiwiZmlsdGVyIiwidXBkYXRlQW5kSWQiLCJoYXMiLCJtdXRhdGlvbklkIiwib2xkUXVlcnlSZXN1bHRzIiwibG9jYWxTdG9yZSIsInVwZGF0ZSIsImNoYW5nZWRRdWVyaWVzIiwib2xkUXVlcnkiLCJhcHBseU9wdGltaXN0aWNVcGRhdGUiLCJlcnJvckRhdGEiLCJFcnJvciIsImhhc1F1ZXJ5UmVzdWx0IiwicXVlcnlMb2dzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/optimistic_updates_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/protocol.js":
/*!***************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/protocol.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeClientMessage: () => (/* binding */ encodeClientMessage),\n/* harmony export */   longToU64: () => (/* binding */ longToU64),\n/* harmony export */   parseServerMessage: () => (/* binding */ parseServerMessage),\n/* harmony export */   u64ToLong: () => (/* binding */ u64ToLong)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _long_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../long.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/long.js\");\n\n\n\nfunction u64ToLong(encoded) {\n    const integerBytes = _values_index_js__WEBPACK_IMPORTED_MODULE_0__.Base64.toByteArray(encoded);\n    return _long_js__WEBPACK_IMPORTED_MODULE_1__.Long.fromBytesLE(Array.from(integerBytes));\n}\nfunction longToU64(raw) {\n    const integerBytes = new Uint8Array(raw.toBytesLE());\n    return _values_index_js__WEBPACK_IMPORTED_MODULE_0__.Base64.fromByteArray(integerBytes);\n}\nfunction parseServerMessage(encoded) {\n    switch(encoded.type){\n        case \"FatalError\":\n        case \"AuthError\":\n        case \"ActionResponse\":\n        case \"Ping\":\n            {\n                return {\n                    ...encoded\n                };\n            }\n        case \"MutationResponse\":\n            {\n                if (encoded.success) {\n                    return {\n                        ...encoded,\n                        ts: u64ToLong(encoded.ts)\n                    };\n                } else {\n                    return {\n                        ...encoded\n                    };\n                }\n            }\n        case \"Transition\":\n            {\n                return {\n                    ...encoded,\n                    startVersion: {\n                        ...encoded.startVersion,\n                        ts: u64ToLong(encoded.startVersion.ts)\n                    },\n                    endVersion: {\n                        ...encoded.endVersion,\n                        ts: u64ToLong(encoded.endVersion.ts)\n                    }\n                };\n            }\n        default:\n            {\n                const _exhaustivenessCheck = encoded;\n            }\n    }\n    return void 0;\n}\nfunction encodeClientMessage(message) {\n    switch(message.type){\n        case \"Authenticate\":\n        case \"ModifyQuerySet\":\n        case \"Mutation\":\n        case \"Action\":\n        case \"Event\":\n            {\n                return {\n                    ...message\n                };\n            }\n        case \"Connect\":\n            {\n                if (message.maxObservedTimestamp !== void 0) {\n                    return {\n                        ...message,\n                        maxObservedTimestamp: longToU64(message.maxObservedTimestamp)\n                    };\n                } else {\n                    return {\n                        ...message,\n                        maxObservedTimestamp: void 0\n                    };\n                }\n            }\n        default:\n            {\n                const _exhaustivenessCheck = message;\n            }\n    }\n    return void 0;\n} //# sourceMappingURL=protocol.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy9wcm90b2NvbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBYTtBQUNrQztBQUNiO0FBQzNCLFNBQVNFLFVBQVVDLE9BQU87SUFDL0IsTUFBTUMsZUFBZUosZ0VBQWtCLENBQUNHO0lBQ3hDLE9BQU9GLDBDQUFJQSxDQUFDSyxXQUFXLENBQUNDLE1BQU1DLElBQUksQ0FBQ0o7QUFDckM7QUFDTyxTQUFTSyxVQUFVQyxHQUFHO0lBQzNCLE1BQU1OLGVBQWUsSUFBSU8sV0FBV0QsSUFBSUUsU0FBUztJQUNqRCxPQUFPWixrRUFBb0IsQ0FBQ0k7QUFDOUI7QUFDTyxTQUFTVSxtQkFBbUJYLE9BQU87SUFDeEMsT0FBUUEsUUFBUVksSUFBSTtRQUNsQixLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQVE7Z0JBQ1gsT0FBTztvQkFBRSxHQUFHWixPQUFPO2dCQUFDO1lBQ3RCO1FBQ0EsS0FBSztZQUFvQjtnQkFDdkIsSUFBSUEsUUFBUWEsT0FBTyxFQUFFO29CQUNuQixPQUFPO3dCQUFFLEdBQUdiLE9BQU87d0JBQUVjLElBQUlmLFVBQVVDLFFBQVFjLEVBQUU7b0JBQUU7Z0JBQ2pELE9BQU87b0JBQ0wsT0FBTzt3QkFBRSxHQUFHZCxPQUFPO29CQUFDO2dCQUN0QjtZQUNGO1FBQ0EsS0FBSztZQUFjO2dCQUNqQixPQUFPO29CQUNMLEdBQUdBLE9BQU87b0JBQ1ZlLGNBQWM7d0JBQ1osR0FBR2YsUUFBUWUsWUFBWTt3QkFDdkJELElBQUlmLFVBQVVDLFFBQVFlLFlBQVksQ0FBQ0QsRUFBRTtvQkFDdkM7b0JBQ0FFLFlBQVk7d0JBQ1YsR0FBR2hCLFFBQVFnQixVQUFVO3dCQUNyQkYsSUFBSWYsVUFBVUMsUUFBUWdCLFVBQVUsQ0FBQ0YsRUFBRTtvQkFDckM7Z0JBQ0Y7WUFDRjtRQUNBO1lBQVM7Z0JBQ1AsTUFBTUcsdUJBQXVCakI7WUFDL0I7SUFDRjtJQUNBLE9BQU8sS0FBSztBQUNkO0FBQ08sU0FBU2tCLG9CQUFvQkMsT0FBTztJQUN6QyxPQUFRQSxRQUFRUCxJQUFJO1FBQ2xCLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQVM7Z0JBQ1osT0FBTztvQkFBRSxHQUFHTyxPQUFPO2dCQUFDO1lBQ3RCO1FBQ0EsS0FBSztZQUFXO2dCQUNkLElBQUlBLFFBQVFDLG9CQUFvQixLQUFLLEtBQUssR0FBRztvQkFDM0MsT0FBTzt3QkFDTCxHQUFHRCxPQUFPO3dCQUNWQyxzQkFBc0JkLFVBQVVhLFFBQVFDLG9CQUFvQjtvQkFDOUQ7Z0JBQ0YsT0FBTztvQkFDTCxPQUFPO3dCQUFFLEdBQUdELE9BQU87d0JBQUVDLHNCQUFzQixLQUFLO29CQUFFO2dCQUNwRDtZQUNGO1FBQ0E7WUFBUztnQkFDUCxNQUFNSCx1QkFBdUJFO1lBQy9CO0lBQ0Y7SUFDQSxPQUFPLEtBQUs7QUFDZCxFQUNBLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL2VyYXNvcl9jbG9uZS8uL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vYnJvd3Nlci9zeW5jL3Byb3RvY29sLmpzPzI1MjQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5pbXBvcnQgeyBCYXNlNjQgfSBmcm9tIFwiLi4vLi4vdmFsdWVzL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBMb25nIH0gZnJvbSBcIi4uL2xvbmcuanNcIjtcbmV4cG9ydCBmdW5jdGlvbiB1NjRUb0xvbmcoZW5jb2RlZCkge1xuICBjb25zdCBpbnRlZ2VyQnl0ZXMgPSBCYXNlNjQudG9CeXRlQXJyYXkoZW5jb2RlZCk7XG4gIHJldHVybiBMb25nLmZyb21CeXRlc0xFKEFycmF5LmZyb20oaW50ZWdlckJ5dGVzKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gbG9uZ1RvVTY0KHJhdykge1xuICBjb25zdCBpbnRlZ2VyQnl0ZXMgPSBuZXcgVWludDhBcnJheShyYXcudG9CeXRlc0xFKCkpO1xuICByZXR1cm4gQmFzZTY0LmZyb21CeXRlQXJyYXkoaW50ZWdlckJ5dGVzKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZVNlcnZlck1lc3NhZ2UoZW5jb2RlZCkge1xuICBzd2l0Y2ggKGVuY29kZWQudHlwZSkge1xuICAgIGNhc2UgXCJGYXRhbEVycm9yXCI6XG4gICAgY2FzZSBcIkF1dGhFcnJvclwiOlxuICAgIGNhc2UgXCJBY3Rpb25SZXNwb25zZVwiOlxuICAgIGNhc2UgXCJQaW5nXCI6IHtcbiAgICAgIHJldHVybiB7IC4uLmVuY29kZWQgfTtcbiAgICB9XG4gICAgY2FzZSBcIk11dGF0aW9uUmVzcG9uc2VcIjoge1xuICAgICAgaWYgKGVuY29kZWQuc3VjY2Vzcykge1xuICAgICAgICByZXR1cm4geyAuLi5lbmNvZGVkLCB0czogdTY0VG9Mb25nKGVuY29kZWQudHMpIH07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4geyAuLi5lbmNvZGVkIH07XG4gICAgICB9XG4gICAgfVxuICAgIGNhc2UgXCJUcmFuc2l0aW9uXCI6IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLmVuY29kZWQsXG4gICAgICAgIHN0YXJ0VmVyc2lvbjoge1xuICAgICAgICAgIC4uLmVuY29kZWQuc3RhcnRWZXJzaW9uLFxuICAgICAgICAgIHRzOiB1NjRUb0xvbmcoZW5jb2RlZC5zdGFydFZlcnNpb24udHMpXG4gICAgICAgIH0sXG4gICAgICAgIGVuZFZlcnNpb246IHtcbiAgICAgICAgICAuLi5lbmNvZGVkLmVuZFZlcnNpb24sXG4gICAgICAgICAgdHM6IHU2NFRvTG9uZyhlbmNvZGVkLmVuZFZlcnNpb24udHMpXG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfVxuICAgIGRlZmF1bHQ6IHtcbiAgICAgIGNvbnN0IF9leGhhdXN0aXZlbmVzc0NoZWNrID0gZW5jb2RlZDtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHZvaWQgMDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVDbGllbnRNZXNzYWdlKG1lc3NhZ2UpIHtcbiAgc3dpdGNoIChtZXNzYWdlLnR5cGUpIHtcbiAgICBjYXNlIFwiQXV0aGVudGljYXRlXCI6XG4gICAgY2FzZSBcIk1vZGlmeVF1ZXJ5U2V0XCI6XG4gICAgY2FzZSBcIk11dGF0aW9uXCI6XG4gICAgY2FzZSBcIkFjdGlvblwiOlxuICAgIGNhc2UgXCJFdmVudFwiOiB7XG4gICAgICByZXR1cm4geyAuLi5tZXNzYWdlIH07XG4gICAgfVxuICAgIGNhc2UgXCJDb25uZWN0XCI6IHtcbiAgICAgIGlmIChtZXNzYWdlLm1heE9ic2VydmVkVGltZXN0YW1wICE9PSB2b2lkIDApIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAuLi5tZXNzYWdlLFxuICAgICAgICAgIG1heE9ic2VydmVkVGltZXN0YW1wOiBsb25nVG9VNjQobWVzc2FnZS5tYXhPYnNlcnZlZFRpbWVzdGFtcClcbiAgICAgICAgfTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB7IC4uLm1lc3NhZ2UsIG1heE9ic2VydmVkVGltZXN0YW1wOiB2b2lkIDAgfTtcbiAgICAgIH1cbiAgICB9XG4gICAgZGVmYXVsdDoge1xuICAgICAgY29uc3QgX2V4aGF1c3RpdmVuZXNzQ2hlY2sgPSBtZXNzYWdlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdm9pZCAwO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvdG9jb2wuanMubWFwXG4iXSwibmFtZXMiOlsiQmFzZTY0IiwiTG9uZyIsInU2NFRvTG9uZyIsImVuY29kZWQiLCJpbnRlZ2VyQnl0ZXMiLCJ0b0J5dGVBcnJheSIsImZyb21CeXRlc0xFIiwiQXJyYXkiLCJmcm9tIiwibG9uZ1RvVTY0IiwicmF3IiwiVWludDhBcnJheSIsInRvQnl0ZXNMRSIsImZyb21CeXRlQXJyYXkiLCJwYXJzZVNlcnZlck1lc3NhZ2UiLCJ0eXBlIiwic3VjY2VzcyIsInRzIiwic3RhcnRWZXJzaW9uIiwiZW5kVmVyc2lvbiIsIl9leGhhdXN0aXZlbmVzc0NoZWNrIiwiZW5jb2RlQ2xpZW50TWVzc2FnZSIsIm1lc3NhZ2UiLCJtYXhPYnNlcnZlZFRpbWVzdGFtcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/protocol.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/remote_query_set.js":
/*!***********************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/remote_query_set.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RemoteQuerySet: () => (/* binding */ RemoteQuerySet)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _long_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../long.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/long.js\");\n/* harmony import */ var _logging_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../logging.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/logging.js\");\n\n\n\n\nclass RemoteQuerySet {\n    constructor(queryPath){\n        this.version = {\n            querySet: 0,\n            ts: _long_js__WEBPACK_IMPORTED_MODULE_1__.Long.fromNumber(0),\n            identity: 0\n        };\n        this.remoteQuerySet = /* @__PURE__ */ new Map();\n        this.queryPath = queryPath;\n    }\n    transition(transition) {\n        const start = transition.startVersion;\n        if (this.version.querySet !== start.querySet || this.version.ts.notEquals(start.ts) || this.version.identity !== start.identity) {\n            throw new Error(`Invalid start version: ${start.ts.toString()}:${start.querySet}`);\n        }\n        for (const modification of transition.modifications){\n            switch(modification.type){\n                case \"QueryUpdated\":\n                    {\n                        const queryPath = this.queryPath(modification.queryId);\n                        if (queryPath) {\n                            for (const line of modification.logLines){\n                                (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.logToConsole)(\"info\", \"query\", queryPath, line);\n                            }\n                        }\n                        const value = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(modification.value ?? null, true);\n                        this.remoteQuerySet.set(modification.queryId, {\n                            success: true,\n                            value,\n                            logLines: modification.logLines\n                        });\n                        break;\n                    }\n                case \"QueryFailed\":\n                    {\n                        const queryPath = this.queryPath(modification.queryId);\n                        if (queryPath) {\n                            for (const line of modification.logLines){\n                                (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.logToConsole)(\"info\", \"query\", queryPath, line);\n                            }\n                        }\n                        const { errorData } = modification;\n                        this.remoteQuerySet.set(modification.queryId, {\n                            success: false,\n                            errorMessage: modification.errorMessage,\n                            errorData: errorData !== void 0 ? (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(errorData) : void 0,\n                            logLines: modification.logLines\n                        });\n                        break;\n                    }\n                case \"QueryRemoved\":\n                    {\n                        this.remoteQuerySet.delete(modification.queryId);\n                        break;\n                    }\n                default:\n                    {\n                        const _ = modification;\n                        throw new Error(`Invalid modification ${modification.type}`);\n                    }\n            }\n        }\n        this.version = transition.endVersion;\n    }\n    remoteQueryResults() {\n        return this.remoteQuerySet;\n    }\n    timestamp() {\n        return this.version.ts;\n    }\n} //# sourceMappingURL=remote_query_set.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy9yZW1vdGVfcXVlcnlfc2V0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBYTtBQUN3QztBQUNuQjtBQUNXO0FBQ3RDLE1BQU1HO0lBQ1hDLFlBQVlDLFNBQVMsQ0FBRTtRQUNyQixJQUFJLENBQUNDLE9BQU8sR0FBRztZQUFFQyxVQUFVO1lBQUdDLElBQUlQLDBDQUFJQSxDQUFDUSxVQUFVLENBQUM7WUFBSUMsVUFBVTtRQUFFO1FBQ2xFLElBQUksQ0FBQ0MsY0FBYyxHQUFHLGFBQWEsR0FBRyxJQUFJQztRQUMxQyxJQUFJLENBQUNQLFNBQVMsR0FBR0E7SUFDbkI7SUFDQVEsV0FBV0EsVUFBVSxFQUFFO1FBQ3JCLE1BQU1DLFFBQVFELFdBQVdFLFlBQVk7UUFDckMsSUFBSSxJQUFJLENBQUNULE9BQU8sQ0FBQ0MsUUFBUSxLQUFLTyxNQUFNUCxRQUFRLElBQUksSUFBSSxDQUFDRCxPQUFPLENBQUNFLEVBQUUsQ0FBQ1EsU0FBUyxDQUFDRixNQUFNTixFQUFFLEtBQUssSUFBSSxDQUFDRixPQUFPLENBQUNJLFFBQVEsS0FBS0ksTUFBTUosUUFBUSxFQUFFO1lBQy9ILE1BQU0sSUFBSU8sTUFDUixDQUFDLHVCQUF1QixFQUFFSCxNQUFNTixFQUFFLENBQUNVLFFBQVEsR0FBRyxDQUFDLEVBQUVKLE1BQU1QLFFBQVEsQ0FBQyxDQUFDO1FBRXJFO1FBQ0EsS0FBSyxNQUFNWSxnQkFBZ0JOLFdBQVdPLGFBQWEsQ0FBRTtZQUNuRCxPQUFRRCxhQUFhRSxJQUFJO2dCQUN2QixLQUFLO29CQUFnQjt3QkFDbkIsTUFBTWhCLFlBQVksSUFBSSxDQUFDQSxTQUFTLENBQUNjLGFBQWFHLE9BQU87d0JBQ3JELElBQUlqQixXQUFXOzRCQUNiLEtBQUssTUFBTWtCLFFBQVFKLGFBQWFLLFFBQVEsQ0FBRTtnQ0FDeEN0Qix5REFBWUEsQ0FBQyxRQUFRLFNBQVNHLFdBQVdrQjs0QkFDM0M7d0JBQ0Y7d0JBQ0EsTUFBTUUsUUFBUXpCLDhEQUFZQSxDQUFDbUIsYUFBYU0sS0FBSyxJQUFJLE1BQU07d0JBQ3ZELElBQUksQ0FBQ2QsY0FBYyxDQUFDZSxHQUFHLENBQUNQLGFBQWFHLE9BQU8sRUFBRTs0QkFDNUNLLFNBQVM7NEJBQ1RGOzRCQUNBRCxVQUFVTCxhQUFhSyxRQUFRO3dCQUNqQzt3QkFDQTtvQkFDRjtnQkFDQSxLQUFLO29CQUFlO3dCQUNsQixNQUFNbkIsWUFBWSxJQUFJLENBQUNBLFNBQVMsQ0FBQ2MsYUFBYUcsT0FBTzt3QkFDckQsSUFBSWpCLFdBQVc7NEJBQ2IsS0FBSyxNQUFNa0IsUUFBUUosYUFBYUssUUFBUSxDQUFFO2dDQUN4Q3RCLHlEQUFZQSxDQUFDLFFBQVEsU0FBU0csV0FBV2tCOzRCQUMzQzt3QkFDRjt3QkFDQSxNQUFNLEVBQUVLLFNBQVMsRUFBRSxHQUFHVDt3QkFDdEIsSUFBSSxDQUFDUixjQUFjLENBQUNlLEdBQUcsQ0FBQ1AsYUFBYUcsT0FBTyxFQUFFOzRCQUM1Q0ssU0FBUzs0QkFDVEUsY0FBY1YsYUFBYVUsWUFBWTs0QkFDdkNELFdBQVdBLGNBQWMsS0FBSyxJQUFJNUIsOERBQVlBLENBQUM0QixhQUFhLEtBQUs7NEJBQ2pFSixVQUFVTCxhQUFhSyxRQUFRO3dCQUNqQzt3QkFDQTtvQkFDRjtnQkFDQSxLQUFLO29CQUFnQjt3QkFDbkIsSUFBSSxDQUFDYixjQUFjLENBQUNtQixNQUFNLENBQUNYLGFBQWFHLE9BQU87d0JBQy9DO29CQUNGO2dCQUNBO29CQUFTO3dCQUNQLE1BQU1TLElBQUlaO3dCQUNWLE1BQU0sSUFBSUYsTUFBTSxDQUFDLHFCQUFxQixFQUFFRSxhQUFhRSxJQUFJLENBQUMsQ0FBQztvQkFDN0Q7WUFDRjtRQUNGO1FBQ0EsSUFBSSxDQUFDZixPQUFPLEdBQUdPLFdBQVdtQixVQUFVO0lBQ3RDO0lBQ0FDLHFCQUFxQjtRQUNuQixPQUFPLElBQUksQ0FBQ3RCLGNBQWM7SUFDNUI7SUFDQXVCLFlBQVk7UUFDVixPQUFPLElBQUksQ0FBQzVCLE9BQU8sQ0FBQ0UsRUFBRTtJQUN4QjtBQUNGLEVBQ0EsNENBQTRDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXJhc29yX2Nsb25lLy4vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9icm93c2VyL3N5bmMvcmVtb3RlX3F1ZXJ5X3NldC5qcz9hY2E1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuaW1wb3J0IHsganNvblRvQ29udmV4IH0gZnJvbSBcIi4uLy4uL3ZhbHVlcy9pbmRleC5qc1wiO1xuaW1wb3J0IHsgTG9uZyB9IGZyb20gXCIuLi9sb25nLmpzXCI7XG5pbXBvcnQgeyBsb2dUb0NvbnNvbGUgfSBmcm9tIFwiLi4vbG9nZ2luZy5qc1wiO1xuZXhwb3J0IGNsYXNzIFJlbW90ZVF1ZXJ5U2V0IHtcbiAgY29uc3RydWN0b3IocXVlcnlQYXRoKSB7XG4gICAgdGhpcy52ZXJzaW9uID0geyBxdWVyeVNldDogMCwgdHM6IExvbmcuZnJvbU51bWJlcigwKSwgaWRlbnRpdHk6IDAgfTtcbiAgICB0aGlzLnJlbW90ZVF1ZXJ5U2V0ID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTtcbiAgICB0aGlzLnF1ZXJ5UGF0aCA9IHF1ZXJ5UGF0aDtcbiAgfVxuICB0cmFuc2l0aW9uKHRyYW5zaXRpb24pIHtcbiAgICBjb25zdCBzdGFydCA9IHRyYW5zaXRpb24uc3RhcnRWZXJzaW9uO1xuICAgIGlmICh0aGlzLnZlcnNpb24ucXVlcnlTZXQgIT09IHN0YXJ0LnF1ZXJ5U2V0IHx8IHRoaXMudmVyc2lvbi50cy5ub3RFcXVhbHMoc3RhcnQudHMpIHx8IHRoaXMudmVyc2lvbi5pZGVudGl0eSAhPT0gc3RhcnQuaWRlbnRpdHkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgYEludmFsaWQgc3RhcnQgdmVyc2lvbjogJHtzdGFydC50cy50b1N0cmluZygpfToke3N0YXJ0LnF1ZXJ5U2V0fWBcbiAgICAgICk7XG4gICAgfVxuICAgIGZvciAoY29uc3QgbW9kaWZpY2F0aW9uIG9mIHRyYW5zaXRpb24ubW9kaWZpY2F0aW9ucykge1xuICAgICAgc3dpdGNoIChtb2RpZmljYXRpb24udHlwZSkge1xuICAgICAgICBjYXNlIFwiUXVlcnlVcGRhdGVkXCI6IHtcbiAgICAgICAgICBjb25zdCBxdWVyeVBhdGggPSB0aGlzLnF1ZXJ5UGF0aChtb2RpZmljYXRpb24ucXVlcnlJZCk7XG4gICAgICAgICAgaWYgKHF1ZXJ5UGF0aCkge1xuICAgICAgICAgICAgZm9yIChjb25zdCBsaW5lIG9mIG1vZGlmaWNhdGlvbi5sb2dMaW5lcykge1xuICAgICAgICAgICAgICBsb2dUb0NvbnNvbGUoXCJpbmZvXCIsIFwicXVlcnlcIiwgcXVlcnlQYXRoLCBsaW5lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgY29uc3QgdmFsdWUgPSBqc29uVG9Db252ZXgobW9kaWZpY2F0aW9uLnZhbHVlID8/IG51bGwsIHRydWUpO1xuICAgICAgICAgIHRoaXMucmVtb3RlUXVlcnlTZXQuc2V0KG1vZGlmaWNhdGlvbi5xdWVyeUlkLCB7XG4gICAgICAgICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWUsXG4gICAgICAgICAgICBsb2dMaW5lczogbW9kaWZpY2F0aW9uLmxvZ0xpbmVzXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSBcIlF1ZXJ5RmFpbGVkXCI6IHtcbiAgICAgICAgICBjb25zdCBxdWVyeVBhdGggPSB0aGlzLnF1ZXJ5UGF0aChtb2RpZmljYXRpb24ucXVlcnlJZCk7XG4gICAgICAgICAgaWYgKHF1ZXJ5UGF0aCkge1xuICAgICAgICAgICAgZm9yIChjb25zdCBsaW5lIG9mIG1vZGlmaWNhdGlvbi5sb2dMaW5lcykge1xuICAgICAgICAgICAgICBsb2dUb0NvbnNvbGUoXCJpbmZvXCIsIFwicXVlcnlcIiwgcXVlcnlQYXRoLCBsaW5lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgY29uc3QgeyBlcnJvckRhdGEgfSA9IG1vZGlmaWNhdGlvbjtcbiAgICAgICAgICB0aGlzLnJlbW90ZVF1ZXJ5U2V0LnNldChtb2RpZmljYXRpb24ucXVlcnlJZCwge1xuICAgICAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgICAgICBlcnJvck1lc3NhZ2U6IG1vZGlmaWNhdGlvbi5lcnJvck1lc3NhZ2UsXG4gICAgICAgICAgICBlcnJvckRhdGE6IGVycm9yRGF0YSAhPT0gdm9pZCAwID8ganNvblRvQ29udmV4KGVycm9yRGF0YSkgOiB2b2lkIDAsXG4gICAgICAgICAgICBsb2dMaW5lczogbW9kaWZpY2F0aW9uLmxvZ0xpbmVzXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSBcIlF1ZXJ5UmVtb3ZlZFwiOiB7XG4gICAgICAgICAgdGhpcy5yZW1vdGVRdWVyeVNldC5kZWxldGUobW9kaWZpY2F0aW9uLnF1ZXJ5SWQpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgICBjb25zdCBfID0gbW9kaWZpY2F0aW9uO1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBtb2RpZmljYXRpb24gJHttb2RpZmljYXRpb24udHlwZX1gKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICB0aGlzLnZlcnNpb24gPSB0cmFuc2l0aW9uLmVuZFZlcnNpb247XG4gIH1cbiAgcmVtb3RlUXVlcnlSZXN1bHRzKCkge1xuICAgIHJldHVybiB0aGlzLnJlbW90ZVF1ZXJ5U2V0O1xuICB9XG4gIHRpbWVzdGFtcCgpIHtcbiAgICByZXR1cm4gdGhpcy52ZXJzaW9uLnRzO1xuICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZW1vdGVfcXVlcnlfc2V0LmpzLm1hcFxuIl0sIm5hbWVzIjpbImpzb25Ub0NvbnZleCIsIkxvbmciLCJsb2dUb0NvbnNvbGUiLCJSZW1vdGVRdWVyeVNldCIsImNvbnN0cnVjdG9yIiwicXVlcnlQYXRoIiwidmVyc2lvbiIsInF1ZXJ5U2V0IiwidHMiLCJmcm9tTnVtYmVyIiwiaWRlbnRpdHkiLCJyZW1vdGVRdWVyeVNldCIsIk1hcCIsInRyYW5zaXRpb24iLCJzdGFydCIsInN0YXJ0VmVyc2lvbiIsIm5vdEVxdWFscyIsIkVycm9yIiwidG9TdHJpbmciLCJtb2RpZmljYXRpb24iLCJtb2RpZmljYXRpb25zIiwidHlwZSIsInF1ZXJ5SWQiLCJsaW5lIiwibG9nTGluZXMiLCJ2YWx1ZSIsInNldCIsInN1Y2Nlc3MiLCJlcnJvckRhdGEiLCJlcnJvck1lc3NhZ2UiLCJkZWxldGUiLCJfIiwiZW5kVmVyc2lvbiIsInJlbW90ZVF1ZXJ5UmVzdWx0cyIsInRpbWVzdGFtcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/remote_query_set.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/request_manager.js":
/*!**********************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/request_manager.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestManager: () => (/* binding */ RequestManager)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _logging_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../logging.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/logging.js\");\n\n\n\nclass RequestManager {\n    constructor(){\n        this.inflightRequests = /* @__PURE__ */ new Map();\n        this.requestsOlderThanRestart = /* @__PURE__ */ new Set();\n    }\n    request(message, sent) {\n        const result = new Promise((resolve)=>{\n            const status = sent ? \"Requested\" : \"NotSent\";\n            this.inflightRequests.set(message.requestId, {\n                message,\n                status: {\n                    status,\n                    requestedAt: /* @__PURE__ */ new Date(),\n                    onResult: resolve\n                }\n            });\n        });\n        return result;\n    }\n    /**\n   * Update the state after receiving a response.\n   *\n   * @returns A RequestId if the request is complete and its optimistic update\n   * can be dropped, null otherwise.\n   */ onResponse(response) {\n        const requestInfo = this.inflightRequests.get(response.requestId);\n        if (requestInfo === void 0) {\n            return null;\n        }\n        if (requestInfo.status.status === \"Completed\") {\n            return null;\n        }\n        const udfType = requestInfo.message.type === \"Mutation\" ? \"mutation\" : \"action\";\n        const udfPath = requestInfo.message.udfPath;\n        for (const line of response.logLines){\n            (0,_logging_js__WEBPACK_IMPORTED_MODULE_1__.logToConsole)(\"info\", udfType, udfPath, line);\n        }\n        const status = requestInfo.status;\n        let onResolve;\n        if (response.success) {\n            onResolve = ()=>status.onResult({\n                    success: true,\n                    logLines: response.logLines,\n                    value: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(response.result, true)\n                });\n        } else {\n            const errorMessage = response.result;\n            const { errorData } = response;\n            (0,_logging_js__WEBPACK_IMPORTED_MODULE_1__.logToConsole)(\"error\", udfType, udfPath, errorMessage);\n            onResolve = ()=>status.onResult({\n                    success: false,\n                    errorMessage,\n                    errorData: errorData !== void 0 ? (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(errorData) : void 0,\n                    logLines: response.logLines\n                });\n        }\n        if (response.type === \"ActionResponse\" || !response.success) {\n            onResolve();\n            this.inflightRequests.delete(response.requestId);\n            this.requestsOlderThanRestart.delete(response.requestId);\n            return response.requestId;\n        }\n        requestInfo.status = {\n            status: \"Completed\",\n            ts: response.ts,\n            onResolve\n        };\n        return null;\n    }\n    // Remove and returns completed requests.\n    removeCompleted(ts) {\n        const completeRequests = /* @__PURE__ */ new Set();\n        for (const [requestId, requestInfo] of this.inflightRequests.entries()){\n            const status = requestInfo.status;\n            if (status.status === \"Completed\" && status.ts.lessThanOrEqual(ts)) {\n                status.onResolve();\n                completeRequests.add(requestId);\n                this.inflightRequests.delete(requestId);\n                this.requestsOlderThanRestart.delete(requestId);\n            }\n        }\n        return completeRequests;\n    }\n    restart() {\n        this.requestsOlderThanRestart = new Set(this.inflightRequests.keys());\n        const allMessages = [];\n        for (const [requestId, value] of this.inflightRequests){\n            if (value.status.status === \"NotSent\") {\n                value.status.status = \"Requested\";\n                allMessages.push(value.message);\n                continue;\n            }\n            if (value.message.type === \"Mutation\") {\n                allMessages.push(value.message);\n            } else {\n                this.inflightRequests.delete(requestId);\n                this.requestsOlderThanRestart.delete(requestId);\n                if (value.status.status === \"Completed\") {\n                    throw new Error(\"Action should never be in 'Completed' state\");\n                }\n                value.status.onResult({\n                    success: false,\n                    errorMessage: \"Connection lost while action was in flight\",\n                    logLines: []\n                });\n            }\n        }\n        return allMessages;\n    }\n    /**\n   * @returns true if there are any requests that have been requested but have\n   * not be completed yet.\n   */ hasIncompleteRequests() {\n        for (const requestInfo of this.inflightRequests.values()){\n            if (requestInfo.status.status === \"Requested\") {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n   * @returns true if there are any inflight requests, including ones that have\n   * completed on the server, but have not been applied.\n   */ hasInflightRequests() {\n        return this.inflightRequests.size > 0;\n    }\n    /**\n   * @returns true if there are any inflight requests, that have been hanging around\n   * since prior to the most recent restart.\n   */ hasSyncedPastLastReconnect() {\n        return this.requestsOlderThanRestart.size === 0;\n    }\n    timeOfOldestInflightRequest() {\n        if (this.inflightRequests.size === 0) {\n            return null;\n        }\n        let oldestInflightRequest = Date.now();\n        for (const request of this.inflightRequests.values()){\n            if (request.status.status !== \"Completed\") {\n                if (request.status.requestedAt.getTime() < oldestInflightRequest) {\n                    oldestInflightRequest = request.status.requestedAt.getTime();\n                }\n            }\n        }\n        return new Date(oldestInflightRequest);\n    }\n} //# sourceMappingURL=request_manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/request_manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/session.js":
/*!**************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/session.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   newSessionId: () => (/* binding */ newSessionId)\n/* harmony export */ });\n\nfunction newSessionId() {\n    return uuidv4();\n}\nfunction uuidv4() {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c)=>{\n        const r = Math.random() * 16 | 0, v = c === \"x\" ? r : r & 3 | 8;\n        return v.toString(16);\n    });\n} //# sourceMappingURL=session.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy9zZXNzaW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBYTtBQUNOLFNBQVNBO0lBQ2QsT0FBT0M7QUFDVDtBQUNBLFNBQVNBO0lBQ1AsT0FBTyx1Q0FBdUNDLE9BQU8sQ0FBQyxTQUFTLENBQUNDO1FBQzlELE1BQU1DLElBQUlDLEtBQUtDLE1BQU0sS0FBSyxLQUFLLEdBQUdDLElBQUlKLE1BQU0sTUFBTUMsSUFBSUEsSUFBSSxJQUFJO1FBQzlELE9BQU9HLEVBQUVDLFFBQVEsQ0FBQztJQUNwQjtBQUNGLEVBQ0EsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXJhc29yX2Nsb25lLy4vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9icm93c2VyL3N5bmMvc2Vzc2lvbi5qcz9lMTAyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuZXhwb3J0IGZ1bmN0aW9uIG5ld1Nlc3Npb25JZCgpIHtcbiAgcmV0dXJuIHV1aWR2NCgpO1xufVxuZnVuY3Rpb24gdXVpZHY0KCkge1xuICByZXR1cm4gXCJ4eHh4eHh4eC14eHh4LTR4eHgteXh4eC14eHh4eHh4eHh4eHhcIi5yZXBsYWNlKC9beHldL2csIChjKSA9PiB7XG4gICAgY29uc3QgciA9IE1hdGgucmFuZG9tKCkgKiAxNiB8IDAsIHYgPSBjID09PSBcInhcIiA/IHIgOiByICYgMyB8IDg7XG4gICAgcmV0dXJuIHYudG9TdHJpbmcoMTYpO1xuICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlc3Npb24uanMubWFwXG4iXSwibmFtZXMiOlsibmV3U2Vzc2lvbklkIiwidXVpZHY0IiwicmVwbGFjZSIsImMiLCJyIiwiTWF0aCIsInJhbmRvbSIsInYiLCJ0b1N0cmluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/session.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/udf_path_utils.js":
/*!*********************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/udf_path_utils.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   canonicalizeUdfPath: () => (/* binding */ canonicalizeUdfPath),\n/* harmony export */   serializePathAndArgs: () => (/* binding */ serializePathAndArgs)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n\n\nfunction canonicalizeUdfPath(udfPath) {\n    const pieces = udfPath.split(\":\");\n    let moduleName;\n    let functionName;\n    if (pieces.length === 1) {\n        moduleName = pieces[0];\n        functionName = \"default\";\n    } else {\n        moduleName = pieces.slice(0, pieces.length - 1).join(\":\");\n        functionName = pieces[pieces.length - 1];\n    }\n    if (moduleName.endsWith(\".js\")) {\n        moduleName = moduleName.slice(0, -3);\n    }\n    return `${moduleName}:${functionName}`;\n}\nfunction serializePathAndArgs(udfPath, args) {\n    return JSON.stringify({\n        udfPath: canonicalizeUdfPath(udfPath),\n        args: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(args)\n    });\n} //# sourceMappingURL=udf_path_utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy91ZGZfcGF0aF91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBYTtBQUN3QztBQUM5QyxTQUFTQyxvQkFBb0JDLE9BQU87SUFDekMsTUFBTUMsU0FBU0QsUUFBUUUsS0FBSyxDQUFDO0lBQzdCLElBQUlDO0lBQ0osSUFBSUM7SUFDSixJQUFJSCxPQUFPSSxNQUFNLEtBQUssR0FBRztRQUN2QkYsYUFBYUYsTUFBTSxDQUFDLEVBQUU7UUFDdEJHLGVBQWU7SUFDakIsT0FBTztRQUNMRCxhQUFhRixPQUFPSyxLQUFLLENBQUMsR0FBR0wsT0FBT0ksTUFBTSxHQUFHLEdBQUdFLElBQUksQ0FBQztRQUNyREgsZUFBZUgsTUFBTSxDQUFDQSxPQUFPSSxNQUFNLEdBQUcsRUFBRTtJQUMxQztJQUNBLElBQUlGLFdBQVdLLFFBQVEsQ0FBQyxRQUFRO1FBQzlCTCxhQUFhQSxXQUFXRyxLQUFLLENBQUMsR0FBRyxDQUFDO0lBQ3BDO0lBQ0EsT0FBTyxDQUFDLEVBQUVILFdBQVcsQ0FBQyxFQUFFQyxhQUFhLENBQUM7QUFDeEM7QUFDTyxTQUFTSyxxQkFBcUJULE9BQU8sRUFBRVUsSUFBSTtJQUNoRCxPQUFPQyxLQUFLQyxTQUFTLENBQUM7UUFDcEJaLFNBQVNELG9CQUFvQkM7UUFDN0JVLE1BQU1aLDhEQUFZQSxDQUFDWTtJQUNyQjtBQUNGLEVBQ0EsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXJhc29yX2Nsb25lLy4vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9icm93c2VyL3N5bmMvdWRmX3BhdGhfdXRpbHMuanM/MDVhMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmltcG9ydCB7IGNvbnZleFRvSnNvbiB9IGZyb20gXCIuLi8uLi92YWx1ZXMvaW5kZXguanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBjYW5vbmljYWxpemVVZGZQYXRoKHVkZlBhdGgpIHtcbiAgY29uc3QgcGllY2VzID0gdWRmUGF0aC5zcGxpdChcIjpcIik7XG4gIGxldCBtb2R1bGVOYW1lO1xuICBsZXQgZnVuY3Rpb25OYW1lO1xuICBpZiAocGllY2VzLmxlbmd0aCA9PT0gMSkge1xuICAgIG1vZHVsZU5hbWUgPSBwaWVjZXNbMF07XG4gICAgZnVuY3Rpb25OYW1lID0gXCJkZWZhdWx0XCI7XG4gIH0gZWxzZSB7XG4gICAgbW9kdWxlTmFtZSA9IHBpZWNlcy5zbGljZSgwLCBwaWVjZXMubGVuZ3RoIC0gMSkuam9pbihcIjpcIik7XG4gICAgZnVuY3Rpb25OYW1lID0gcGllY2VzW3BpZWNlcy5sZW5ndGggLSAxXTtcbiAgfVxuICBpZiAobW9kdWxlTmFtZS5lbmRzV2l0aChcIi5qc1wiKSkge1xuICAgIG1vZHVsZU5hbWUgPSBtb2R1bGVOYW1lLnNsaWNlKDAsIC0zKTtcbiAgfVxuICByZXR1cm4gYCR7bW9kdWxlTmFtZX06JHtmdW5jdGlvbk5hbWV9YDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBzZXJpYWxpemVQYXRoQW5kQXJncyh1ZGZQYXRoLCBhcmdzKSB7XG4gIHJldHVybiBKU09OLnN0cmluZ2lmeSh7XG4gICAgdWRmUGF0aDogY2Fub25pY2FsaXplVWRmUGF0aCh1ZGZQYXRoKSxcbiAgICBhcmdzOiBjb252ZXhUb0pzb24oYXJncylcbiAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11ZGZfcGF0aF91dGlscy5qcy5tYXBcbiJdLCJuYW1lcyI6WyJjb252ZXhUb0pzb24iLCJjYW5vbmljYWxpemVVZGZQYXRoIiwidWRmUGF0aCIsInBpZWNlcyIsInNwbGl0IiwibW9kdWxlTmFtZSIsImZ1bmN0aW9uTmFtZSIsImxlbmd0aCIsInNsaWNlIiwiam9pbiIsImVuZHNXaXRoIiwic2VyaWFsaXplUGF0aEFuZEFyZ3MiLCJhcmdzIiwiSlNPTiIsInN0cmluZ2lmeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/udf_path_utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/web_socket_manager.js":
/*!*************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/web_socket_manager.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebSocketManager: () => (/* binding */ WebSocketManager)\n/* harmony export */ });\n/* harmony import */ var _protocol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./protocol.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/protocol.js\");\n\n\nconst CLOSE_NORMAL = 1e3;\nconst CLOSE_GOING_AWAY = 1001;\nconst CLOSE_NO_STATUS = 1005;\nconst CLOSE_NOT_FOUND = 4040;\nclass WebSocketManager {\n    constructor(uri, onOpen, onMessage, webSocketConstructor, verbose){\n        this.webSocketConstructor = webSocketConstructor;\n        this.socket = {\n            state: \"disconnected\"\n        };\n        this.connectionCount = 0;\n        this.lastCloseReason = \"InitialConnect\";\n        this.initialBackoff = 100;\n        this.maxBackoff = 16e3;\n        this.retries = 0;\n        this.serverInactivityThreshold = 3e4;\n        this.reconnectDueToServerInactivityTimeout = null;\n        this.uri = uri;\n        this.onOpen = onOpen;\n        this.onMessage = onMessage;\n        this.verbose = verbose;\n        void this.connect();\n    }\n    connect() {\n        if (this.socket.state === \"stopped\") {\n            return;\n        }\n        if (this.socket.state !== \"disconnected\" && this.socket.state !== \"paused\") {\n            throw new Error(\"Didn't start connection from disconnected state: \" + this.socket.state);\n        }\n        const ws = new this.webSocketConstructor(this.uri);\n        this._logVerbose(\"constructed WebSocket\");\n        this.socket = {\n            state: \"connecting\",\n            ws\n        };\n        this.resetServerInactivityTimeout();\n        ws.onopen = ()=>{\n            this._logVerbose(\"begin ws.onopen\");\n            if (this.socket.state !== \"connecting\") {\n                throw new Error(\"onopen called with socket not in connecting state\");\n            }\n            this.socket = {\n                state: \"ready\",\n                ws\n            };\n            this.resetServerInactivityTimeout();\n            this.onOpen({\n                connectionCount: this.connectionCount,\n                lastCloseReason: this.lastCloseReason\n            });\n            if (this.lastCloseReason !== \"InitialConnect\") {\n                console.log(\"WebSocket reconnected\");\n            }\n            this.connectionCount += 1;\n            this.lastCloseReason = null;\n        };\n        ws.onerror = (error)=>{\n            const message = error.message;\n            console.log(`WebSocket error: ${message}`);\n        };\n        ws.onmessage = (message)=>{\n            this.resetServerInactivityTimeout();\n            const serverMessage = (0,_protocol_js__WEBPACK_IMPORTED_MODULE_0__.parseServerMessage)(JSON.parse(message.data));\n            this._logVerbose(`received ws message with type ${serverMessage.type}`);\n            const response = this.onMessage(serverMessage);\n            if (response.hasSyncedPastLastReconnect) {\n                this.retries = 0;\n            }\n        };\n        ws.onclose = (event)=>{\n            this._logVerbose(\"begin ws.onclose\");\n            if (this.lastCloseReason === null) {\n                this.lastCloseReason = event.reason ?? \"OnCloseInvoked\";\n            }\n            if (event.code !== CLOSE_NORMAL && event.code !== CLOSE_GOING_AWAY && // This commonly gets fired on mobile apps when the app is backgrounded\n            event.code !== CLOSE_NO_STATUS && event.code !== CLOSE_NOT_FOUND) {\n                let msg = `WebSocket closed with code ${event.code}`;\n                if (event.reason) {\n                    msg += `: ${event.reason}`;\n                }\n                console.log(msg);\n            }\n            this.scheduleReconnect();\n            return;\n        };\n    }\n    /**\n   * @returns The state of the {@link Socket}.\n   */ socketState() {\n        return this.socket.state;\n    }\n    /**\n   * @param message - A ClientMessage to send.\n   * @returns Whether the message (might have been) sent.\n   */ sendMessage(message) {\n        this._logVerbose(`sending message with type ${message.type}`);\n        if (this.socket.state === \"ready\") {\n            const encodedMessage = (0,_protocol_js__WEBPACK_IMPORTED_MODULE_0__.encodeClientMessage)(message);\n            const request = JSON.stringify(encodedMessage);\n            try {\n                this.socket.ws.send(request);\n            } catch (error) {\n                console.log(`Failed to send message on WebSocket, reconnecting: ${error}`);\n                this.closeAndReconnect(\"FailedToSendMessage\");\n            }\n            return true;\n        }\n        return false;\n    }\n    resetServerInactivityTimeout() {\n        if (this.socket.state !== \"stopped\") {\n            return;\n        }\n        if (this.reconnectDueToServerInactivityTimeout !== null) {\n            clearTimeout(this.reconnectDueToServerInactivityTimeout);\n            this.reconnectDueToServerInactivityTimeout = null;\n        }\n        this.reconnectDueToServerInactivityTimeout = setTimeout(()=>{\n            this.closeAndReconnect(\"InactiveServer\");\n        }, this.serverInactivityThreshold);\n    }\n    scheduleReconnect() {\n        this.socket = {\n            state: \"disconnected\"\n        };\n        const backoff = this.nextBackoff();\n        console.log(`Attempting reconnect in ${backoff}ms`);\n        setTimeout(()=>this.connect(), backoff);\n    }\n    /**\n   * Close the WebSocket and schedule a reconnect.\n   *\n   * This should be used when we hit an error and would like to restart the session.\n   */ closeAndReconnect(closeReason) {\n        this._logVerbose(`begin closeAndReconnect with reason ${closeReason}`);\n        switch(this.socket.state){\n            case \"disconnected\":\n            case \"stopped\":\n            case \"paused\":\n                return;\n            case \"connecting\":\n            case \"ready\":\n                {\n                    this.lastCloseReason = closeReason;\n                    this.close();\n                    this.scheduleReconnect();\n                    return;\n                }\n            default:\n                {\n                    const _ = this.socket;\n                }\n        }\n    }\n    /**\n   * Close the WebSocket, being careful to clear the onclose handler to avoid re-entrant\n   * calls. Use this instead of directly calling `ws.close()`\n   */ close() {\n        switch(this.socket.state){\n            case \"disconnected\":\n            case \"stopped\":\n            case \"paused\":\n                return;\n            case \"connecting\":\n            case \"ready\":\n                {\n                    this.socket.ws.onclose = ()=>{};\n                    this._logVerbose(\"ws.close called\");\n                    this.socket.ws.close();\n                    return;\n                }\n            default:\n                {\n                    const _ = this.socket;\n                }\n        }\n    }\n    /**\n   * Close the WebSocket and do not reconnect.\n   * @returns A Promise that resolves when the WebSocket `onClose` callback is called.\n   */ stop() {\n        if (this.reconnectDueToServerInactivityTimeout) {\n            clearTimeout(this.reconnectDueToServerInactivityTimeout);\n        }\n        switch(this.socket.state){\n            case \"stopped\":\n            case \"paused\":\n            case \"disconnected\":\n            case \"connecting\":\n            case \"ready\":\n                this.close();\n                if (this.socket.state === \"ready\" || this.socket.state === \"connecting\") {\n                    const ws = this.socket.ws;\n                    this.socket = {\n                        state: \"stopped\"\n                    };\n                    return new Promise((r)=>{\n                        ws.onclose = (_event)=>r();\n                    });\n                }\n                this.socket = {\n                    state: \"stopped\"\n                };\n                return Promise.resolve();\n            default:\n                {\n                    const _ = this.socket;\n                    throw new Error(`Invalid websocket state: ${this.socket.state}`);\n                }\n        }\n    }\n    pause() {\n        switch(this.socket.state){\n            case \"stopped\":\n                return;\n            case \"paused\":\n            case \"disconnected\":\n            case \"connecting\":\n            case \"ready\":\n                this.close();\n                this.socket = {\n                    state: \"paused\"\n                };\n                return;\n            default:\n                {\n                    const _ = this.socket;\n                }\n        }\n    }\n    /**\n   * Create a new WebSocket after a previous `pause()`, unless `stop()` was\n   * called before.\n   */ resume() {\n        switch(this.socket.state){\n            case \"paused\":\n                break;\n            case \"stopped\":\n                return;\n            case \"connecting\":\n            case \"ready\":\n            case \"disconnected\":\n                throw new Error(\"`resume()` is only valid after `pause()`\");\n            default:\n                {\n                    const _ = this.socket;\n                }\n        }\n        this.connect();\n    }\n    _logVerbose(message) {\n        if (this.verbose) {\n            console.debug(`${/* @__PURE__ */ new Date().toISOString()} ${message}`);\n        }\n    }\n    nextBackoff() {\n        const baseBackoff = this.initialBackoff * Math.pow(2, this.retries);\n        this.retries += 1;\n        const actualBackoff = Math.min(baseBackoff, this.maxBackoff);\n        const jitter = actualBackoff * (Math.random() - 0.5);\n        return actualBackoff + jitter;\n    }\n} //# sourceMappingURL=web_socket_manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/web_socket_manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/common/index.js":
/*!******************************************************!*\
  !*** ./node_modules/convex/dist/esm/common/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isSimpleObject: () => (/* binding */ isSimpleObject),\n/* harmony export */   parseArgs: () => (/* binding */ parseArgs),\n/* harmony export */   validateDeploymentUrl: () => (/* binding */ validateDeploymentUrl)\n/* harmony export */ });\n\nfunction parseArgs(args) {\n    if (args === void 0) {\n        return {};\n    }\n    if (!isSimpleObject(args)) {\n        throw new Error(`The arguments to a Convex function must be an object. Received: ${args}`);\n    }\n    return args;\n}\nfunction validateDeploymentUrl(deploymentUrl) {\n    if (typeof deploymentUrl === \"undefined\") {\n        throw new Error(`Client created with undefined deployment address. If you used an environment variable, check that it's set.`);\n    }\n    if (typeof deploymentUrl !== \"string\") {\n        throw new Error(`Invalid deployment address: found ${deploymentUrl}\".`);\n    }\n    if (!(deploymentUrl.startsWith(\"http:\") || deploymentUrl.startsWith(\"https:\"))) {\n        throw new Error(`Invalid deployment address: Must start with \"https://\" or \"http://\". Found \"${deploymentUrl}\".`);\n    }\n    if (deploymentUrl.indexOf(\"127.0.0.1\") !== -1 || deploymentUrl.indexOf(\"localhost\") !== -1) {\n        return;\n    }\n    if (!deploymentUrl.endsWith(\".convex.cloud\")) {\n        throw new Error(`Invalid deployment address: Must end with \".convex.cloud\". Found \"${deploymentUrl}\".`);\n    }\n}\nfunction isSimpleObject(value) {\n    const isObject = typeof value === \"object\";\n    const prototype = Object.getPrototypeOf(value);\n    const isSimple = prototype === null || prototype === Object.prototype || // Objects generated from other contexts (e.g. across Node.js `vm` modules) will not satisfy the previous\n    // conditions but are still simple objects.\n    prototype?.constructor?.name === \"Object\";\n    return isObject && isSimple;\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2NvbW1vbi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBYTtBQUNOLFNBQVNBLFVBQVVDLElBQUk7SUFDNUIsSUFBSUEsU0FBUyxLQUFLLEdBQUc7UUFDbkIsT0FBTyxDQUFDO0lBQ1Y7SUFDQSxJQUFJLENBQUNDLGVBQWVELE9BQU87UUFDekIsTUFBTSxJQUFJRSxNQUNSLENBQUMsZ0VBQWdFLEVBQUVGLEtBQUssQ0FBQztJQUU3RTtJQUNBLE9BQU9BO0FBQ1Q7QUFDTyxTQUFTRyxzQkFBc0JDLGFBQWE7SUFDakQsSUFBSSxPQUFPQSxrQkFBa0IsYUFBYTtRQUN4QyxNQUFNLElBQUlGLE1BQ1IsQ0FBQywyR0FBMkcsQ0FBQztJQUVqSDtJQUNBLElBQUksT0FBT0Usa0JBQWtCLFVBQVU7UUFDckMsTUFBTSxJQUFJRixNQUNSLENBQUMsa0NBQWtDLEVBQUVFLGNBQWMsRUFBRSxDQUFDO0lBRTFEO0lBQ0EsSUFBSSxDQUFFQSxDQUFBQSxjQUFjQyxVQUFVLENBQUMsWUFBWUQsY0FBY0MsVUFBVSxDQUFDLFNBQVEsR0FBSTtRQUM5RSxNQUFNLElBQUlILE1BQ1IsQ0FBQyw0RUFBNEUsRUFBRUUsY0FBYyxFQUFFLENBQUM7SUFFcEc7SUFDQSxJQUFJQSxjQUFjRSxPQUFPLENBQUMsaUJBQWlCLENBQUMsS0FBS0YsY0FBY0UsT0FBTyxDQUFDLGlCQUFpQixDQUFDLEdBQUc7UUFDMUY7SUFDRjtJQUNBLElBQUksQ0FBQ0YsY0FBY0csUUFBUSxDQUFDLGtCQUFrQjtRQUM1QyxNQUFNLElBQUlMLE1BQ1IsQ0FBQyxrRUFBa0UsRUFBRUUsY0FBYyxFQUFFLENBQUM7SUFFMUY7QUFDRjtBQUNPLFNBQVNILGVBQWVPLEtBQUs7SUFDbEMsTUFBTUMsV0FBVyxPQUFPRCxVQUFVO0lBQ2xDLE1BQU1FLFlBQVlDLE9BQU9DLGNBQWMsQ0FBQ0o7SUFDeEMsTUFBTUssV0FBV0gsY0FBYyxRQUFRQSxjQUFjQyxPQUFPRCxTQUFTLElBQUkseUdBQXlHO0lBQ2xMLDJDQUEyQztJQUMzQ0EsV0FBV0ksYUFBYUMsU0FBUztJQUNqQyxPQUFPTixZQUFZSTtBQUNyQixFQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2VyYXNvcl9jbG9uZS8uL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vY29tbW9uL2luZGV4LmpzP2IzMWQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VBcmdzKGFyZ3MpIHtcbiAgaWYgKGFyZ3MgPT09IHZvaWQgMCkge1xuICAgIHJldHVybiB7fTtcbiAgfVxuICBpZiAoIWlzU2ltcGxlT2JqZWN0KGFyZ3MpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgYFRoZSBhcmd1bWVudHMgdG8gYSBDb252ZXggZnVuY3Rpb24gbXVzdCBiZSBhbiBvYmplY3QuIFJlY2VpdmVkOiAke2FyZ3N9YFxuICAgICk7XG4gIH1cbiAgcmV0dXJuIGFyZ3M7XG59XG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVEZXBsb3ltZW50VXJsKGRlcGxveW1lbnRVcmwpIHtcbiAgaWYgKHR5cGVvZiBkZXBsb3ltZW50VXJsID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgYENsaWVudCBjcmVhdGVkIHdpdGggdW5kZWZpbmVkIGRlcGxveW1lbnQgYWRkcmVzcy4gSWYgeW91IHVzZWQgYW4gZW52aXJvbm1lbnQgdmFyaWFibGUsIGNoZWNrIHRoYXQgaXQncyBzZXQuYFxuICAgICk7XG4gIH1cbiAgaWYgKHR5cGVvZiBkZXBsb3ltZW50VXJsICE9PSBcInN0cmluZ1wiKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgYEludmFsaWQgZGVwbG95bWVudCBhZGRyZXNzOiBmb3VuZCAke2RlcGxveW1lbnRVcmx9XCIuYFxuICAgICk7XG4gIH1cbiAgaWYgKCEoZGVwbG95bWVudFVybC5zdGFydHNXaXRoKFwiaHR0cDpcIikgfHwgZGVwbG95bWVudFVybC5zdGFydHNXaXRoKFwiaHR0cHM6XCIpKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGBJbnZhbGlkIGRlcGxveW1lbnQgYWRkcmVzczogTXVzdCBzdGFydCB3aXRoIFwiaHR0cHM6Ly9cIiBvciBcImh0dHA6Ly9cIi4gRm91bmQgXCIke2RlcGxveW1lbnRVcmx9XCIuYFxuICAgICk7XG4gIH1cbiAgaWYgKGRlcGxveW1lbnRVcmwuaW5kZXhPZihcIjEyNy4wLjAuMVwiKSAhPT0gLTEgfHwgZGVwbG95bWVudFVybC5pbmRleE9mKFwibG9jYWxob3N0XCIpICE9PSAtMSkge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAoIWRlcGxveW1lbnRVcmwuZW5kc1dpdGgoXCIuY29udmV4LmNsb3VkXCIpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgYEludmFsaWQgZGVwbG95bWVudCBhZGRyZXNzOiBNdXN0IGVuZCB3aXRoIFwiLmNvbnZleC5jbG91ZFwiLiBGb3VuZCBcIiR7ZGVwbG95bWVudFVybH1cIi5gXG4gICAgKTtcbiAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGlzU2ltcGxlT2JqZWN0KHZhbHVlKSB7XG4gIGNvbnN0IGlzT2JqZWN0ID0gdHlwZW9mIHZhbHVlID09PSBcIm9iamVjdFwiO1xuICBjb25zdCBwcm90b3R5cGUgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YodmFsdWUpO1xuICBjb25zdCBpc1NpbXBsZSA9IHByb3RvdHlwZSA9PT0gbnVsbCB8fCBwcm90b3R5cGUgPT09IE9iamVjdC5wcm90b3R5cGUgfHwgLy8gT2JqZWN0cyBnZW5lcmF0ZWQgZnJvbSBvdGhlciBjb250ZXh0cyAoZS5nLiBhY3Jvc3MgTm9kZS5qcyBgdm1gIG1vZHVsZXMpIHdpbGwgbm90IHNhdGlzZnkgdGhlIHByZXZpb3VzXG4gIC8vIGNvbmRpdGlvbnMgYnV0IGFyZSBzdGlsbCBzaW1wbGUgb2JqZWN0cy5cbiAgcHJvdG90eXBlPy5jb25zdHJ1Y3Rvcj8ubmFtZSA9PT0gXCJPYmplY3RcIjtcbiAgcmV0dXJuIGlzT2JqZWN0ICYmIGlzU2ltcGxlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOlsicGFyc2VBcmdzIiwiYXJncyIsImlzU2ltcGxlT2JqZWN0IiwiRXJyb3IiLCJ2YWxpZGF0ZURlcGxveW1lbnRVcmwiLCJkZXBsb3ltZW50VXJsIiwic3RhcnRzV2l0aCIsImluZGV4T2YiLCJlbmRzV2l0aCIsInZhbHVlIiwiaXNPYmplY3QiLCJwcm90b3R5cGUiLCJPYmplY3QiLCJnZXRQcm90b3R5cGVPZiIsImlzU2ltcGxlIiwiY29uc3RydWN0b3IiLCJuYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/common/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/index.js":
/*!***********************************************!*\
  !*** ./node_modules/convex/dist/esm/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\n\nconst version = \"1.9.1\"; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBYTtBQUNOLE1BQU1BLFVBQVUsUUFBUSxDQUMvQixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9lcmFzb3JfY2xvbmUvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2luZGV4LmpzP2RhODQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnQgY29uc3QgdmVyc2lvbiA9IFwiMS45LjFcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcFxuIl0sIm5hbWVzIjpbInZlcnNpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/ConvexAuthState.js":
/*!***************************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/ConvexAuthState.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConvexProviderWithAuth: () => (/* binding */ ConvexProviderWithAuth),\n/* harmony export */   useConvexAuth: () => (/* binding */ useConvexAuth)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _client_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./client.js */ \"(ssr)/./node_modules/convex/dist/esm/react/client.js\");\n\n\n\nconst ConvexAuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(void 0);\nfunction useConvexAuth() {\n    const authContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ConvexAuthContext);\n    if (authContext === void 0) {\n        throw new Error(\"Could not find `ConvexProviderWithAuth` (or `ConvexProviderWithClerk` or `ConvexProviderWithAuth0`) as an ancestor component. This component may be missing, or you might have two instances of the `convex/react` module loaded in your project.\");\n    }\n    return authContext;\n}\nfunction ConvexProviderWithAuth({ children, client, useAuth }) {\n    const { isLoading, isAuthenticated, fetchAccessToken } = useAuth();\n    const [isConvexAuthenticated, setIsConvexAuthenticated] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        let isThisEffectRelevant = true;\n        async function setToken() {\n            client.setAuth(fetchAccessToken, (isAuthenticated2)=>{\n                if (isThisEffectRelevant) {\n                    setIsConvexAuthenticated(isAuthenticated2);\n                }\n            });\n        }\n        if (isAuthenticated) {\n            void setToken();\n            return ()=>{\n                isThisEffectRelevant = false;\n                setIsConvexAuthenticated((isConvexAuthenticated2)=>isConvexAuthenticated2 ? false : null);\n                client.clearAuth();\n            };\n        }\n    }, [\n        isAuthenticated,\n        fetchAccessToken,\n        isLoading,\n        client\n    ]);\n    if (isLoading && isConvexAuthenticated !== null) {\n        setIsConvexAuthenticated(null);\n    }\n    if (!isLoading && !isAuthenticated && isConvexAuthenticated !== false) {\n        setIsConvexAuthenticated(false);\n    }\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ConvexAuthContext.Provider, {\n        value: {\n            isLoading: isConvexAuthenticated === null,\n            isAuthenticated: isAuthenticated && (isConvexAuthenticated ?? false)\n        }\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_client_js__WEBPACK_IMPORTED_MODULE_1__.ConvexProvider, {\n        client\n    }, children));\n} //# sourceMappingURL=ConvexAuthState.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L0NvbnZleEF1dGhTdGF0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWE7QUFNRTtBQUM4QjtBQUM3QyxNQUFNTSxrQ0FBb0JMLG9EQUFhQSxDQUFDLEtBQUs7QUFDdEMsU0FBU007SUFDZCxNQUFNQyxjQUFjTixpREFBVUEsQ0FBQ0k7SUFDL0IsSUFBSUUsZ0JBQWdCLEtBQUssR0FBRztRQUMxQixNQUFNLElBQUlDLE1BQ1I7SUFFSjtJQUNBLE9BQU9EO0FBQ1Q7QUFDTyxTQUFTRSx1QkFBdUIsRUFDckNDLFFBQVEsRUFDUkMsTUFBTSxFQUNOQyxPQUFPLEVBQ1I7SUFDQyxNQUFNLEVBQUVDLFNBQVMsRUFBRUMsZUFBZSxFQUFFQyxnQkFBZ0IsRUFBRSxHQUFHSDtJQUN6RCxNQUFNLENBQUNJLHVCQUF1QkMseUJBQXlCLEdBQUdkLCtDQUFRQSxDQUFDO0lBQ25FRCxnREFBU0EsQ0FBQztRQUNSLElBQUlnQix1QkFBdUI7UUFDM0IsZUFBZUM7WUFDYlIsT0FBT1MsT0FBTyxDQUFDTCxrQkFBa0IsQ0FBQ007Z0JBQ2hDLElBQUlILHNCQUFzQjtvQkFDeEJELHlCQUF5Qkk7Z0JBQzNCO1lBQ0Y7UUFDRjtRQUNBLElBQUlQLGlCQUFpQjtZQUNuQixLQUFLSztZQUNMLE9BQU87Z0JBQ0xELHVCQUF1QjtnQkFDdkJELHlCQUNFLENBQUNLLHlCQUEyQkEseUJBQXlCLFFBQVE7Z0JBRS9EWCxPQUFPWSxTQUFTO1lBQ2xCO1FBQ0Y7SUFDRixHQUFHO1FBQUNUO1FBQWlCQztRQUFrQkY7UUFBV0Y7S0FBTztJQUN6RCxJQUFJRSxhQUFhRywwQkFBMEIsTUFBTTtRQUMvQ0MseUJBQXlCO0lBQzNCO0lBQ0EsSUFBSSxDQUFDSixhQUFhLENBQUNDLG1CQUFtQkUsMEJBQTBCLE9BQU87UUFDckVDLHlCQUF5QjtJQUMzQjtJQUNBLE9BQU8sYUFBYSxpQkFBR2xCLGdEQUFtQixDQUN4Q00sa0JBQWtCb0IsUUFBUSxFQUMxQjtRQUNFQyxPQUFPO1lBQ0xiLFdBQVdHLDBCQUEwQjtZQUNyQ0YsaUJBQWlCQSxtQkFBb0JFLENBQUFBLHlCQUF5QixLQUFJO1FBQ3BFO0lBQ0YsR0FDQSxhQUFhLGlCQUFHakIsZ0RBQW1CLENBQUNLLHNEQUFjQSxFQUFFO1FBQUVPO0lBQU8sR0FBR0Q7QUFFcEUsRUFDQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9lcmFzb3JfY2xvbmUvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L0NvbnZleEF1dGhTdGF0ZS5qcz9jYWE0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuaW1wb3J0IFJlYWN0LCB7XG4gIGNyZWF0ZUNvbnRleHQsXG4gIHVzZUNvbnRleHQsXG4gIHVzZUVmZmVjdCxcbiAgdXNlU3RhdGVcbn0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBDb252ZXhQcm92aWRlciB9IGZyb20gXCIuL2NsaWVudC5qc1wiO1xuY29uc3QgQ29udmV4QXV0aENvbnRleHQgPSBjcmVhdGVDb250ZXh0KHZvaWQgMCk7XG5leHBvcnQgZnVuY3Rpb24gdXNlQ29udmV4QXV0aCgpIHtcbiAgY29uc3QgYXV0aENvbnRleHQgPSB1c2VDb250ZXh0KENvbnZleEF1dGhDb250ZXh0KTtcbiAgaWYgKGF1dGhDb250ZXh0ID09PSB2b2lkIDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBcIkNvdWxkIG5vdCBmaW5kIGBDb252ZXhQcm92aWRlcldpdGhBdXRoYCAob3IgYENvbnZleFByb3ZpZGVyV2l0aENsZXJrYCBvciBgQ29udmV4UHJvdmlkZXJXaXRoQXV0aDBgKSBhcyBhbiBhbmNlc3RvciBjb21wb25lbnQuIFRoaXMgY29tcG9uZW50IG1heSBiZSBtaXNzaW5nLCBvciB5b3UgbWlnaHQgaGF2ZSB0d28gaW5zdGFuY2VzIG9mIHRoZSBgY29udmV4L3JlYWN0YCBtb2R1bGUgbG9hZGVkIGluIHlvdXIgcHJvamVjdC5cIlxuICAgICk7XG4gIH1cbiAgcmV0dXJuIGF1dGhDb250ZXh0O1xufVxuZXhwb3J0IGZ1bmN0aW9uIENvbnZleFByb3ZpZGVyV2l0aEF1dGgoe1xuICBjaGlsZHJlbixcbiAgY2xpZW50LFxuICB1c2VBdXRoXG59KSB7XG4gIGNvbnN0IHsgaXNMb2FkaW5nLCBpc0F1dGhlbnRpY2F0ZWQsIGZldGNoQWNjZXNzVG9rZW4gfSA9IHVzZUF1dGgoKTtcbiAgY29uc3QgW2lzQ29udmV4QXV0aGVudGljYXRlZCwgc2V0SXNDb252ZXhBdXRoZW50aWNhdGVkXSA9IHVzZVN0YXRlKG51bGwpO1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGxldCBpc1RoaXNFZmZlY3RSZWxldmFudCA9IHRydWU7XG4gICAgYXN5bmMgZnVuY3Rpb24gc2V0VG9rZW4oKSB7XG4gICAgICBjbGllbnQuc2V0QXV0aChmZXRjaEFjY2Vzc1Rva2VuLCAoaXNBdXRoZW50aWNhdGVkMikgPT4ge1xuICAgICAgICBpZiAoaXNUaGlzRWZmZWN0UmVsZXZhbnQpIHtcbiAgICAgICAgICBzZXRJc0NvbnZleEF1dGhlbnRpY2F0ZWQoaXNBdXRoZW50aWNhdGVkMik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgICBpZiAoaXNBdXRoZW50aWNhdGVkKSB7XG4gICAgICB2b2lkIHNldFRva2VuKCk7XG4gICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICBpc1RoaXNFZmZlY3RSZWxldmFudCA9IGZhbHNlO1xuICAgICAgICBzZXRJc0NvbnZleEF1dGhlbnRpY2F0ZWQoXG4gICAgICAgICAgKGlzQ29udmV4QXV0aGVudGljYXRlZDIpID0+IGlzQ29udmV4QXV0aGVudGljYXRlZDIgPyBmYWxzZSA6IG51bGxcbiAgICAgICAgKTtcbiAgICAgICAgY2xpZW50LmNsZWFyQXV0aCgpO1xuICAgICAgfTtcbiAgICB9XG4gIH0sIFtpc0F1dGhlbnRpY2F0ZWQsIGZldGNoQWNjZXNzVG9rZW4sIGlzTG9hZGluZywgY2xpZW50XSk7XG4gIGlmIChpc0xvYWRpbmcgJiYgaXNDb252ZXhBdXRoZW50aWNhdGVkICE9PSBudWxsKSB7XG4gICAgc2V0SXNDb252ZXhBdXRoZW50aWNhdGVkKG51bGwpO1xuICB9XG4gIGlmICghaXNMb2FkaW5nICYmICFpc0F1dGhlbnRpY2F0ZWQgJiYgaXNDb252ZXhBdXRoZW50aWNhdGVkICE9PSBmYWxzZSkge1xuICAgIHNldElzQ29udmV4QXV0aGVudGljYXRlZChmYWxzZSk7XG4gIH1cbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgIENvbnZleEF1dGhDb250ZXh0LlByb3ZpZGVyLFxuICAgIHtcbiAgICAgIHZhbHVlOiB7XG4gICAgICAgIGlzTG9hZGluZzogaXNDb252ZXhBdXRoZW50aWNhdGVkID09PSBudWxsLFxuICAgICAgICBpc0F1dGhlbnRpY2F0ZWQ6IGlzQXV0aGVudGljYXRlZCAmJiAoaXNDb252ZXhBdXRoZW50aWNhdGVkID8/IGZhbHNlKVxuICAgICAgfVxuICAgIH0sXG4gICAgLyogQF9fUFVSRV9fICovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29udmV4UHJvdmlkZXIsIHsgY2xpZW50IH0sIGNoaWxkcmVuKVxuICApO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q29udmV4QXV0aFN0YXRlLmpzLm1hcFxuIl0sIm5hbWVzIjpbIlJlYWN0IiwiY3JlYXRlQ29udGV4dCIsInVzZUNvbnRleHQiLCJ1c2VFZmZlY3QiLCJ1c2VTdGF0ZSIsIkNvbnZleFByb3ZpZGVyIiwiQ29udmV4QXV0aENvbnRleHQiLCJ1c2VDb252ZXhBdXRoIiwiYXV0aENvbnRleHQiLCJFcnJvciIsIkNvbnZleFByb3ZpZGVyV2l0aEF1dGgiLCJjaGlsZHJlbiIsImNsaWVudCIsInVzZUF1dGgiLCJpc0xvYWRpbmciLCJpc0F1dGhlbnRpY2F0ZWQiLCJmZXRjaEFjY2Vzc1Rva2VuIiwiaXNDb252ZXhBdXRoZW50aWNhdGVkIiwic2V0SXNDb252ZXhBdXRoZW50aWNhdGVkIiwiaXNUaGlzRWZmZWN0UmVsZXZhbnQiLCJzZXRUb2tlbiIsInNldEF1dGgiLCJpc0F1dGhlbnRpY2F0ZWQyIiwiaXNDb252ZXhBdXRoZW50aWNhdGVkMiIsImNsZWFyQXV0aCIsImNyZWF0ZUVsZW1lbnQiLCJQcm92aWRlciIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/ConvexAuthState.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/auth_helpers.js":
/*!************************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/auth_helpers.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthLoading: () => (/* binding */ AuthLoading),\n/* harmony export */   Authenticated: () => (/* binding */ Authenticated),\n/* harmony export */   Unauthenticated: () => (/* binding */ Unauthenticated)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _ConvexAuthState_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ConvexAuthState.js */ \"(ssr)/./node_modules/convex/dist/esm/react/ConvexAuthState.js\");\n\n\n\nfunction Authenticated({ children }) {\n    const { isLoading, isAuthenticated } = (0,_ConvexAuthState_js__WEBPACK_IMPORTED_MODULE_1__.useConvexAuth)();\n    if (isLoading || !isAuthenticated) {\n        return null;\n    }\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, children);\n}\nfunction Unauthenticated({ children }) {\n    const { isLoading, isAuthenticated } = (0,_ConvexAuthState_js__WEBPACK_IMPORTED_MODULE_1__.useConvexAuth)();\n    if (isLoading || isAuthenticated) {\n        return null;\n    }\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, children);\n}\nfunction AuthLoading({ children }) {\n    const { isLoading } = (0,_ConvexAuthState_js__WEBPACK_IMPORTED_MODULE_1__.useConvexAuth)();\n    if (!isLoading) {\n        return null;\n    }\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, children);\n} //# sourceMappingURL=auth_helpers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L2F1dGhfaGVscGVycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFhO0FBQ2E7QUFDMkI7QUFDOUMsU0FBU0UsY0FBYyxFQUFFQyxRQUFRLEVBQUU7SUFDeEMsTUFBTSxFQUFFQyxTQUFTLEVBQUVDLGVBQWUsRUFBRSxHQUFHSixrRUFBYUE7SUFDcEQsSUFBSUcsYUFBYSxDQUFDQyxpQkFBaUI7UUFDakMsT0FBTztJQUNUO0lBQ0EsT0FBTyxhQUFhLGlCQUFHTCxnREFBbUIsQ0FBQ0EsMkNBQWMsRUFBRSxNQUFNRztBQUNuRTtBQUNPLFNBQVNLLGdCQUFnQixFQUFFTCxRQUFRLEVBQUU7SUFDMUMsTUFBTSxFQUFFQyxTQUFTLEVBQUVDLGVBQWUsRUFBRSxHQUFHSixrRUFBYUE7SUFDcEQsSUFBSUcsYUFBYUMsaUJBQWlCO1FBQ2hDLE9BQU87SUFDVDtJQUNBLE9BQU8sYUFBYSxpQkFBR0wsZ0RBQW1CLENBQUNBLDJDQUFjLEVBQUUsTUFBTUc7QUFDbkU7QUFDTyxTQUFTTSxZQUFZLEVBQUVOLFFBQVEsRUFBRTtJQUN0QyxNQUFNLEVBQUVDLFNBQVMsRUFBRSxHQUFHSCxrRUFBYUE7SUFDbkMsSUFBSSxDQUFDRyxXQUFXO1FBQ2QsT0FBTztJQUNUO0lBQ0EsT0FBTyxhQUFhLGlCQUFHSixnREFBbUIsQ0FBQ0EsMkNBQWMsRUFBRSxNQUFNRztBQUNuRSxFQUNBLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL2VyYXNvcl9jbG9uZS8uL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vcmVhY3QvYXV0aF9oZWxwZXJzLmpzP2EyZGQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VDb252ZXhBdXRoIH0gZnJvbSBcIi4vQ29udmV4QXV0aFN0YXRlLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gQXV0aGVudGljYXRlZCh7IGNoaWxkcmVuIH0pIHtcbiAgY29uc3QgeyBpc0xvYWRpbmcsIGlzQXV0aGVudGljYXRlZCB9ID0gdXNlQ29udmV4QXV0aCgpO1xuICBpZiAoaXNMb2FkaW5nIHx8ICFpc0F1dGhlbnRpY2F0ZWQpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIG51bGwsIGNoaWxkcmVuKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBVbmF1dGhlbnRpY2F0ZWQoeyBjaGlsZHJlbiB9KSB7XG4gIGNvbnN0IHsgaXNMb2FkaW5nLCBpc0F1dGhlbnRpY2F0ZWQgfSA9IHVzZUNvbnZleEF1dGgoKTtcbiAgaWYgKGlzTG9hZGluZyB8fCBpc0F1dGhlbnRpY2F0ZWQpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIG51bGwsIGNoaWxkcmVuKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBBdXRoTG9hZGluZyh7IGNoaWxkcmVuIH0pIHtcbiAgY29uc3QgeyBpc0xvYWRpbmcgfSA9IHVzZUNvbnZleEF1dGgoKTtcbiAgaWYgKCFpc0xvYWRpbmcpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIG51bGwsIGNoaWxkcmVuKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWF1dGhfaGVscGVycy5qcy5tYXBcbiJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZUNvbnZleEF1dGgiLCJBdXRoZW50aWNhdGVkIiwiY2hpbGRyZW4iLCJpc0xvYWRpbmciLCJpc0F1dGhlbnRpY2F0ZWQiLCJjcmVhdGVFbGVtZW50IiwiRnJhZ21lbnQiLCJVbmF1dGhlbnRpY2F0ZWQiLCJBdXRoTG9hZGluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/auth_helpers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/client.js":
/*!******************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/client.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConvexProvider: () => (/* binding */ ConvexProvider),\n/* harmony export */   ConvexReactClient: () => (/* binding */ ConvexReactClient),\n/* harmony export */   createMutation: () => (/* binding */ createMutation),\n/* harmony export */   useAction: () => (/* binding */ useAction),\n/* harmony export */   useConvex: () => (/* binding */ useConvex),\n/* harmony export */   useMutation: () => (/* binding */ useMutation),\n/* harmony export */   useQuery: () => (/* binding */ useQuery)\n/* harmony export */ });\n/* harmony import */ var _browser_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../browser/index.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-dom.js\");\n/* harmony import */ var _use_queries_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./use_queries.js */ \"(ssr)/./node_modules/convex/dist/esm/react/use_queries.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/index.js */ \"(ssr)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../server/api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n\n\n\n\n\n\n\n\nif (typeof react__WEBPACK_IMPORTED_MODULE_1__ === \"undefined\") {\n    throw new Error(\"Required dependency 'react' not found\");\n}\nif (typeof react_dom__WEBPACK_IMPORTED_MODULE_3__ === \"undefined\") {\n    throw new Error(\"Required dependency 'react-dom' not found\");\n}\nfunction createMutation(mutationReference, client, update) {\n    function mutation(args) {\n        assertNotAccidentalArgument(args);\n        return client.mutation(mutationReference, args, {\n            optimisticUpdate: update\n        });\n    }\n    mutation.withOptimisticUpdate = function withOptimisticUpdate(optimisticUpdate) {\n        if (update !== void 0) {\n            throw new Error(`Already specified optimistic update for mutation ${(0,_server_api_js__WEBPACK_IMPORTED_MODULE_6__.getFunctionName)(mutationReference)}`);\n        }\n        return createMutation(mutationReference, client, optimisticUpdate);\n    };\n    return mutation;\n}\nfunction createAction(actionReference, client) {\n    return function(args) {\n        return client.action(actionReference, args);\n    };\n}\nclass ConvexReactClient {\n    /**\n   * @param address - The url of your Convex deployment, often provided\n   * by an environment variable. E.g. `https://small-mouse-123.convex.cloud`.\n   * @param options - See {@link ConvexReactClientOptions} for a full description.\n   */ constructor(address, options){\n        this.closed = false;\n        if (typeof address !== \"string\") {\n            throw new Error(\"ConvexReactClient requires a URL like 'https://happy-otter-123.convex.cloud'.\");\n        }\n        if (!address.includes(\"://\")) {\n            throw new Error(\"Provided address was not an absolute URL.\");\n        }\n        this.address = address;\n        this.listeners = /* @__PURE__ */ new Map();\n        this.options = {\n            ...options\n        };\n    }\n    /**\n   * Lazily instantiate the `BaseConvexClient` so we don't create the WebSocket\n   * when server-side rendering.\n   *\n   * @internal\n   */ get sync() {\n        if (this.closed) {\n            throw new Error(\"ConvexReactClient has already been closed.\");\n        }\n        if (this.cachedSync) {\n            return this.cachedSync;\n        }\n        this.cachedSync = new _browser_index_js__WEBPACK_IMPORTED_MODULE_0__.BaseConvexClient(this.address, (updatedQueries)=>this.transition(updatedQueries), this.options);\n        if (this.adminAuth) {\n            this.cachedSync.setAdminAuth(this.adminAuth, this.fakeUserIdentity);\n        }\n        return this.cachedSync;\n    }\n    /**\n   * Set the authentication token to be used for subsequent queries and mutations.\n   * `fetchToken` will be called automatically again if a token expires.\n   * `fetchToken` should return `null` if the token cannot be retrieved, for example\n   * when the user's rights were permanently revoked.\n   * @param fetchToken - an async function returning the JWT-encoded OpenID Connect Identity Token\n   * @param onChange - a callback that will be called when the authentication status changes\n   */ setAuth(fetchToken, onChange) {\n        if (typeof fetchToken === \"string\") {\n            throw new Error(\"Passing a string to ConvexReactClient.setAuth is no longer supported, please upgrade to passing in an async function to handle reauthentication.\");\n        }\n        this.sync.setAuth(fetchToken, onChange ?? (()=>{}));\n    }\n    /**\n   * Clear the current authentication token if set.\n   */ clearAuth() {\n        this.sync.clearAuth();\n    }\n    /**\n   * @internal\n   */ setAdminAuth(token, identity) {\n        this.adminAuth = token;\n        this.fakeUserIdentity = identity;\n        if (this.closed) {\n            throw new Error(\"ConvexReactClient has already been closed.\");\n        }\n        if (this.cachedSync) {\n            this.sync.setAdminAuth(token, identity);\n        }\n    }\n    /**\n   * Construct a new {@link Watch} on a Convex query function.\n   *\n   * **Most application code should not call this method directly. Instead use\n   * the {@link useQuery} hook.**\n   *\n   * @param query - A {@link server.FunctionReference} for the public query to run.\n   * @param args - An arguments object for the query. If this is omitted,\n   * the arguments will be `{}`.\n   * @param options - A {@link WatchQueryOptions} options object for this query.\n   *\n   * @returns The {@link Watch} object.\n   */ watchQuery(query, ...argsAndOptions) {\n        const [args, options] = argsAndOptions;\n        const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_6__.getFunctionName)(query);\n        return {\n            onUpdate: (callback)=>{\n                const { queryToken, unsubscribe } = this.sync.subscribe(name, args, options);\n                const currentListeners = this.listeners.get(queryToken);\n                if (currentListeners !== void 0) {\n                    currentListeners.add(callback);\n                } else {\n                    this.listeners.set(queryToken, /* @__PURE__ */ new Set([\n                        callback\n                    ]));\n                }\n                return ()=>{\n                    if (this.closed) {\n                        return;\n                    }\n                    const currentListeners2 = this.listeners.get(queryToken);\n                    currentListeners2.delete(callback);\n                    if (currentListeners2.size === 0) {\n                        this.listeners.delete(queryToken);\n                    }\n                    unsubscribe();\n                };\n            },\n            localQueryResult: ()=>{\n                if (this.cachedSync) {\n                    return this.cachedSync.localQueryResult(name, args);\n                }\n                return void 0;\n            },\n            localQueryLogs: ()=>{\n                if (this.cachedSync) {\n                    return this.cachedSync.localQueryLogs(name, args);\n                }\n                return void 0;\n            },\n            journal: ()=>{\n                if (this.cachedSync) {\n                    return this.cachedSync.queryJournal(name, args);\n                }\n                return void 0;\n            }\n        };\n    }\n    /**\n   * Execute a mutation function.\n   *\n   * @param mutation - A {@link server.FunctionReference} for the public mutation\n   * to run.\n   * @param args - An arguments object for the mutation. If this is omitted,\n   * the arguments will be `{}`.\n   * @param options - A {@link MutationOptions} options object for the mutation.\n   * @returns A promise of the mutation's result.\n   */ mutation(mutation, ...argsAndOptions) {\n        const [args, options] = argsAndOptions;\n        const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_6__.getFunctionName)(mutation);\n        return this.sync.mutation(name, args, options);\n    }\n    /**\n   * Execute an action function.\n   *\n   * @param action - A {@link server.FunctionReference} for the public action\n   * to run.\n   * @param args - An arguments object for the action. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the action's result.\n   */ action(action, ...args) {\n        const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_6__.getFunctionName)(action);\n        return this.sync.action(name, ...args);\n    }\n    /**\n   * Fetch a query result once.\n   *\n   * **Most application code should subscribe to queries instead, using\n   * the {@link useQuery} hook.**\n   *\n   * @param query - A {@link server.FunctionReference} for the public query\n   * to run.\n   * @param args - An arguments object for the query. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the query's result.\n   */ query(query, ...args) {\n        const watch = this.watchQuery(query, ...args);\n        const existingResult = watch.localQueryResult();\n        if (existingResult !== void 0) {\n            return existingResult;\n        }\n        return new Promise((resolve, reject)=>{\n            const unsubscribe = watch.onUpdate(()=>{\n                unsubscribe();\n                try {\n                    resolve(watch.localQueryResult());\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        });\n    }\n    /**\n   * Get the current {@link ConnectionState} between the client and the Convex\n   * backend.\n   *\n   * @returns The {@link ConnectionState} with the Convex backend.\n   */ connectionState() {\n        return this.sync.connectionState();\n    }\n    /**\n   * Close any network handles associated with this client and stop all subscriptions.\n   *\n   * Call this method when you're done with a {@link ConvexReactClient} to\n   * dispose of its sockets and resources.\n   *\n   * @returns A `Promise` fulfilled when the connection has been completely closed.\n   */ async close() {\n        this.closed = true;\n        this.listeners = /* @__PURE__ */ new Map();\n        if (this.cachedSync) {\n            const sync = this.cachedSync;\n            this.cachedSync = void 0;\n            await sync.close();\n        }\n    }\n    transition(updatedQueries) {\n        react_dom__WEBPACK_IMPORTED_MODULE_3__.unstable_batchedUpdates(()=>{\n            for (const queryToken of updatedQueries){\n                const callbacks = this.listeners.get(queryToken);\n                if (callbacks) {\n                    for (const callback of callbacks){\n                        callback();\n                    }\n                }\n            }\n        });\n    }\n}\nconst ConvexContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createContext(void 0);\nfunction useConvex() {\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ConvexContext);\n}\nconst ConvexProvider = ({ client, children })=>{\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(ConvexContext.Provider, {\n        value: client\n    }, children);\n};\nfunction useQuery(query, ...args) {\n    const skip = args[0] === \"skip\";\n    const argsObject = args[0] === \"skip\" ? {} : (0,_common_index_js__WEBPACK_IMPORTED_MODULE_5__.parseArgs)(args[0]);\n    const queryReference = typeof query === \"string\" ? (0,_server_api_js__WEBPACK_IMPORTED_MODULE_6__.makeFunctionReference)(query) : query;\n    const queryName = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_6__.getFunctionName)(queryReference);\n    const queries = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>skip ? {} : {\n            query: {\n                query: queryReference,\n                args: argsObject\n            }\n        }, // Stringify args so args that are semantically the same don't trigger a\n    // rerender. Saves developers from adding `useMemo` on every args usage.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_2__.convexToJson)(argsObject)),\n        queryName,\n        skip\n    ]);\n    const results = (0,_use_queries_js__WEBPACK_IMPORTED_MODULE_4__.useQueries)(queries);\n    const result = results[\"query\"];\n    if (result instanceof Error) {\n        throw result;\n    }\n    return result;\n}\nfunction useMutation(mutation) {\n    const mutationReference = typeof mutation === \"string\" ? (0,_server_api_js__WEBPACK_IMPORTED_MODULE_6__.makeFunctionReference)(mutation) : mutation;\n    const convex = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ConvexContext);\n    if (convex === void 0) {\n        throw new Error(\"Could not find Convex client! `useMutation` must be used in the React component tree under `ConvexProvider`. Did you forget it? See https://docs.convex.dev/quick-start#set-up-convex-in-your-react-app\");\n    }\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>createMutation(mutationReference, convex), // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        convex,\n        (0,_server_api_js__WEBPACK_IMPORTED_MODULE_6__.getFunctionName)(mutationReference)\n    ]);\n}\nfunction useAction(action) {\n    const convex = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ConvexContext);\n    const actionReference = typeof action === \"string\" ? (0,_server_api_js__WEBPACK_IMPORTED_MODULE_6__.makeFunctionReference)(action) : action;\n    if (convex === void 0) {\n        throw new Error(\"Could not find Convex client! `useAction` must be used in the React component tree under `ConvexProvider`. Did you forget it? See https://docs.convex.dev/quick-start#set-up-convex-in-your-react-app\");\n    }\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>createAction(actionReference, convex), // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        convex,\n        (0,_server_api_js__WEBPACK_IMPORTED_MODULE_6__.getFunctionName)(actionReference)\n    ]);\n}\nfunction assertNotAccidentalArgument(value) {\n    if (typeof value === \"object\" && value !== null && \"bubbles\" in value && \"persist\" in value && \"isDefaultPrevented\" in value) {\n        throw new Error(`Convex function called with SyntheticEvent object. Did you use a Convex function as an event handler directly? Event handlers like onClick receive an event object as their first argument. These SyntheticEvent objects are not valid Convex values. Try wrapping the function like \\`const handler = () => myMutation();\\` and using \\`handler\\` in the event handler.`);\n    }\n} //# sourceMappingURL=client.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/hydration.js":
/*!*********************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/hydration.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   usePreloadedQuery: () => (/* binding */ usePreloadedQuery)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _react_client_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../react/client.js */ \"(ssr)/./node_modules/convex/dist/esm/react/client.js\");\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../server/api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n\n\n\n\n\nfunction usePreloadedQuery(preloadedQuery) {\n    const args = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>(0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.jsonToConvex)(preloadedQuery._argsJSON), [\n        preloadedQuery._argsJSON\n    ]);\n    const preloadedResult = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>(0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.jsonToConvex)(preloadedQuery._valueJSON), [\n        preloadedQuery._valueJSON\n    ]);\n    const result = (0,_react_client_js__WEBPACK_IMPORTED_MODULE_1__.useQuery)((0,_server_api_js__WEBPACK_IMPORTED_MODULE_2__.makeFunctionReference)(preloadedQuery._name), args);\n    return result === void 0 ? preloadedResult : result;\n} //# sourceMappingURL=hydration.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L2h5ZHJhdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFhO0FBQ21CO0FBQ2M7QUFDVztBQUNQO0FBQzNDLFNBQVNJLGtCQUFrQkMsY0FBYztJQUM5QyxNQUFNQyxPQUFPTiw4Q0FBT0EsQ0FDbEIsSUFBTUcsOERBQVlBLENBQUNFLGVBQWVFLFNBQVMsR0FDM0M7UUFBQ0YsZUFBZUUsU0FBUztLQUFDO0lBRTVCLE1BQU1DLGtCQUFrQlIsOENBQU9BLENBQzdCLElBQU1HLDhEQUFZQSxDQUFDRSxlQUFlSSxVQUFVLEdBQzVDO1FBQUNKLGVBQWVJLFVBQVU7S0FBQztJQUU3QixNQUFNQyxTQUFTVCwwREFBUUEsQ0FDckJDLHFFQUFxQkEsQ0FBQ0csZUFBZU0sS0FBSyxHQUMxQ0w7SUFFRixPQUFPSSxXQUFXLEtBQUssSUFBSUYsa0JBQWtCRTtBQUMvQyxFQUNBLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL2VyYXNvcl9jbG9uZS8uL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vcmVhY3QvaHlkcmF0aW9uLmpzPzgyMTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5pbXBvcnQgeyB1c2VNZW1vIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VRdWVyeSB9IGZyb20gXCIuLi9yZWFjdC9jbGllbnQuanNcIjtcbmltcG9ydCB7IG1ha2VGdW5jdGlvblJlZmVyZW5jZSB9IGZyb20gXCIuLi9zZXJ2ZXIvYXBpLmpzXCI7XG5pbXBvcnQgeyBqc29uVG9Db252ZXggfSBmcm9tIFwiLi4vdmFsdWVzL2luZGV4LmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gdXNlUHJlbG9hZGVkUXVlcnkocHJlbG9hZGVkUXVlcnkpIHtcbiAgY29uc3QgYXJncyA9IHVzZU1lbW8oXG4gICAgKCkgPT4ganNvblRvQ29udmV4KHByZWxvYWRlZFF1ZXJ5Ll9hcmdzSlNPTiksXG4gICAgW3ByZWxvYWRlZFF1ZXJ5Ll9hcmdzSlNPTl1cbiAgKTtcbiAgY29uc3QgcHJlbG9hZGVkUmVzdWx0ID0gdXNlTWVtbyhcbiAgICAoKSA9PiBqc29uVG9Db252ZXgocHJlbG9hZGVkUXVlcnkuX3ZhbHVlSlNPTiksXG4gICAgW3ByZWxvYWRlZFF1ZXJ5Ll92YWx1ZUpTT05dXG4gICk7XG4gIGNvbnN0IHJlc3VsdCA9IHVzZVF1ZXJ5KFxuICAgIG1ha2VGdW5jdGlvblJlZmVyZW5jZShwcmVsb2FkZWRRdWVyeS5fbmFtZSksXG4gICAgYXJnc1xuICApO1xuICByZXR1cm4gcmVzdWx0ID09PSB2b2lkIDAgPyBwcmVsb2FkZWRSZXN1bHQgOiByZXN1bHQ7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oeWRyYXRpb24uanMubWFwXG4iXSwibmFtZXMiOlsidXNlTWVtbyIsInVzZVF1ZXJ5IiwibWFrZUZ1bmN0aW9uUmVmZXJlbmNlIiwianNvblRvQ29udmV4IiwidXNlUHJlbG9hZGVkUXVlcnkiLCJwcmVsb2FkZWRRdWVyeSIsImFyZ3MiLCJfYXJnc0pTT04iLCJwcmVsb2FkZWRSZXN1bHQiLCJfdmFsdWVKU09OIiwicmVzdWx0IiwiX25hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/hydration.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthLoading: () => (/* reexport safe */ _auth_helpers_js__WEBPACK_IMPORTED_MODULE_2__.AuthLoading),\n/* harmony export */   Authenticated: () => (/* reexport safe */ _auth_helpers_js__WEBPACK_IMPORTED_MODULE_2__.Authenticated),\n/* harmony export */   ConvexProvider: () => (/* reexport safe */ _client_js__WEBPACK_IMPORTED_MODULE_6__.ConvexProvider),\n/* harmony export */   ConvexProviderWithAuth: () => (/* reexport safe */ _ConvexAuthState_js__WEBPACK_IMPORTED_MODULE_3__.ConvexProviderWithAuth),\n/* harmony export */   ConvexReactClient: () => (/* reexport safe */ _client_js__WEBPACK_IMPORTED_MODULE_6__.ConvexReactClient),\n/* harmony export */   Unauthenticated: () => (/* reexport safe */ _auth_helpers_js__WEBPACK_IMPORTED_MODULE_2__.Unauthenticated),\n/* harmony export */   optimisticallyUpdateValueInPaginatedQuery: () => (/* reexport safe */ _use_paginated_query_js__WEBPACK_IMPORTED_MODULE_0__.optimisticallyUpdateValueInPaginatedQuery),\n/* harmony export */   resetPaginationId: () => (/* reexport safe */ _use_paginated_query_js__WEBPACK_IMPORTED_MODULE_0__.resetPaginationId),\n/* harmony export */   useAction: () => (/* reexport safe */ _client_js__WEBPACK_IMPORTED_MODULE_6__.useAction),\n/* harmony export */   useConvex: () => (/* reexport safe */ _client_js__WEBPACK_IMPORTED_MODULE_6__.useConvex),\n/* harmony export */   useConvexAuth: () => (/* reexport safe */ _ConvexAuthState_js__WEBPACK_IMPORTED_MODULE_3__.useConvexAuth),\n/* harmony export */   useMutation: () => (/* reexport safe */ _client_js__WEBPACK_IMPORTED_MODULE_6__.useMutation),\n/* harmony export */   usePaginatedQuery: () => (/* reexport safe */ _use_paginated_query_js__WEBPACK_IMPORTED_MODULE_0__.usePaginatedQuery),\n/* harmony export */   usePreloadedQuery: () => (/* reexport safe */ _hydration_js__WEBPACK_IMPORTED_MODULE_4__.usePreloadedQuery),\n/* harmony export */   useQueries: () => (/* reexport safe */ _use_queries_js__WEBPACK_IMPORTED_MODULE_1__.useQueries),\n/* harmony export */   useQuery: () => (/* reexport safe */ _client_js__WEBPACK_IMPORTED_MODULE_6__.useQuery),\n/* harmony export */   useSubscription: () => (/* reexport safe */ _use_subscription_js__WEBPACK_IMPORTED_MODULE_5__.useSubscription)\n/* harmony export */ });\n/* harmony import */ var _use_paginated_query_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./use_paginated_query.js */ \"(ssr)/./node_modules/convex/dist/esm/react/use_paginated_query.js\");\n/* harmony import */ var _use_queries_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./use_queries.js */ \"(ssr)/./node_modules/convex/dist/esm/react/use_queries.js\");\n/* harmony import */ var _auth_helpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./auth_helpers.js */ \"(ssr)/./node_modules/convex/dist/esm/react/auth_helpers.js\");\n/* harmony import */ var _ConvexAuthState_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ConvexAuthState.js */ \"(ssr)/./node_modules/convex/dist/esm/react/ConvexAuthState.js\");\n/* harmony import */ var _hydration_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hydration.js */ \"(ssr)/./node_modules/convex/dist/esm/react/hydration.js\");\n/* harmony import */ var _use_subscription_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./use_subscription.js */ \"(ssr)/./node_modules/convex/dist/esm/react/use_subscription.js\");\n/* harmony import */ var _client_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./client.js */ \"(ssr)/./node_modules/convex/dist/esm/react/client.js\");\n\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFhO0FBQzRCO0FBQ0s7QUFDWjtBQUNHO0FBQ047QUFDeUI7QUFRbkMsQ0FDckIsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXJhc29yX2Nsb25lLy4vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9yZWFjdC9pbmRleC5qcz8zNTViIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuZXhwb3J0ICogZnJvbSBcIi4vdXNlX3BhZ2luYXRlZF9xdWVyeS5qc1wiO1xuZXhwb3J0IHsgdXNlUXVlcmllcyB9IGZyb20gXCIuL3VzZV9xdWVyaWVzLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9hdXRoX2hlbHBlcnMuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL0NvbnZleEF1dGhTdGF0ZS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vaHlkcmF0aW9uLmpzXCI7XG5leHBvcnQgeyB1c2VTdWJzY3JpcHRpb24gfSBmcm9tIFwiLi91c2Vfc3Vic2NyaXB0aW9uLmpzXCI7XG5leHBvcnQge1xuICBDb252ZXhSZWFjdENsaWVudCxcbiAgdXNlQ29udmV4LFxuICBDb252ZXhQcm92aWRlcixcbiAgdXNlUXVlcnksXG4gIHVzZU11dGF0aW9uLFxuICB1c2VBY3Rpb25cbn0gZnJvbSBcIi4vY2xpZW50LmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6WyJ1c2VRdWVyaWVzIiwidXNlU3Vic2NyaXB0aW9uIiwiQ29udmV4UmVhY3RDbGllbnQiLCJ1c2VDb252ZXgiLCJDb252ZXhQcm92aWRlciIsInVzZVF1ZXJ5IiwidXNlTXV0YXRpb24iLCJ1c2VBY3Rpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/queries_observer.js":
/*!****************************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/queries_observer.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueriesObserver: () => (/* binding */ QueriesObserver)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../server/api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n\n\n\nclass QueriesObserver {\n    constructor(createWatch){\n        this.createWatch = createWatch;\n        this.queries = {};\n        this.listeners = /* @__PURE__ */ new Set();\n    }\n    setQueries(newQueries) {\n        for (const identifier of Object.keys(newQueries)){\n            const { query, args } = newQueries[identifier];\n            (0,_server_api_js__WEBPACK_IMPORTED_MODULE_1__.getFunctionName)(query);\n            if (this.queries[identifier] === void 0) {\n                this.addQuery(identifier, query, args);\n            } else {\n                const existingInfo = this.queries[identifier];\n                if ((0,_server_api_js__WEBPACK_IMPORTED_MODULE_1__.getFunctionName)(query) !== (0,_server_api_js__WEBPACK_IMPORTED_MODULE_1__.getFunctionName)(existingInfo.query) || JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(args)) !== JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(existingInfo.args))) {\n                    this.removeQuery(identifier);\n                    this.addQuery(identifier, query, args);\n                }\n            }\n        }\n        for (const identifier of Object.keys(this.queries)){\n            if (newQueries[identifier] === void 0) {\n                this.removeQuery(identifier);\n            }\n        }\n    }\n    subscribe(listener) {\n        this.listeners.add(listener);\n        return ()=>{\n            this.listeners.delete(listener);\n        };\n    }\n    getLocalResults(queries) {\n        const result = {};\n        for (const identifier of Object.keys(queries)){\n            const { query, args } = queries[identifier];\n            (0,_server_api_js__WEBPACK_IMPORTED_MODULE_1__.getFunctionName)(query);\n            const watch = this.createWatch(query, args);\n            let value;\n            try {\n                value = watch.localQueryResult();\n            } catch (e) {\n                if (e instanceof Error) {\n                    value = e;\n                } else {\n                    throw e;\n                }\n            }\n            result[identifier] = value;\n        }\n        return result;\n    }\n    setCreateWatch(createWatch) {\n        this.createWatch = createWatch;\n        for (const identifier of Object.keys(this.queries)){\n            const { query, args, watch } = this.queries[identifier];\n            const journal = watch.journal();\n            this.removeQuery(identifier);\n            this.addQuery(identifier, query, args, journal);\n        }\n    }\n    destroy() {\n        for (const identifier of Object.keys(this.queries)){\n            this.removeQuery(identifier);\n        }\n        this.listeners = /* @__PURE__ */ new Set();\n    }\n    addQuery(identifier, query, args, journal) {\n        if (this.queries[identifier] !== void 0) {\n            throw new Error(`Tried to add a new query with identifier ${identifier} when it already exists.`);\n        }\n        const watch = this.createWatch(query, args, journal);\n        const unsubscribe = watch.onUpdate(()=>this.notifyListeners());\n        this.queries[identifier] = {\n            query,\n            args,\n            watch,\n            unsubscribe\n        };\n    }\n    removeQuery(identifier) {\n        const info = this.queries[identifier];\n        if (info === void 0) {\n            throw new Error(`No query found with identifier ${identifier}.`);\n        }\n        info.unsubscribe();\n        delete this.queries[identifier];\n    }\n    notifyListeners() {\n        for (const listener of this.listeners){\n            listener();\n        }\n    }\n} //# sourceMappingURL=queries_observer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/queries_observer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/use_paginated_query.js":
/*!*******************************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/use_paginated_query.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   optimisticallyUpdateValueInPaginatedQuery: () => (/* binding */ optimisticallyUpdateValueInPaginatedQuery),\n/* harmony export */   resetPaginationId: () => (/* binding */ resetPaginationId),\n/* harmony export */   usePaginatedQuery: () => (/* binding */ usePaginatedQuery)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _use_queries_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./use_queries.js */ \"(ssr)/./node_modules/convex/dist/esm/react/use_queries.js\");\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../server/api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n\n\n\n\n\nconst splitQuery = (key, splitCursor, continueCursor)=>(prevState)=>{\n        const queries = {\n            ...prevState.queries\n        };\n        const splitKey1 = prevState.nextPageKey;\n        const splitKey2 = prevState.nextPageKey + 1;\n        const nextPageKey = prevState.nextPageKey + 2;\n        queries[splitKey1] = {\n            query: prevState.query,\n            args: {\n                ...prevState.args,\n                paginationOpts: {\n                    ...prevState.queries[key].args.paginationOpts,\n                    endCursor: splitCursor\n                }\n            }\n        };\n        queries[splitKey2] = {\n            query: prevState.query,\n            args: {\n                ...prevState.args,\n                paginationOpts: {\n                    ...prevState.queries[key].args.paginationOpts,\n                    cursor: splitCursor,\n                    endCursor: continueCursor\n                }\n            }\n        };\n        const ongoingSplits = {\n            ...prevState.ongoingSplits\n        };\n        ongoingSplits[key] = [\n            splitKey1,\n            splitKey2\n        ];\n        return {\n            ...prevState,\n            nextPageKey,\n            queries,\n            ongoingSplits\n        };\n    };\nconst completeSplitQuery = (key)=>(prevState)=>{\n        const completedSplit = prevState.ongoingSplits[key];\n        if (completedSplit === void 0) {\n            return prevState;\n        }\n        const queries = {\n            ...prevState.queries\n        };\n        delete queries[key];\n        const ongoingSplits = {\n            ...prevState.ongoingSplits\n        };\n        delete ongoingSplits[key];\n        let pageKeys = prevState.pageKeys.slice();\n        const pageIndex = prevState.pageKeys.findIndex((v)=>v === key);\n        if (pageIndex >= 0) {\n            pageKeys = [\n                ...prevState.pageKeys.slice(0, pageIndex),\n                ...completedSplit,\n                ...prevState.pageKeys.slice(pageIndex + 1)\n            ];\n        }\n        return {\n            ...prevState,\n            queries,\n            pageKeys,\n            ongoingSplits\n        };\n    };\nfunction usePaginatedQuery(query, args, options) {\n    if (typeof options?.initialNumItems !== \"number\" || options.initialNumItems < 0) {\n        throw new Error(`\\`options.initialNumItems\\` must be a positive number. Received \\`${options?.initialNumItems}\\`.`);\n    }\n    const skip = args === \"skip\";\n    const argsObject = skip ? {} : args;\n    const queryName = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_3__.getFunctionName)(query);\n    const createInitialState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        return ()=>{\n            const id = nextPaginationId();\n            return {\n                query,\n                args: argsObject,\n                id,\n                nextPageKey: 1,\n                pageKeys: skip ? [] : [\n                    0\n                ],\n                queries: skip ? {} : {\n                    0: {\n                        query,\n                        args: {\n                            ...argsObject,\n                            paginationOpts: {\n                                numItems: options.initialNumItems,\n                                cursor: null,\n                                id\n                            }\n                        }\n                    }\n                },\n                ongoingSplits: {},\n                skip\n            };\n        };\n    }, [\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_1__.convexToJson)(argsObject)),\n        queryName,\n        options.initialNumItems,\n        skip\n    ]);\n    const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(createInitialState);\n    let currState = state;\n    if ((0,_server_api_js__WEBPACK_IMPORTED_MODULE_3__.getFunctionName)(query) !== (0,_server_api_js__WEBPACK_IMPORTED_MODULE_3__.getFunctionName)(state.query) || JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_1__.convexToJson)(argsObject)) !== JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_1__.convexToJson)(state.args)) || skip !== state.skip) {\n        currState = createInitialState();\n        setState(currState);\n    }\n    const resultsObject = (0,_use_queries_js__WEBPACK_IMPORTED_MODULE_2__.useQueries)(currState.queries);\n    const [results, maybeLastResult] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        let currResult = void 0;\n        const allItems = [];\n        for (const pageKey of currState.pageKeys){\n            currResult = resultsObject[pageKey];\n            if (currResult === void 0) {\n                break;\n            }\n            if (currResult instanceof Error) {\n                if (currResult.message.includes(\"InvalidCursor\")) {\n                    console.warn(\"usePaginatedQuery hit error, resetting pagination state: \" + currResult.message);\n                    setState(createInitialState);\n                    return [\n                        [],\n                        void 0\n                    ];\n                } else {\n                    throw currResult;\n                }\n            }\n            const ongoingSplit = currState.ongoingSplits[pageKey];\n            if (ongoingSplit !== void 0) {\n                if (resultsObject[ongoingSplit[0]] !== void 0 && resultsObject[ongoingSplit[1]] !== void 0) {\n                    setState(completeSplitQuery(pageKey));\n                }\n            } else if (currResult.splitCursor && (currResult.pageStatus === \"SplitRecommended\" || currResult.pageStatus === \"SplitRequired\" || currResult.page.length > options.initialNumItems * 2)) {\n                setState(splitQuery(pageKey, currResult.splitCursor, currResult.continueCursor));\n            }\n            if (currResult.pageStatus === \"SplitRequired\") {\n                return [\n                    allItems,\n                    void 0\n                ];\n            }\n            allItems.push(...currResult.page);\n        }\n        return [\n            allItems,\n            currResult\n        ];\n    }, [\n        resultsObject,\n        currState.pageKeys,\n        currState.ongoingSplits,\n        options.initialNumItems,\n        createInitialState\n    ]);\n    const statusObject = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        if (maybeLastResult === void 0) {\n            if (currState.nextPageKey === 1) {\n                return {\n                    status: \"LoadingFirstPage\",\n                    isLoading: true,\n                    loadMore: (_numItems)=>{}\n                };\n            } else {\n                return {\n                    status: \"LoadingMore\",\n                    isLoading: true,\n                    loadMore: (_numItems)=>{}\n                };\n            }\n        }\n        if (maybeLastResult.isDone) {\n            return {\n                status: \"Exhausted\",\n                isLoading: false,\n                loadMore: (_numItems)=>{}\n            };\n        }\n        const continueCursor = maybeLastResult.continueCursor;\n        let alreadyLoadingMore = false;\n        return {\n            status: \"CanLoadMore\",\n            isLoading: false,\n            loadMore: (numItems)=>{\n                if (!alreadyLoadingMore) {\n                    alreadyLoadingMore = true;\n                    setState((prevState)=>{\n                        const pageKeys = [\n                            ...prevState.pageKeys,\n                            prevState.nextPageKey\n                        ];\n                        const queries = {\n                            ...prevState.queries\n                        };\n                        queries[prevState.nextPageKey] = {\n                            query: prevState.query,\n                            args: {\n                                ...prevState.args,\n                                paginationOpts: {\n                                    numItems,\n                                    cursor: continueCursor,\n                                    id: prevState.id\n                                }\n                            }\n                        };\n                        return {\n                            ...prevState,\n                            nextPageKey: prevState.nextPageKey + 1,\n                            pageKeys,\n                            queries\n                        };\n                    });\n                }\n            }\n        };\n    }, [\n        maybeLastResult,\n        currState.nextPageKey\n    ]);\n    return {\n        results,\n        ...statusObject\n    };\n}\nlet paginationId = 0;\nfunction nextPaginationId() {\n    paginationId++;\n    return paginationId;\n}\nfunction resetPaginationId() {\n    paginationId = 0;\n}\nfunction optimisticallyUpdateValueInPaginatedQuery(localStore, query, args, updateValue) {\n    const expectedArgs = JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_1__.convexToJson)(args));\n    for (const queryResult of localStore.getAllQueries(query)){\n        if (queryResult.value !== void 0) {\n            const { paginationOpts: _, ...innerArgs } = queryResult.args;\n            if (JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_1__.convexToJson)(innerArgs)) === expectedArgs) {\n                const value = queryResult.value;\n                if (typeof value === \"object\" && value !== null && Array.isArray(value.page)) {\n                    localStore.setQuery(query, queryResult.args, {\n                        ...value,\n                        page: value.page.map(updateValue)\n                    });\n                }\n            }\n        }\n    }\n} //# sourceMappingURL=use_paginated_query.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/use_paginated_query.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/use_queries.js":
/*!***********************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/use_queries.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useQueries: () => (/* binding */ useQueries),\n/* harmony export */   useQueriesHelper: () => (/* binding */ useQueriesHelper)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _client_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./client.js */ \"(ssr)/./node_modules/convex/dist/esm/react/client.js\");\n/* harmony import */ var _queries_observer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./queries_observer.js */ \"(ssr)/./node_modules/convex/dist/esm/react/queries_observer.js\");\n/* harmony import */ var _use_subscription_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./use_subscription.js */ \"(ssr)/./node_modules/convex/dist/esm/react/use_subscription.js\");\n\n\n\n\n\nfunction useQueries(queries) {\n    const convex = (0,_client_js__WEBPACK_IMPORTED_MODULE_1__.useConvex)();\n    if (convex === void 0) {\n        throw new Error(\"Could not find Convex client! `useQuery` must be used in the React component tree under `ConvexProvider`. Did you forget it? See https://docs.convex.dev/quick-start#set-up-convex-in-your-react-app\");\n    }\n    const createWatch = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        return (query, args, journal)=>{\n            return convex.watchQuery(query, args, {\n                journal\n            });\n        };\n    }, [\n        convex\n    ]);\n    return useQueriesHelper(queries, createWatch);\n}\nfunction useQueriesHelper(queries, createWatch) {\n    const [observer] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>new _queries_observer_js__WEBPACK_IMPORTED_MODULE_2__.QueriesObserver(createWatch));\n    if (observer.createWatch !== createWatch) {\n        observer.setCreateWatch(createWatch);\n    }\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>()=>observer.destroy(), [\n        observer\n    ]);\n    const subscription = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>({\n            getCurrentValue: ()=>{\n                return observer.getLocalResults(queries);\n            },\n            subscribe: (callback)=>{\n                observer.setQueries(queries);\n                return observer.subscribe(callback);\n            }\n        }), [\n        observer,\n        queries\n    ]);\n    return (0,_use_subscription_js__WEBPACK_IMPORTED_MODULE_3__.useSubscription)(subscription);\n} //# sourceMappingURL=use_queries.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L3VzZV9xdWVyaWVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFhO0FBQ3dDO0FBQ2I7QUFDZ0I7QUFDQTtBQUNqRCxTQUFTTSxXQUFXQyxPQUFPO0lBQ2hDLE1BQU1DLFNBQVNMLHFEQUFTQTtJQUN4QixJQUFJSyxXQUFXLEtBQUssR0FBRztRQUNyQixNQUFNLElBQUlDLE1BQ1I7SUFFSjtJQUNBLE1BQU1DLGNBQWNULDhDQUFPQSxDQUFDO1FBQzFCLE9BQU8sQ0FBQ1UsT0FBT0MsTUFBTUM7WUFDbkIsT0FBT0wsT0FBT00sVUFBVSxDQUFDSCxPQUFPQyxNQUFNO2dCQUFFQztZQUFRO1FBQ2xEO0lBQ0YsR0FBRztRQUFDTDtLQUFPO0lBQ1gsT0FBT08saUJBQWlCUixTQUFTRztBQUNuQztBQUNPLFNBQVNLLGlCQUFpQlIsT0FBTyxFQUFFRyxXQUFXO0lBQ25ELE1BQU0sQ0FBQ00sU0FBUyxHQUFHZCwrQ0FBUUEsQ0FBQyxJQUFNLElBQUlFLGlFQUFlQSxDQUFDTTtJQUN0RCxJQUFJTSxTQUFTTixXQUFXLEtBQUtBLGFBQWE7UUFDeENNLFNBQVNDLGNBQWMsQ0FBQ1A7SUFDMUI7SUFDQVYsZ0RBQVNBLENBQUMsSUFBTSxJQUFNZ0IsU0FBU0UsT0FBTyxJQUFJO1FBQUNGO0tBQVM7SUFDcEQsTUFBTUcsZUFBZWxCLDhDQUFPQSxDQUMxQixJQUFPO1lBQ0xtQixpQkFBaUI7Z0JBQ2YsT0FBT0osU0FBU0ssZUFBZSxDQUFDZDtZQUNsQztZQUNBZSxXQUFXLENBQUNDO2dCQUNWUCxTQUFTUSxVQUFVLENBQUNqQjtnQkFDcEIsT0FBT1MsU0FBU00sU0FBUyxDQUFDQztZQUM1QjtRQUNGLElBQ0E7UUFBQ1A7UUFBVVQ7S0FBUTtJQUVyQixPQUFPRixxRUFBZUEsQ0FBQ2M7QUFDekIsRUFDQSx1Q0FBdUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9lcmFzb3JfY2xvbmUvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L3VzZV9xdWVyaWVzLmpzPzhlMmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5pbXBvcnQgeyB1c2VFZmZlY3QsIHVzZU1lbW8sIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VDb252ZXggfSBmcm9tIFwiLi9jbGllbnQuanNcIjtcbmltcG9ydCB7IFF1ZXJpZXNPYnNlcnZlciB9IGZyb20gXCIuL3F1ZXJpZXNfb2JzZXJ2ZXIuanNcIjtcbmltcG9ydCB7IHVzZVN1YnNjcmlwdGlvbiB9IGZyb20gXCIuL3VzZV9zdWJzY3JpcHRpb24uanNcIjtcbmV4cG9ydCBmdW5jdGlvbiB1c2VRdWVyaWVzKHF1ZXJpZXMpIHtcbiAgY29uc3QgY29udmV4ID0gdXNlQ29udmV4KCk7XG4gIGlmIChjb252ZXggPT09IHZvaWQgMCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIFwiQ291bGQgbm90IGZpbmQgQ29udmV4IGNsaWVudCEgYHVzZVF1ZXJ5YCBtdXN0IGJlIHVzZWQgaW4gdGhlIFJlYWN0IGNvbXBvbmVudCB0cmVlIHVuZGVyIGBDb252ZXhQcm92aWRlcmAuIERpZCB5b3UgZm9yZ2V0IGl0PyBTZWUgaHR0cHM6Ly9kb2NzLmNvbnZleC5kZXYvcXVpY2stc3RhcnQjc2V0LXVwLWNvbnZleC1pbi15b3VyLXJlYWN0LWFwcFwiXG4gICAgKTtcbiAgfVxuICBjb25zdCBjcmVhdGVXYXRjaCA9IHVzZU1lbW8oKCkgPT4ge1xuICAgIHJldHVybiAocXVlcnksIGFyZ3MsIGpvdXJuYWwpID0+IHtcbiAgICAgIHJldHVybiBjb252ZXgud2F0Y2hRdWVyeShxdWVyeSwgYXJncywgeyBqb3VybmFsIH0pO1xuICAgIH07XG4gIH0sIFtjb252ZXhdKTtcbiAgcmV0dXJuIHVzZVF1ZXJpZXNIZWxwZXIocXVlcmllcywgY3JlYXRlV2F0Y2gpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHVzZVF1ZXJpZXNIZWxwZXIocXVlcmllcywgY3JlYXRlV2F0Y2gpIHtcbiAgY29uc3QgW29ic2VydmVyXSA9IHVzZVN0YXRlKCgpID0+IG5ldyBRdWVyaWVzT2JzZXJ2ZXIoY3JlYXRlV2F0Y2gpKTtcbiAgaWYgKG9ic2VydmVyLmNyZWF0ZVdhdGNoICE9PSBjcmVhdGVXYXRjaCkge1xuICAgIG9ic2VydmVyLnNldENyZWF0ZVdhdGNoKGNyZWF0ZVdhdGNoKTtcbiAgfVxuICB1c2VFZmZlY3QoKCkgPT4gKCkgPT4gb2JzZXJ2ZXIuZGVzdHJveSgpLCBbb2JzZXJ2ZXJdKTtcbiAgY29uc3Qgc3Vic2NyaXB0aW9uID0gdXNlTWVtbyhcbiAgICAoKSA9PiAoe1xuICAgICAgZ2V0Q3VycmVudFZhbHVlOiAoKSA9PiB7XG4gICAgICAgIHJldHVybiBvYnNlcnZlci5nZXRMb2NhbFJlc3VsdHMocXVlcmllcyk7XG4gICAgICB9LFxuICAgICAgc3Vic2NyaWJlOiAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgb2JzZXJ2ZXIuc2V0UXVlcmllcyhxdWVyaWVzKTtcbiAgICAgICAgcmV0dXJuIG9ic2VydmVyLnN1YnNjcmliZShjYWxsYmFjayk7XG4gICAgICB9XG4gICAgfSksXG4gICAgW29ic2VydmVyLCBxdWVyaWVzXVxuICApO1xuICByZXR1cm4gdXNlU3Vic2NyaXB0aW9uKHN1YnNjcmlwdGlvbik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11c2VfcXVlcmllcy5qcy5tYXBcbiJdLCJuYW1lcyI6WyJ1c2VFZmZlY3QiLCJ1c2VNZW1vIiwidXNlU3RhdGUiLCJ1c2VDb252ZXgiLCJRdWVyaWVzT2JzZXJ2ZXIiLCJ1c2VTdWJzY3JpcHRpb24iLCJ1c2VRdWVyaWVzIiwicXVlcmllcyIsImNvbnZleCIsIkVycm9yIiwiY3JlYXRlV2F0Y2giLCJxdWVyeSIsImFyZ3MiLCJqb3VybmFsIiwid2F0Y2hRdWVyeSIsInVzZVF1ZXJpZXNIZWxwZXIiLCJvYnNlcnZlciIsInNldENyZWF0ZVdhdGNoIiwiZGVzdHJveSIsInN1YnNjcmlwdGlvbiIsImdldEN1cnJlbnRWYWx1ZSIsImdldExvY2FsUmVzdWx0cyIsInN1YnNjcmliZSIsImNhbGxiYWNrIiwic2V0UXVlcmllcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/use_queries.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/use_subscription.js":
/*!****************************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/use_subscription.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useSubscription: () => (/* binding */ useSubscription)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n\n\nfunction useSubscription({ // (Synchronously) returns the current value of our subscription.\ngetCurrentValue, // This function is passed an event handler to attach to the subscription.\n// It should return an unsubscribe function that removes the handler.\nsubscribe }) {\n    const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>({\n            getCurrentValue,\n            subscribe,\n            value: getCurrentValue()\n        }));\n    let valueToReturn = state.value;\n    if (state.getCurrentValue !== getCurrentValue || state.subscribe !== subscribe) {\n        valueToReturn = getCurrentValue();\n        setState({\n            getCurrentValue,\n            subscribe,\n            value: valueToReturn\n        });\n    }\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        let didUnsubscribe = false;\n        const checkForUpdates = ()=>{\n            if (didUnsubscribe) {\n                return;\n            }\n            setState((prevState)=>{\n                if (prevState.getCurrentValue !== getCurrentValue || prevState.subscribe !== subscribe) {\n                    return prevState;\n                }\n                const value = getCurrentValue();\n                if (prevState.value === value) {\n                    return prevState;\n                }\n                return {\n                    ...prevState,\n                    value\n                };\n            });\n        };\n        const unsubscribe = subscribe(checkForUpdates);\n        checkForUpdates();\n        return ()=>{\n            didUnsubscribe = true;\n            unsubscribe();\n        };\n    }, [\n        getCurrentValue,\n        subscribe\n    ]);\n    return valueToReturn;\n} //# sourceMappingURL=use_subscription.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L3VzZV9zdWJzY3JpcHRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBYTtBQUMrQjtBQUNyQyxTQUFTRSxnQkFBZ0IsRUFDOUIsaUVBQWlFO0FBQ2pFQyxlQUFlLEVBQ2YsMEVBQTBFO0FBQzFFLHFFQUFxRTtBQUNyRUMsU0FBUyxFQUNWO0lBQ0MsTUFBTSxDQUFDQyxPQUFPQyxTQUFTLEdBQUdMLCtDQUFRQSxDQUFDLElBQU87WUFDeENFO1lBQ0FDO1lBQ0FHLE9BQU9KO1FBQ1Q7SUFDQSxJQUFJSyxnQkFBZ0JILE1BQU1FLEtBQUs7SUFDL0IsSUFBSUYsTUFBTUYsZUFBZSxLQUFLQSxtQkFBbUJFLE1BQU1ELFNBQVMsS0FBS0EsV0FBVztRQUM5RUksZ0JBQWdCTDtRQUNoQkcsU0FBUztZQUNQSDtZQUNBQztZQUNBRyxPQUFPQztRQUNUO0lBQ0Y7SUFDQVIsZ0RBQVNBLENBQUM7UUFDUixJQUFJUyxpQkFBaUI7UUFDckIsTUFBTUMsa0JBQWtCO1lBQ3RCLElBQUlELGdCQUFnQjtnQkFDbEI7WUFDRjtZQUNBSCxTQUFTLENBQUNLO2dCQUNSLElBQUlBLFVBQVVSLGVBQWUsS0FBS0EsbUJBQW1CUSxVQUFVUCxTQUFTLEtBQUtBLFdBQVc7b0JBQ3RGLE9BQU9PO2dCQUNUO2dCQUNBLE1BQU1KLFFBQVFKO2dCQUNkLElBQUlRLFVBQVVKLEtBQUssS0FBS0EsT0FBTztvQkFDN0IsT0FBT0k7Z0JBQ1Q7Z0JBQ0EsT0FBTztvQkFBRSxHQUFHQSxTQUFTO29CQUFFSjtnQkFBTTtZQUMvQjtRQUNGO1FBQ0EsTUFBTUssY0FBY1IsVUFBVU07UUFDOUJBO1FBQ0EsT0FBTztZQUNMRCxpQkFBaUI7WUFDakJHO1FBQ0Y7SUFDRixHQUFHO1FBQUNUO1FBQWlCQztLQUFVO0lBQy9CLE9BQU9JO0FBQ1QsRUFDQSw0Q0FBNEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9lcmFzb3JfY2xvbmUvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L3VzZV9zdWJzY3JpcHRpb24uanM/OWZkNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmltcG9ydCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmV4cG9ydCBmdW5jdGlvbiB1c2VTdWJzY3JpcHRpb24oe1xuICAvLyAoU3luY2hyb25vdXNseSkgcmV0dXJucyB0aGUgY3VycmVudCB2YWx1ZSBvZiBvdXIgc3Vic2NyaXB0aW9uLlxuICBnZXRDdXJyZW50VmFsdWUsXG4gIC8vIFRoaXMgZnVuY3Rpb24gaXMgcGFzc2VkIGFuIGV2ZW50IGhhbmRsZXIgdG8gYXR0YWNoIHRvIHRoZSBzdWJzY3JpcHRpb24uXG4gIC8vIEl0IHNob3VsZCByZXR1cm4gYW4gdW5zdWJzY3JpYmUgZnVuY3Rpb24gdGhhdCByZW1vdmVzIHRoZSBoYW5kbGVyLlxuICBzdWJzY3JpYmVcbn0pIHtcbiAgY29uc3QgW3N0YXRlLCBzZXRTdGF0ZV0gPSB1c2VTdGF0ZSgoKSA9PiAoe1xuICAgIGdldEN1cnJlbnRWYWx1ZSxcbiAgICBzdWJzY3JpYmUsXG4gICAgdmFsdWU6IGdldEN1cnJlbnRWYWx1ZSgpXG4gIH0pKTtcbiAgbGV0IHZhbHVlVG9SZXR1cm4gPSBzdGF0ZS52YWx1ZTtcbiAgaWYgKHN0YXRlLmdldEN1cnJlbnRWYWx1ZSAhPT0gZ2V0Q3VycmVudFZhbHVlIHx8IHN0YXRlLnN1YnNjcmliZSAhPT0gc3Vic2NyaWJlKSB7XG4gICAgdmFsdWVUb1JldHVybiA9IGdldEN1cnJlbnRWYWx1ZSgpO1xuICAgIHNldFN0YXRlKHtcbiAgICAgIGdldEN1cnJlbnRWYWx1ZSxcbiAgICAgIHN1YnNjcmliZSxcbiAgICAgIHZhbHVlOiB2YWx1ZVRvUmV0dXJuXG4gICAgfSk7XG4gIH1cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBsZXQgZGlkVW5zdWJzY3JpYmUgPSBmYWxzZTtcbiAgICBjb25zdCBjaGVja0ZvclVwZGF0ZXMgPSAoKSA9PiB7XG4gICAgICBpZiAoZGlkVW5zdWJzY3JpYmUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgc2V0U3RhdGUoKHByZXZTdGF0ZSkgPT4ge1xuICAgICAgICBpZiAocHJldlN0YXRlLmdldEN1cnJlbnRWYWx1ZSAhPT0gZ2V0Q3VycmVudFZhbHVlIHx8IHByZXZTdGF0ZS5zdWJzY3JpYmUgIT09IHN1YnNjcmliZSkge1xuICAgICAgICAgIHJldHVybiBwcmV2U3RhdGU7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgdmFsdWUgPSBnZXRDdXJyZW50VmFsdWUoKTtcbiAgICAgICAgaWYgKHByZXZTdGF0ZS52YWx1ZSA9PT0gdmFsdWUpIHtcbiAgICAgICAgICByZXR1cm4gcHJldlN0YXRlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7IC4uLnByZXZTdGF0ZSwgdmFsdWUgfTtcbiAgICAgIH0pO1xuICAgIH07XG4gICAgY29uc3QgdW5zdWJzY3JpYmUgPSBzdWJzY3JpYmUoY2hlY2tGb3JVcGRhdGVzKTtcbiAgICBjaGVja0ZvclVwZGF0ZXMoKTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgZGlkVW5zdWJzY3JpYmUgPSB0cnVlO1xuICAgICAgdW5zdWJzY3JpYmUoKTtcbiAgICB9O1xuICB9LCBbZ2V0Q3VycmVudFZhbHVlLCBzdWJzY3JpYmVdKTtcbiAgcmV0dXJuIHZhbHVlVG9SZXR1cm47XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11c2Vfc3Vic2NyaXB0aW9uLmpzLm1hcFxuIl0sIm5hbWVzIjpbInVzZUVmZmVjdCIsInVzZVN0YXRlIiwidXNlU3Vic2NyaXB0aW9uIiwiZ2V0Q3VycmVudFZhbHVlIiwic3Vic2NyaWJlIiwic3RhdGUiLCJzZXRTdGF0ZSIsInZhbHVlIiwidmFsdWVUb1JldHVybiIsImRpZFVuc3Vic2NyaWJlIiwiY2hlY2tGb3JVcGRhdGVzIiwicHJldlN0YXRlIiwidW5zdWJzY3JpYmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/use_subscription.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/api.js":
/*!****************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/api.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anyApi: () => (/* binding */ anyApi),\n/* harmony export */   filterApi: () => (/* binding */ filterApi),\n/* harmony export */   getFunctionName: () => (/* binding */ getFunctionName),\n/* harmony export */   justActions: () => (/* binding */ justActions),\n/* harmony export */   justInternal: () => (/* binding */ justInternal),\n/* harmony export */   justMutations: () => (/* binding */ justMutations),\n/* harmony export */   justPaginatedQueries: () => (/* binding */ justPaginatedQueries),\n/* harmony export */   justPublic: () => (/* binding */ justPublic),\n/* harmony export */   justQueries: () => (/* binding */ justQueries),\n/* harmony export */   justSchedulable: () => (/* binding */ justSchedulable),\n/* harmony export */   makeFunctionReference: () => (/* binding */ makeFunctionReference)\n/* harmony export */ });\n\nconst functionName = Symbol.for(\"functionName\");\nfunction getFunctionName(functionReference) {\n    if (typeof functionReference === \"string\") return functionReference;\n    const name = functionReference[functionName];\n    if (!name) {\n        throw new Error(`${functionReference} is not a functionReference`);\n    }\n    return name;\n}\nfunction makeFunctionReference(name) {\n    return {\n        [functionName]: name\n    };\n}\nfunction createApi(pathParts = []) {\n    const handler = {\n        get (_, prop) {\n            if (typeof prop === \"string\") {\n                const newParts = [\n                    ...pathParts,\n                    prop\n                ];\n                return createApi(newParts);\n            } else if (prop === functionName) {\n                if (pathParts.length < 2) {\n                    const found = [\n                        \"api\",\n                        ...pathParts\n                    ].join(\".\");\n                    throw new Error(`API path is expected to be of the form \\`api.moduleName.functionName\\`. Found: \\`${found}\\``);\n                }\n                const path = pathParts.slice(0, -1).join(\"/\");\n                const exportName = pathParts[pathParts.length - 1];\n                if (exportName === \"default\") {\n                    return path;\n                } else {\n                    return path + \":\" + exportName;\n                }\n            } else if (prop === Symbol.toStringTag) {\n                return \"FunctionReference\";\n            } else {\n                return void 0;\n            }\n        }\n    };\n    return new Proxy({}, handler);\n}\nfunction filterApi(api) {\n    return api;\n}\nfunction justInternal(api) {\n    return api;\n}\nfunction justPublic(api) {\n    return api;\n}\nfunction justQueries(api) {\n    return api;\n}\nfunction justMutations(api) {\n    return api;\n}\nfunction justActions(api) {\n    return api;\n}\nfunction justPaginatedQueries(api) {\n    return api;\n}\nfunction justSchedulable(api) {\n    return api;\n}\nconst anyApi = createApi(); //# sourceMappingURL=api.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9hcGkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBYTtBQUNiLE1BQU1BLGVBQWVDLE9BQU9DLEdBQUcsQ0FBQztBQUN6QixTQUFTQyxnQkFBZ0JDLGlCQUFpQjtJQUMvQyxJQUFJLE9BQU9BLHNCQUFzQixVQUMvQixPQUFPQTtJQUNULE1BQU1DLE9BQU9ELGlCQUFpQixDQUFDSixhQUFhO0lBQzVDLElBQUksQ0FBQ0ssTUFBTTtRQUNULE1BQU0sSUFBSUMsTUFBTSxDQUFDLEVBQUVGLGtCQUFrQiwyQkFBMkIsQ0FBQztJQUNuRTtJQUNBLE9BQU9DO0FBQ1Q7QUFDTyxTQUFTRSxzQkFBc0JGLElBQUk7SUFDeEMsT0FBTztRQUFFLENBQUNMLGFBQWEsRUFBRUs7SUFBSztBQUNoQztBQUNBLFNBQVNHLFVBQVVDLFlBQVksRUFBRTtJQUMvQixNQUFNQyxVQUFVO1FBQ2RDLEtBQUlDLENBQUMsRUFBRUMsSUFBSTtZQUNULElBQUksT0FBT0EsU0FBUyxVQUFVO2dCQUM1QixNQUFNQyxXQUFXO3VCQUFJTDtvQkFBV0k7aUJBQUs7Z0JBQ3JDLE9BQU9MLFVBQVVNO1lBQ25CLE9BQU8sSUFBSUQsU0FBU2IsY0FBYztnQkFDaEMsSUFBSVMsVUFBVU0sTUFBTSxHQUFHLEdBQUc7b0JBQ3hCLE1BQU1DLFFBQVE7d0JBQUM7MkJBQVVQO3FCQUFVLENBQUNRLElBQUksQ0FBQztvQkFDekMsTUFBTSxJQUFJWCxNQUNSLENBQUMsaUZBQWlGLEVBQUVVLE1BQU0sRUFBRSxDQUFDO2dCQUVqRztnQkFDQSxNQUFNRSxPQUFPVCxVQUFVVSxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUdGLElBQUksQ0FBQztnQkFDekMsTUFBTUcsYUFBYVgsU0FBUyxDQUFDQSxVQUFVTSxNQUFNLEdBQUcsRUFBRTtnQkFDbEQsSUFBSUssZUFBZSxXQUFXO29CQUM1QixPQUFPRjtnQkFDVCxPQUFPO29CQUNMLE9BQU9BLE9BQU8sTUFBTUU7Z0JBQ3RCO1lBQ0YsT0FBTyxJQUFJUCxTQUFTWixPQUFPb0IsV0FBVyxFQUFFO2dCQUN0QyxPQUFPO1lBQ1QsT0FBTztnQkFDTCxPQUFPLEtBQUs7WUFDZDtRQUNGO0lBQ0Y7SUFDQSxPQUFPLElBQUlDLE1BQU0sQ0FBQyxHQUFHWjtBQUN2QjtBQUNPLFNBQVNhLFVBQVVDLEdBQUc7SUFDM0IsT0FBT0E7QUFDVDtBQUNPLFNBQVNDLGFBQWFELEdBQUc7SUFDOUIsT0FBT0E7QUFDVDtBQUNPLFNBQVNFLFdBQVdGLEdBQUc7SUFDNUIsT0FBT0E7QUFDVDtBQUNPLFNBQVNHLFlBQVlILEdBQUc7SUFDN0IsT0FBT0E7QUFDVDtBQUNPLFNBQVNJLGNBQWNKLEdBQUc7SUFDL0IsT0FBT0E7QUFDVDtBQUNPLFNBQVNLLFlBQVlMLEdBQUc7SUFDN0IsT0FBT0E7QUFDVDtBQUNPLFNBQVNNLHFCQUFxQk4sR0FBRztJQUN0QyxPQUFPQTtBQUNUO0FBQ08sU0FBU08sZ0JBQWdCUCxHQUFHO0lBQ2pDLE9BQU9BO0FBQ1Q7QUFDTyxNQUFNUSxTQUFTeEIsWUFBWSxDQUNsQywrQkFBK0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9lcmFzb3JfY2xvbmUvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9hcGkuanM/NmMxYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmNvbnN0IGZ1bmN0aW9uTmFtZSA9IFN5bWJvbC5mb3IoXCJmdW5jdGlvbk5hbWVcIik7XG5leHBvcnQgZnVuY3Rpb24gZ2V0RnVuY3Rpb25OYW1lKGZ1bmN0aW9uUmVmZXJlbmNlKSB7XG4gIGlmICh0eXBlb2YgZnVuY3Rpb25SZWZlcmVuY2UgPT09IFwic3RyaW5nXCIpXG4gICAgcmV0dXJuIGZ1bmN0aW9uUmVmZXJlbmNlO1xuICBjb25zdCBuYW1lID0gZnVuY3Rpb25SZWZlcmVuY2VbZnVuY3Rpb25OYW1lXTtcbiAgaWYgKCFuYW1lKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGAke2Z1bmN0aW9uUmVmZXJlbmNlfSBpcyBub3QgYSBmdW5jdGlvblJlZmVyZW5jZWApO1xuICB9XG4gIHJldHVybiBuYW1lO1xufVxuZXhwb3J0IGZ1bmN0aW9uIG1ha2VGdW5jdGlvblJlZmVyZW5jZShuYW1lKSB7XG4gIHJldHVybiB7IFtmdW5jdGlvbk5hbWVdOiBuYW1lIH07XG59XG5mdW5jdGlvbiBjcmVhdGVBcGkocGF0aFBhcnRzID0gW10pIHtcbiAgY29uc3QgaGFuZGxlciA9IHtcbiAgICBnZXQoXywgcHJvcCkge1xuICAgICAgaWYgKHR5cGVvZiBwcm9wID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIGNvbnN0IG5ld1BhcnRzID0gWy4uLnBhdGhQYXJ0cywgcHJvcF07XG4gICAgICAgIHJldHVybiBjcmVhdGVBcGkobmV3UGFydHMpO1xuICAgICAgfSBlbHNlIGlmIChwcm9wID09PSBmdW5jdGlvbk5hbWUpIHtcbiAgICAgICAgaWYgKHBhdGhQYXJ0cy5sZW5ndGggPCAyKSB7XG4gICAgICAgICAgY29uc3QgZm91bmQgPSBbXCJhcGlcIiwgLi4ucGF0aFBhcnRzXS5qb2luKFwiLlwiKTtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgICBgQVBJIHBhdGggaXMgZXhwZWN0ZWQgdG8gYmUgb2YgdGhlIGZvcm0gXFxgYXBpLm1vZHVsZU5hbWUuZnVuY3Rpb25OYW1lXFxgLiBGb3VuZDogXFxgJHtmb3VuZH1cXGBgXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBwYXRoID0gcGF0aFBhcnRzLnNsaWNlKDAsIC0xKS5qb2luKFwiL1wiKTtcbiAgICAgICAgY29uc3QgZXhwb3J0TmFtZSA9IHBhdGhQYXJ0c1twYXRoUGFydHMubGVuZ3RoIC0gMV07XG4gICAgICAgIGlmIChleHBvcnROYW1lID09PSBcImRlZmF1bHRcIikge1xuICAgICAgICAgIHJldHVybiBwYXRoO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBwYXRoICsgXCI6XCIgKyBleHBvcnROYW1lO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKHByb3AgPT09IFN5bWJvbC50b1N0cmluZ1RhZykge1xuICAgICAgICByZXR1cm4gXCJGdW5jdGlvblJlZmVyZW5jZVwiO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHZvaWQgMDtcbiAgICAgIH1cbiAgICB9XG4gIH07XG4gIHJldHVybiBuZXcgUHJveHkoe30sIGhhbmRsZXIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGZpbHRlckFwaShhcGkpIHtcbiAgcmV0dXJuIGFwaTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBqdXN0SW50ZXJuYWwoYXBpKSB7XG4gIHJldHVybiBhcGk7XG59XG5leHBvcnQgZnVuY3Rpb24ganVzdFB1YmxpYyhhcGkpIHtcbiAgcmV0dXJuIGFwaTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBqdXN0UXVlcmllcyhhcGkpIHtcbiAgcmV0dXJuIGFwaTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBqdXN0TXV0YXRpb25zKGFwaSkge1xuICByZXR1cm4gYXBpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGp1c3RBY3Rpb25zKGFwaSkge1xuICByZXR1cm4gYXBpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGp1c3RQYWdpbmF0ZWRRdWVyaWVzKGFwaSkge1xuICByZXR1cm4gYXBpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGp1c3RTY2hlZHVsYWJsZShhcGkpIHtcbiAgcmV0dXJuIGFwaTtcbn1cbmV4cG9ydCBjb25zdCBhbnlBcGkgPSBjcmVhdGVBcGkoKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwaS5qcy5tYXBcbiJdLCJuYW1lcyI6WyJmdW5jdGlvbk5hbWUiLCJTeW1ib2wiLCJmb3IiLCJnZXRGdW5jdGlvbk5hbWUiLCJmdW5jdGlvblJlZmVyZW5jZSIsIm5hbWUiLCJFcnJvciIsIm1ha2VGdW5jdGlvblJlZmVyZW5jZSIsImNyZWF0ZUFwaSIsInBhdGhQYXJ0cyIsImhhbmRsZXIiLCJnZXQiLCJfIiwicHJvcCIsIm5ld1BhcnRzIiwibGVuZ3RoIiwiZm91bmQiLCJqb2luIiwicGF0aCIsInNsaWNlIiwiZXhwb3J0TmFtZSIsInRvU3RyaW5nVGFnIiwiUHJveHkiLCJmaWx0ZXJBcGkiLCJhcGkiLCJqdXN0SW50ZXJuYWwiLCJqdXN0UHVibGljIiwianVzdFF1ZXJpZXMiLCJqdXN0TXV0YXRpb25zIiwianVzdEFjdGlvbnMiLCJqdXN0UGFnaW5hdGVkUXVlcmllcyIsImp1c3RTY2hlZHVsYWJsZSIsImFueUFwaSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/cron.js":
/*!*****************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/cron.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Crons: () => (/* binding */ Crons),\n/* harmony export */   cronJobs: () => (/* binding */ cronJobs)\n/* harmony export */ });\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../server/api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/index.js */ \"(ssr)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n\n\n\n\nconst DAYS_OF_WEEK = [\n    \"sunday\",\n    \"monday\",\n    \"tuesday\",\n    \"wednesday\",\n    \"thursday\",\n    \"friday\",\n    \"saturday\"\n];\nconst cronJobs = ()=>new Crons();\nfunction validateIntervalNumber(n) {\n    if (!Number.isInteger(n) || n <= 0) {\n        throw new Error(\"Interval must be an integer greater than 0\");\n    }\n}\nfunction validatedDayOfMonth(n) {\n    if (!Number.isInteger(n) || n < 1 || n > 31) {\n        throw new Error(\"Day of month must be an integer from 1 to 31\");\n    }\n    return n;\n}\nfunction validatedDayOfWeek(s) {\n    if (typeof s !== \"string\" || !DAYS_OF_WEEK.includes(s)) {\n        throw new Error('Day of week must be a string like \"monday\".');\n    }\n    return s;\n}\nfunction validatedHourOfDay(n) {\n    if (!Number.isInteger(n) || n < 0 || n > 23) {\n        throw new Error(\"Hour of day must be an integer from 0 to 23\");\n    }\n    return n;\n}\nfunction validatedMinuteOfHour(n) {\n    if (!Number.isInteger(n) || n < 0 || n > 59) {\n        throw new Error(\"Minute of hour must be an integer from 0 to 59\");\n    }\n    return n;\n}\nfunction validatedCronString(s) {\n    return s;\n}\nfunction validatedCronIdentifier(s) {\n    if (!s.match(/^[ -~]*$/)) {\n        throw new Error(`Invalid cron identifier ${s}: use ASCII letters that are not control characters`);\n    }\n    return s;\n}\nclass Crons {\n    constructor(){\n        this.isCrons = true;\n        this.crons = {};\n    }\n    /** @internal */ schedule(cronIdentifier, schedule, functionReference, args) {\n        const cronArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args);\n        validatedCronIdentifier(cronIdentifier);\n        if (cronIdentifier in this.crons) {\n            throw new Error(`Cron identifier registered twice: ${cronIdentifier}`);\n        }\n        this.crons[cronIdentifier] = {\n            name: (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(functionReference),\n            args: [\n                (0,_values_index_js__WEBPACK_IMPORTED_MODULE_2__.convexToJson)(cronArgs)\n            ],\n            schedule\n        };\n    }\n    /**\n   * Schedule a mutation or action to run on an hourly basis.\n   *\n   * ```js\n   * crons.interval(\"Clear presence data\", {seconds: 30}, api.presence.clear);\n   * ```\n   *\n   * @param identifier - A unique name for this scheduled job.\n   * @param schedule - The time between runs for this scheduled job.\n   * @param functionReference - A {@link FunctionReference} for the function\n   * to schedule.\n   * @param args - The arguments to the function.\n   */ interval(cronIdentifier, schedule, functionReference, ...args) {\n        const s = schedule;\n        const hasSeconds = +(\"seconds\" in s && s.seconds !== void 0);\n        const hasMinutes = +(\"minutes\" in s && s.minutes !== void 0);\n        const hasHours = +(\"hours\" in s && s.hours !== void 0);\n        const total = hasSeconds + hasMinutes + hasHours;\n        if (total !== 1) {\n            throw new Error(\"Must specify one of seconds, minutes, or hours\");\n        }\n        if (hasSeconds) {\n            validateIntervalNumber(schedule.seconds);\n        } else if (hasMinutes) {\n            validateIntervalNumber(schedule.minutes);\n        } else if (hasHours) {\n            validateIntervalNumber(schedule.hours);\n        }\n        this.schedule(cronIdentifier, {\n            ...schedule,\n            type: \"interval\"\n        }, functionReference, ...args);\n    }\n    /**\n   * Schedule a mutation or action to run on a daily basis.\n   *\n   * ```js\n   * crons.daily(\n   *   \"Reset high scores\",\n   *   {\n   *     hourUTC: 17, // (9:30am Pacific/10:30am Daylight Savings Pacific)\n   *     minuteUTC: 30,\n   *   },\n   *   api.scores.reset\n   * )\n   * ```\n   *\n   * @param cronIdentifier - A unique name for this scheduled job.\n   * @param schedule - What time (UTC) each day to run this function.\n   * @param functionReference - A {@link FunctionReference} for the function\n   * to schedule.\n   * @param args - The arguments to the function.\n   */ hourly(cronIdentifier, schedule, functionReference, ...args) {\n        const minuteUTC = validatedMinuteOfHour(schedule.minuteUTC);\n        this.schedule(cronIdentifier, {\n            minuteUTC,\n            type: \"hourly\"\n        }, functionReference, ...args);\n    }\n    /**\n   * Schedule a mutation or action to run on a daily basis.\n   *\n   * ```js\n   * crons.daily(\n   *   \"Reset high scores\",\n   *   {\n   *     hourUTC: 17, // (9:30am Pacific/10:30am Daylight Savings Pacific)\n   *     minuteUTC: 30,\n   *   },\n   *   api.scores.reset\n   * )\n   * ```\n   *\n   * @param cronIdentifier - A unique name for this scheduled job.\n   * @param schedule - What time (UTC) each day to run this function.\n   * @param functionReference - A {@link FunctionReference} for the function\n   * to schedule.\n   * @param args - The arguments to the function.\n   */ daily(cronIdentifier, schedule, functionReference, ...args) {\n        const hourUTC = validatedHourOfDay(schedule.hourUTC);\n        const minuteUTC = validatedMinuteOfHour(schedule.minuteUTC);\n        this.schedule(cronIdentifier, {\n            hourUTC,\n            minuteUTC,\n            type: \"daily\"\n        }, functionReference, ...args);\n    }\n    /**\n   * Schedule a mutation or action to run on a weekly basis.\n   *\n   * ```js\n   * crons.weekly(\n   *   \"Weekly re-engagement email\",\n   *   {\n   *     hourUTC: 17, // (9:30am Pacific/10:30am Daylight Savings Pacific)\n   *     minuteUTC: 30,\n   *   },\n   *   api.emails.send\n   * )\n   * ```\n   *\n   * @param cronIdentifier - A unique name for this scheduled job.\n   * @param schedule - What day and time (UTC) each week to run this function.\n   * @param functionReference - A {@link FunctionReference} for the function\n   * to schedule.\n   */ weekly(cronIdentifier, schedule, functionReference, ...args) {\n        const dayOfWeek = validatedDayOfWeek(schedule.dayOfWeek);\n        const hourUTC = validatedHourOfDay(schedule.hourUTC);\n        const minuteUTC = validatedMinuteOfHour(schedule.minuteUTC);\n        this.schedule(cronIdentifier, {\n            dayOfWeek,\n            hourUTC,\n            minuteUTC,\n            type: \"weekly\"\n        }, functionReference, ...args);\n    }\n    /**\n   * Schedule a mutation or action to run on a monthly basis.\n   *\n   * Note that some months have fewer days than others, so e.g. a function\n   * scheduled to run on the 30th will not run in February.\n   *\n   * ```js\n   * crons.monthly(\n   *   \"Bill customers at \",\n   *   {\n   *     hourUTC: 17, // (9:30am Pacific/10:30am Daylight Savings Pacific)\n   *     minuteUTC: 30,\n   *     day: 1,\n   *   },\n   *   api.billing.billCustomers\n   * )\n   * ```\n   *\n   * @param cronIdentifier - A unique name for this scheduled job.\n   * @param schedule - What day and time (UTC) each month to run this function.\n   * @param functionReference - A {@link FunctionReference} for the function\n   * to schedule.\n   * @param args - The arguments to the function.\n   */ monthly(cronIdentifier, schedule, functionReference, ...args) {\n        const day = validatedDayOfMonth(schedule.day);\n        const hourUTC = validatedHourOfDay(schedule.hourUTC);\n        const minuteUTC = validatedMinuteOfHour(schedule.minuteUTC);\n        this.schedule(cronIdentifier, {\n            day,\n            hourUTC,\n            minuteUTC,\n            type: \"monthly\"\n        }, functionReference, ...args);\n    }\n    /**\n   * Schedule a mutation or action to run on a recurring basis.\n   *\n   * Like the unix command `cron`, Sunday is 0, Monday is 1, etc.\n   *\n   * ```\n   *  ┌─ minute (0 - 59)\n   *  │ ┌─ hour (0 - 23)\n   *  │ │ ┌─ day of the month (1 - 31)\n   *  │ │ │ ┌─ month (1 - 12)\n   *  │ │ │ │ ┌─ day of the week (0 - 6) (Sunday to Saturday)\n   * \"* * * * *\"\n   * ```\n   *\n   * @param cronIdentifier - A unique name for this scheduled job.\n   * @param cron - Cron string like `\"15 7 * * *\"` (Every day at 7:15 UTC)\n   * @param functionReference - A {@link FunctionReference} for the function\n   * to schedule.\n   * @param args - The arguments to the function.\n   */ cron(cronIdentifier, cron, functionReference, ...args) {\n        const c = validatedCronString(cron);\n        this.schedule(cronIdentifier, {\n            cron: c,\n            type: \"cron\"\n        }, functionReference, ...args);\n    }\n    /** @internal */ export() {\n        return JSON.stringify(this.crons);\n    }\n} //# sourceMappingURL=cron.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/cron.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/database.js":
/*!*********************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/database.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=database.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9kYXRhYmFzZS5qcyIsIm1hcHBpbmdzIjoiO0FBQWEsQ0FDYixvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9lcmFzb3JfY2xvbmUvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9kYXRhYmFzZS5qcz9jOWE3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YWJhc2UuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/database.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/filter_builder.js":
/*!***************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/filter_builder.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Expression: () => (/* binding */ Expression)\n/* harmony export */ });\n\nclass Expression {\n    /**\n   * @internal\n   */ constructor(){}\n} //# sourceMappingURL=filter_builder.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9maWx0ZXJfYnVpbGRlci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWE7QUFDTixNQUFNQTtJQUNYOztHQUVDLEdBQ0RDLGFBQWMsQ0FDZDtBQUNGLEVBQ0EsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXJhc29yX2Nsb25lLy4vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9zZXJ2ZXIvZmlsdGVyX2J1aWxkZXIuanM/YmMyZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmV4cG9ydCBjbGFzcyBFeHByZXNzaW9uIHtcbiAgLyoqXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cbiAgY29uc3RydWN0b3IoKSB7XG4gIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZpbHRlcl9idWlsZGVyLmpzLm1hcFxuIl0sIm5hbWVzIjpbIkV4cHJlc3Npb24iLCJjb25zdHJ1Y3RvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/filter_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/actions_impl.js":
/*!******************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/actions_impl.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setupActionCalls: () => (/* binding */ setupActionCalls)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/convex/dist/esm/index.js\");\n/* harmony import */ var _syscall_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./syscall.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/index.js */ \"(ssr)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../server/api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n\n\n\n\n\n\nfunction setupActionCalls(requestId) {\n    return {\n        runQuery: async (query, args)=>{\n            const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_4__.getFunctionName)(query);\n            const queryArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_3__.parseArgs)(args);\n            const syscallArgs = {\n                name,\n                args: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(queryArgs),\n                version: _index_js__WEBPACK_IMPORTED_MODULE_1__.version,\n                requestId\n            };\n            const result = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\"1.0/actions/query\", syscallArgs);\n            return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(result, false);\n        },\n        runMutation: async (mutation, args)=>{\n            const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_4__.getFunctionName)(mutation);\n            const mutationArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_3__.parseArgs)(args);\n            const syscallArgs = {\n                name,\n                args: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(mutationArgs),\n                version: _index_js__WEBPACK_IMPORTED_MODULE_1__.version,\n                requestId\n            };\n            const result = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\"1.0/actions/mutation\", syscallArgs);\n            return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(result, false);\n        },\n        runAction: async (action, args)=>{\n            const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_4__.getFunctionName)(action);\n            const actionArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_3__.parseArgs)(args);\n            const syscallArgs = {\n                name,\n                args: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(actionArgs),\n                version: _index_js__WEBPACK_IMPORTED_MODULE_1__.version,\n                requestId\n            };\n            const result = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\"1.0/actions/action\", syscallArgs);\n            return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(result, false);\n        }\n    };\n} //# sourceMappingURL=actions_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL2FjdGlvbnNfaW1wbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBYTtBQUNzRDtBQUMxQjtBQUNVO0FBQ0Q7QUFDSTtBQUMvQyxTQUFTTSxpQkFBaUJDLFNBQVM7SUFDeEMsT0FBTztRQUNMQyxVQUFVLE9BQU9DLE9BQU9DO1lBQ3RCLE1BQU1DLE9BQU9OLCtEQUFlQSxDQUFDSTtZQUM3QixNQUFNRyxZQUFZUiwyREFBU0EsQ0FBQ007WUFDNUIsTUFBTUcsY0FBYztnQkFDbEJGO2dCQUNBRCxNQUFNViw4REFBWUEsQ0FBQ1k7Z0JBQ25CVixPQUFPQSxnREFBQUE7Z0JBQ1BLO1lBQ0Y7WUFDQSxNQUFNTyxTQUFTLE1BQU1YLGdFQUFtQkEsQ0FDdEMscUJBQ0FVO1lBRUYsT0FBT1osOERBQVlBLENBQUNhLFFBQVE7UUFDOUI7UUFDQUMsYUFBYSxPQUFPQyxVQUFVTjtZQUM1QixNQUFNQyxPQUFPTiwrREFBZUEsQ0FBQ1c7WUFDN0IsTUFBTUMsZUFBZWIsMkRBQVNBLENBQUNNO1lBQy9CLE1BQU1HLGNBQWM7Z0JBQ2xCRjtnQkFDQUQsTUFBTVYsOERBQVlBLENBQUNpQjtnQkFDbkJmLE9BQU9BLGdEQUFBQTtnQkFDUEs7WUFDRjtZQUNBLE1BQU1PLFNBQVMsTUFBTVgsZ0VBQW1CQSxDQUN0Qyx3QkFDQVU7WUFFRixPQUFPWiw4REFBWUEsQ0FBQ2EsUUFBUTtRQUM5QjtRQUNBSSxXQUFXLE9BQU9DLFFBQVFUO1lBQ3hCLE1BQU1DLE9BQU9OLCtEQUFlQSxDQUFDYztZQUM3QixNQUFNQyxhQUFhaEIsMkRBQVNBLENBQUNNO1lBQzdCLE1BQU1HLGNBQWM7Z0JBQ2xCRjtnQkFDQUQsTUFBTVYsOERBQVlBLENBQUNvQjtnQkFDbkJsQixPQUFPQSxnREFBQUE7Z0JBQ1BLO1lBQ0Y7WUFDQSxNQUFNTyxTQUFTLE1BQU1YLGdFQUFtQkEsQ0FDdEMsc0JBQ0FVO1lBRUYsT0FBT1osOERBQVlBLENBQUNhLFFBQVE7UUFDOUI7SUFDRjtBQUNGLEVBQ0Esd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXJhc29yX2Nsb25lLy4vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9zZXJ2ZXIvaW1wbC9hY3Rpb25zX2ltcGwuanM/MDNjNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmltcG9ydCB7IGNvbnZleFRvSnNvbiwganNvblRvQ29udmV4IH0gZnJvbSBcIi4uLy4uL3ZhbHVlcy9pbmRleC5qc1wiO1xuaW1wb3J0IHsgdmVyc2lvbiB9IGZyb20gXCIuLi8uLi9pbmRleC5qc1wiO1xuaW1wb3J0IHsgcGVyZm9ybUFzeW5jU3lzY2FsbCB9IGZyb20gXCIuL3N5c2NhbGwuanNcIjtcbmltcG9ydCB7IHBhcnNlQXJncyB9IGZyb20gXCIuLi8uLi9jb21tb24vaW5kZXguanNcIjtcbmltcG9ydCB7IGdldEZ1bmN0aW9uTmFtZSB9IGZyb20gXCIuLi8uLi9zZXJ2ZXIvYXBpLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gc2V0dXBBY3Rpb25DYWxscyhyZXF1ZXN0SWQpIHtcbiAgcmV0dXJuIHtcbiAgICBydW5RdWVyeTogYXN5bmMgKHF1ZXJ5LCBhcmdzKSA9PiB7XG4gICAgICBjb25zdCBuYW1lID0gZ2V0RnVuY3Rpb25OYW1lKHF1ZXJ5KTtcbiAgICAgIGNvbnN0IHF1ZXJ5QXJncyA9IHBhcnNlQXJncyhhcmdzKTtcbiAgICAgIGNvbnN0IHN5c2NhbGxBcmdzID0ge1xuICAgICAgICBuYW1lLFxuICAgICAgICBhcmdzOiBjb252ZXhUb0pzb24ocXVlcnlBcmdzKSxcbiAgICAgICAgdmVyc2lvbixcbiAgICAgICAgcmVxdWVzdElkXG4gICAgICB9O1xuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcGVyZm9ybUFzeW5jU3lzY2FsbChcbiAgICAgICAgXCIxLjAvYWN0aW9ucy9xdWVyeVwiLFxuICAgICAgICBzeXNjYWxsQXJnc1xuICAgICAgKTtcbiAgICAgIHJldHVybiBqc29uVG9Db252ZXgocmVzdWx0LCBmYWxzZSk7XG4gICAgfSxcbiAgICBydW5NdXRhdGlvbjogYXN5bmMgKG11dGF0aW9uLCBhcmdzKSA9PiB7XG4gICAgICBjb25zdCBuYW1lID0gZ2V0RnVuY3Rpb25OYW1lKG11dGF0aW9uKTtcbiAgICAgIGNvbnN0IG11dGF0aW9uQXJncyA9IHBhcnNlQXJncyhhcmdzKTtcbiAgICAgIGNvbnN0IHN5c2NhbGxBcmdzID0ge1xuICAgICAgICBuYW1lLFxuICAgICAgICBhcmdzOiBjb252ZXhUb0pzb24obXV0YXRpb25BcmdzKSxcbiAgICAgICAgdmVyc2lvbixcbiAgICAgICAgcmVxdWVzdElkXG4gICAgICB9O1xuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcGVyZm9ybUFzeW5jU3lzY2FsbChcbiAgICAgICAgXCIxLjAvYWN0aW9ucy9tdXRhdGlvblwiLFxuICAgICAgICBzeXNjYWxsQXJnc1xuICAgICAgKTtcbiAgICAgIHJldHVybiBqc29uVG9Db252ZXgocmVzdWx0LCBmYWxzZSk7XG4gICAgfSxcbiAgICBydW5BY3Rpb246IGFzeW5jIChhY3Rpb24sIGFyZ3MpID0+IHtcbiAgICAgIGNvbnN0IG5hbWUgPSBnZXRGdW5jdGlvbk5hbWUoYWN0aW9uKTtcbiAgICAgIGNvbnN0IGFjdGlvbkFyZ3MgPSBwYXJzZUFyZ3MoYXJncyk7XG4gICAgICBjb25zdCBzeXNjYWxsQXJncyA9IHtcbiAgICAgICAgbmFtZSxcbiAgICAgICAgYXJnczogY29udmV4VG9Kc29uKGFjdGlvbkFyZ3MpLFxuICAgICAgICB2ZXJzaW9uLFxuICAgICAgICByZXF1ZXN0SWRcbiAgICAgIH07XG4gICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBwZXJmb3JtQXN5bmNTeXNjYWxsKFxuICAgICAgICBcIjEuMC9hY3Rpb25zL2FjdGlvblwiLFxuICAgICAgICBzeXNjYWxsQXJnc1xuICAgICAgKTtcbiAgICAgIHJldHVybiBqc29uVG9Db252ZXgocmVzdWx0LCBmYWxzZSk7XG4gICAgfVxuICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWN0aW9uc19pbXBsLmpzLm1hcFxuIl0sIm5hbWVzIjpbImNvbnZleFRvSnNvbiIsImpzb25Ub0NvbnZleCIsInZlcnNpb24iLCJwZXJmb3JtQXN5bmNTeXNjYWxsIiwicGFyc2VBcmdzIiwiZ2V0RnVuY3Rpb25OYW1lIiwic2V0dXBBY3Rpb25DYWxscyIsInJlcXVlc3RJZCIsInJ1blF1ZXJ5IiwicXVlcnkiLCJhcmdzIiwibmFtZSIsInF1ZXJ5QXJncyIsInN5c2NhbGxBcmdzIiwicmVzdWx0IiwicnVuTXV0YXRpb24iLCJtdXRhdGlvbiIsIm11dGF0aW9uQXJncyIsInJ1bkFjdGlvbiIsImFjdGlvbiIsImFjdGlvbkFyZ3MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/actions_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/authentication_impl.js":
/*!*************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/authentication_impl.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setupAuth: () => (/* binding */ setupAuth)\n/* harmony export */ });\n/* harmony import */ var _syscall_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./syscall.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n\n\nfunction setupAuth(requestId) {\n    return {\n        getUserIdentity: async ()=>{\n            return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_0__.performAsyncSyscall)(\"1.0/getUserIdentity\", {\n                requestId\n            });\n        }\n    };\n} //# sourceMappingURL=authentication_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL2F1dGhlbnRpY2F0aW9uX2ltcGwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBYTtBQUNzQztBQUM1QyxTQUFTQyxVQUFVQyxTQUFTO0lBQ2pDLE9BQU87UUFDTEMsaUJBQWlCO1lBQ2YsT0FBTyxNQUFNSCxnRUFBbUJBLENBQUMsdUJBQXVCO2dCQUN0REU7WUFDRjtRQUNGO0lBQ0Y7QUFDRixFQUNBLCtDQUErQyIsInNvdXJjZXMiOlsid2VicGFjazovL2VyYXNvcl9jbG9uZS8uL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vc2VydmVyL2ltcGwvYXV0aGVudGljYXRpb25faW1wbC5qcz82ODk0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuaW1wb3J0IHsgcGVyZm9ybUFzeW5jU3lzY2FsbCB9IGZyb20gXCIuL3N5c2NhbGwuanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBzZXR1cEF1dGgocmVxdWVzdElkKSB7XG4gIHJldHVybiB7XG4gICAgZ2V0VXNlcklkZW50aXR5OiBhc3luYyAoKSA9PiB7XG4gICAgICByZXR1cm4gYXdhaXQgcGVyZm9ybUFzeW5jU3lzY2FsbChcIjEuMC9nZXRVc2VySWRlbnRpdHlcIiwge1xuICAgICAgICByZXF1ZXN0SWRcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWF1dGhlbnRpY2F0aW9uX2ltcGwuanMubWFwXG4iXSwibmFtZXMiOlsicGVyZm9ybUFzeW5jU3lzY2FsbCIsInNldHVwQXV0aCIsInJlcXVlc3RJZCIsImdldFVzZXJJZGVudGl0eSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/authentication_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/database_impl.js":
/*!*******************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/database_impl.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setupReader: () => (/* binding */ setupReader),\n/* harmony export */   setupWriter: () => (/* binding */ setupWriter)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _syscall_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./syscall.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n/* harmony import */ var _query_impl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./query_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/query_impl.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./validate.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/validate.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/convex/dist/esm/index.js\");\n/* harmony import */ var _values_value_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../values/value.js */ \"(ssr)/./node_modules/convex/dist/esm/values/value.js\");\n\n\n\n\n\n\n\nfunction setupReader() {\n    const reader = (isSystem = false)=>{\n        return {\n            get: async (id)=>{\n                (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(id, 1, \"get\", \"id\");\n                if (typeof id !== \"string\") {\n                    throw new Error(`Invalid argument \\`id\\` for \\`db.get\\`, expected string but got '${typeof id}': ${id}`);\n                }\n                const args = {\n                    id: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(id),\n                    isSystem,\n                    version: _index_js__WEBPACK_IMPORTED_MODULE_4__.version\n                };\n                const syscallJSON = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/get\", args);\n                return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(syscallJSON, true);\n            },\n            query: (tableName)=>{\n                const accessingSystemTable = tableName.startsWith(\"_\");\n                if (accessingSystemTable !== isSystem) {\n                    throw new Error(`${accessingSystemTable ? \"System\" : \"User\"} tables can only be accessed from db.${isSystem ? \"\" : \"system.\"}query().`);\n                }\n                return new _query_impl_js__WEBPACK_IMPORTED_MODULE_2__.QueryInitializerImpl(tableName);\n            },\n            normalizeId: (tableName, id)=>{\n                (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(tableName, 1, \"normalizeId\", \"tableName\");\n                (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(id, 2, \"normalizeId\", \"id\");\n                const accessingSystemTable = tableName.startsWith(\"_\");\n                if (accessingSystemTable !== isSystem) {\n                    throw new Error(`${accessingSystemTable ? \"System\" : \"User\"} tables can only be accessed from db.${isSystem ? \"\" : \"system.\"}normalizeId().`);\n                }\n                const syscallJSON = (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performSyscall)(\"1.0/db/normalizeId\", {\n                    table: tableName,\n                    idString: id\n                });\n                const syscallResult = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(syscallJSON, false);\n                return syscallResult.id;\n            },\n            // We set the system reader on the next line\n            system: null\n        };\n    };\n    const { system: _, ...rest } = reader(true);\n    const r = reader();\n    r.system = rest;\n    return r;\n}\nfunction setupWriter() {\n    const reader = setupReader();\n    return {\n        get: reader.get,\n        query: reader.query,\n        normalizeId: reader.normalizeId,\n        system: reader.system,\n        insert: async (table, value)=>{\n            if (table.startsWith(\"_\")) {\n                throw new Error(\"System tables (prefixed with `_`) are read-only.\");\n            }\n            (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(table, 1, \"insert\", \"table\");\n            (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(value, 2, \"insert\", \"value\");\n            const syscallJSON = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/insert\", {\n                table,\n                value: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(value)\n            });\n            const syscallResult = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(syscallJSON, false);\n            return syscallResult._id;\n        },\n        patch: async (id, value)=>{\n            (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(id, 1, \"patch\", \"id\");\n            (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(value, 2, \"patch\", \"value\");\n            await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/shallowMerge\", {\n                id: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(id),\n                value: (0,_values_value_js__WEBPACK_IMPORTED_MODULE_5__.patchValueToJson)(value)\n            });\n        },\n        replace: async (id, value)=>{\n            (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(id, 1, \"replace\", \"id\");\n            (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(value, 2, \"replace\", \"value\");\n            await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/replace\", {\n                id: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(id),\n                value: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(value)\n            });\n        },\n        delete: async (id)=>{\n            (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(id, 1, \"delete\", \"id\");\n            await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/remove\", {\n                id: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(id)\n            });\n        }\n    };\n} //# sourceMappingURL=database_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/database_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/filter_builder_impl.js":
/*!*************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/filter_builder_impl.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ExpressionImpl: () => (/* binding */ ExpressionImpl),\n/* harmony export */   filterBuilderImpl: () => (/* binding */ filterBuilderImpl),\n/* harmony export */   serializeExpression: () => (/* binding */ serializeExpression)\n/* harmony export */ });\n/* harmony import */ var _values_value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/value.js */ \"(ssr)/./node_modules/convex/dist/esm/values/value.js\");\n/* harmony import */ var _filter_builder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../filter_builder.js */ \"(ssr)/./node_modules/convex/dist/esm/server/filter_builder.js\");\n\n\n\nclass ExpressionImpl extends _filter_builder_js__WEBPACK_IMPORTED_MODULE_1__.Expression {\n    constructor(inner){\n        super();\n        this.inner = inner;\n    }\n    serialize() {\n        return this.inner;\n    }\n}\nfunction serializeExpression(expr) {\n    if (expr instanceof ExpressionImpl) {\n        return expr.serialize();\n    } else {\n        return {\n            $literal: (0,_values_value_js__WEBPACK_IMPORTED_MODULE_0__.convexOrUndefinedToJson)(expr)\n        };\n    }\n}\nconst filterBuilderImpl = {\n    //  Comparisons  /////////////////////////////////////////////////////////////\n    eq (l, r) {\n        return new ExpressionImpl({\n            $eq: [\n                serializeExpression(l),\n                serializeExpression(r)\n            ]\n        });\n    },\n    neq (l, r) {\n        return new ExpressionImpl({\n            $neq: [\n                serializeExpression(l),\n                serializeExpression(r)\n            ]\n        });\n    },\n    lt (l, r) {\n        return new ExpressionImpl({\n            $lt: [\n                serializeExpression(l),\n                serializeExpression(r)\n            ]\n        });\n    },\n    lte (l, r) {\n        return new ExpressionImpl({\n            $lte: [\n                serializeExpression(l),\n                serializeExpression(r)\n            ]\n        });\n    },\n    gt (l, r) {\n        return new ExpressionImpl({\n            $gt: [\n                serializeExpression(l),\n                serializeExpression(r)\n            ]\n        });\n    },\n    gte (l, r) {\n        return new ExpressionImpl({\n            $gte: [\n                serializeExpression(l),\n                serializeExpression(r)\n            ]\n        });\n    },\n    //  Arithmetic  //////////////////////////////////////////////////////////////\n    add (l, r) {\n        return new ExpressionImpl({\n            $add: [\n                serializeExpression(l),\n                serializeExpression(r)\n            ]\n        });\n    },\n    sub (l, r) {\n        return new ExpressionImpl({\n            $sub: [\n                serializeExpression(l),\n                serializeExpression(r)\n            ]\n        });\n    },\n    mul (l, r) {\n        return new ExpressionImpl({\n            $mul: [\n                serializeExpression(l),\n                serializeExpression(r)\n            ]\n        });\n    },\n    div (l, r) {\n        return new ExpressionImpl({\n            $div: [\n                serializeExpression(l),\n                serializeExpression(r)\n            ]\n        });\n    },\n    mod (l, r) {\n        return new ExpressionImpl({\n            $mod: [\n                serializeExpression(l),\n                serializeExpression(r)\n            ]\n        });\n    },\n    neg (x) {\n        return new ExpressionImpl({\n            $neg: serializeExpression(x)\n        });\n    },\n    //  Logic  ///////////////////////////////////////////////////////////////////\n    and (...exprs) {\n        return new ExpressionImpl({\n            $and: exprs.map(serializeExpression)\n        });\n    },\n    or (...exprs) {\n        return new ExpressionImpl({\n            $or: exprs.map(serializeExpression)\n        });\n    },\n    not (x) {\n        return new ExpressionImpl({\n            $not: serializeExpression(x)\n        });\n    },\n    //  Other  ///////////////////////////////////////////////////////////////////\n    field (fieldPath) {\n        return new ExpressionImpl({\n            $field: fieldPath\n        });\n    }\n}; //# sourceMappingURL=filter_builder_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL2ZpbHRlcl9idWlsZGVyX2ltcGwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBYTtBQUNtRDtBQUdsQztBQUN2QixNQUFNRSx1QkFBdUJELDBEQUFVQTtJQUM1Q0UsWUFBWUMsS0FBSyxDQUFFO1FBQ2pCLEtBQUs7UUFDTCxJQUFJLENBQUNBLEtBQUssR0FBR0E7SUFDZjtJQUNBQyxZQUFZO1FBQ1YsT0FBTyxJQUFJLENBQUNELEtBQUs7SUFDbkI7QUFDRjtBQUNPLFNBQVNFLG9CQUFvQkMsSUFBSTtJQUN0QyxJQUFJQSxnQkFBZ0JMLGdCQUFnQjtRQUNsQyxPQUFPSyxLQUFLRixTQUFTO0lBQ3ZCLE9BQU87UUFDTCxPQUFPO1lBQUVHLFVBQVVSLHlFQUF1QkEsQ0FBQ087UUFBTTtJQUNuRDtBQUNGO0FBQ08sTUFBTUUsb0JBQW9CO0lBQy9CLDhFQUE4RTtJQUM5RUMsSUFBR0MsQ0FBQyxFQUFFQyxDQUFDO1FBQ0wsT0FBTyxJQUFJVixlQUFlO1lBQ3hCVyxLQUFLO2dCQUFDUCxvQkFBb0JLO2dCQUFJTCxvQkFBb0JNO2FBQUc7UUFDdkQ7SUFDRjtJQUNBRSxLQUFJSCxDQUFDLEVBQUVDLENBQUM7UUFDTixPQUFPLElBQUlWLGVBQWU7WUFDeEJhLE1BQU07Z0JBQUNULG9CQUFvQks7Z0JBQUlMLG9CQUFvQk07YUFBRztRQUN4RDtJQUNGO0lBQ0FJLElBQUdMLENBQUMsRUFBRUMsQ0FBQztRQUNMLE9BQU8sSUFBSVYsZUFBZTtZQUN4QmUsS0FBSztnQkFBQ1gsb0JBQW9CSztnQkFBSUwsb0JBQW9CTTthQUFHO1FBQ3ZEO0lBQ0Y7SUFDQU0sS0FBSVAsQ0FBQyxFQUFFQyxDQUFDO1FBQ04sT0FBTyxJQUFJVixlQUFlO1lBQ3hCaUIsTUFBTTtnQkFBQ2Isb0JBQW9CSztnQkFBSUwsb0JBQW9CTTthQUFHO1FBQ3hEO0lBQ0Y7SUFDQVEsSUFBR1QsQ0FBQyxFQUFFQyxDQUFDO1FBQ0wsT0FBTyxJQUFJVixlQUFlO1lBQ3hCbUIsS0FBSztnQkFBQ2Ysb0JBQW9CSztnQkFBSUwsb0JBQW9CTTthQUFHO1FBQ3ZEO0lBQ0Y7SUFDQVUsS0FBSVgsQ0FBQyxFQUFFQyxDQUFDO1FBQ04sT0FBTyxJQUFJVixlQUFlO1lBQ3hCcUIsTUFBTTtnQkFBQ2pCLG9CQUFvQks7Z0JBQUlMLG9CQUFvQk07YUFBRztRQUN4RDtJQUNGO0lBQ0EsOEVBQThFO0lBQzlFWSxLQUFJYixDQUFDLEVBQUVDLENBQUM7UUFDTixPQUFPLElBQUlWLGVBQWU7WUFDeEJ1QixNQUFNO2dCQUFDbkIsb0JBQW9CSztnQkFBSUwsb0JBQW9CTTthQUFHO1FBQ3hEO0lBQ0Y7SUFDQWMsS0FBSWYsQ0FBQyxFQUFFQyxDQUFDO1FBQ04sT0FBTyxJQUFJVixlQUFlO1lBQ3hCeUIsTUFBTTtnQkFBQ3JCLG9CQUFvQks7Z0JBQUlMLG9CQUFvQk07YUFBRztRQUN4RDtJQUNGO0lBQ0FnQixLQUFJakIsQ0FBQyxFQUFFQyxDQUFDO1FBQ04sT0FBTyxJQUFJVixlQUFlO1lBQ3hCMkIsTUFBTTtnQkFBQ3ZCLG9CQUFvQks7Z0JBQUlMLG9CQUFvQk07YUFBRztRQUN4RDtJQUNGO0lBQ0FrQixLQUFJbkIsQ0FBQyxFQUFFQyxDQUFDO1FBQ04sT0FBTyxJQUFJVixlQUFlO1lBQ3hCNkIsTUFBTTtnQkFBQ3pCLG9CQUFvQks7Z0JBQUlMLG9CQUFvQk07YUFBRztRQUN4RDtJQUNGO0lBQ0FvQixLQUFJckIsQ0FBQyxFQUFFQyxDQUFDO1FBQ04sT0FBTyxJQUFJVixlQUFlO1lBQ3hCK0IsTUFBTTtnQkFBQzNCLG9CQUFvQks7Z0JBQUlMLG9CQUFvQk07YUFBRztRQUN4RDtJQUNGO0lBQ0FzQixLQUFJQyxDQUFDO1FBQ0gsT0FBTyxJQUFJakMsZUFBZTtZQUFFa0MsTUFBTTlCLG9CQUFvQjZCO1FBQUc7SUFDM0Q7SUFDQSw4RUFBOEU7SUFDOUVFLEtBQUksR0FBR0MsS0FBSztRQUNWLE9BQU8sSUFBSXBDLGVBQWU7WUFBRXFDLE1BQU1ELE1BQU1FLEdBQUcsQ0FBQ2xDO1FBQXFCO0lBQ25FO0lBQ0FtQyxJQUFHLEdBQUdILEtBQUs7UUFDVCxPQUFPLElBQUlwQyxlQUFlO1lBQUV3QyxLQUFLSixNQUFNRSxHQUFHLENBQUNsQztRQUFxQjtJQUNsRTtJQUNBcUMsS0FBSVIsQ0FBQztRQUNILE9BQU8sSUFBSWpDLGVBQWU7WUFBRTBDLE1BQU10QyxvQkFBb0I2QjtRQUFHO0lBQzNEO0lBQ0EsOEVBQThFO0lBQzlFVSxPQUFNQyxTQUFTO1FBQ2IsT0FBTyxJQUFJNUMsZUFBZTtZQUFFNkMsUUFBUUQ7UUFBVTtJQUNoRDtBQUNGLEVBQUUsQ0FDRiwrQ0FBK0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9lcmFzb3JfY2xvbmUvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL2ZpbHRlcl9idWlsZGVyX2ltcGwuanM/ZGI2YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmltcG9ydCB7IGNvbnZleE9yVW5kZWZpbmVkVG9Kc29uIH0gZnJvbSBcIi4uLy4uL3ZhbHVlcy92YWx1ZS5qc1wiO1xuaW1wb3J0IHtcbiAgRXhwcmVzc2lvblxufSBmcm9tIFwiLi4vZmlsdGVyX2J1aWxkZXIuanNcIjtcbmV4cG9ydCBjbGFzcyBFeHByZXNzaW9uSW1wbCBleHRlbmRzIEV4cHJlc3Npb24ge1xuICBjb25zdHJ1Y3Rvcihpbm5lcikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5pbm5lciA9IGlubmVyO1xuICB9XG4gIHNlcmlhbGl6ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5pbm5lcjtcbiAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIHNlcmlhbGl6ZUV4cHJlc3Npb24oZXhwcikge1xuICBpZiAoZXhwciBpbnN0YW5jZW9mIEV4cHJlc3Npb25JbXBsKSB7XG4gICAgcmV0dXJuIGV4cHIuc2VyaWFsaXplKCk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHsgJGxpdGVyYWw6IGNvbnZleE9yVW5kZWZpbmVkVG9Kc29uKGV4cHIpIH07XG4gIH1cbn1cbmV4cG9ydCBjb25zdCBmaWx0ZXJCdWlsZGVySW1wbCA9IHtcbiAgLy8gIENvbXBhcmlzb25zICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4gIGVxKGwsIHIpIHtcbiAgICByZXR1cm4gbmV3IEV4cHJlc3Npb25JbXBsKHtcbiAgICAgICRlcTogW3NlcmlhbGl6ZUV4cHJlc3Npb24obCksIHNlcmlhbGl6ZUV4cHJlc3Npb24ocildXG4gICAgfSk7XG4gIH0sXG4gIG5lcShsLCByKSB7XG4gICAgcmV0dXJuIG5ldyBFeHByZXNzaW9uSW1wbCh7XG4gICAgICAkbmVxOiBbc2VyaWFsaXplRXhwcmVzc2lvbihsKSwgc2VyaWFsaXplRXhwcmVzc2lvbihyKV1cbiAgICB9KTtcbiAgfSxcbiAgbHQobCwgcikge1xuICAgIHJldHVybiBuZXcgRXhwcmVzc2lvbkltcGwoe1xuICAgICAgJGx0OiBbc2VyaWFsaXplRXhwcmVzc2lvbihsKSwgc2VyaWFsaXplRXhwcmVzc2lvbihyKV1cbiAgICB9KTtcbiAgfSxcbiAgbHRlKGwsIHIpIHtcbiAgICByZXR1cm4gbmV3IEV4cHJlc3Npb25JbXBsKHtcbiAgICAgICRsdGU6IFtzZXJpYWxpemVFeHByZXNzaW9uKGwpLCBzZXJpYWxpemVFeHByZXNzaW9uKHIpXVxuICAgIH0pO1xuICB9LFxuICBndChsLCByKSB7XG4gICAgcmV0dXJuIG5ldyBFeHByZXNzaW9uSW1wbCh7XG4gICAgICAkZ3Q6IFtzZXJpYWxpemVFeHByZXNzaW9uKGwpLCBzZXJpYWxpemVFeHByZXNzaW9uKHIpXVxuICAgIH0pO1xuICB9LFxuICBndGUobCwgcikge1xuICAgIHJldHVybiBuZXcgRXhwcmVzc2lvbkltcGwoe1xuICAgICAgJGd0ZTogW3NlcmlhbGl6ZUV4cHJlc3Npb24obCksIHNlcmlhbGl6ZUV4cHJlc3Npb24ocildXG4gICAgfSk7XG4gIH0sXG4gIC8vICBBcml0aG1ldGljICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuICBhZGQobCwgcikge1xuICAgIHJldHVybiBuZXcgRXhwcmVzc2lvbkltcGwoe1xuICAgICAgJGFkZDogW3NlcmlhbGl6ZUV4cHJlc3Npb24obCksIHNlcmlhbGl6ZUV4cHJlc3Npb24ocildXG4gICAgfSk7XG4gIH0sXG4gIHN1YihsLCByKSB7XG4gICAgcmV0dXJuIG5ldyBFeHByZXNzaW9uSW1wbCh7XG4gICAgICAkc3ViOiBbc2VyaWFsaXplRXhwcmVzc2lvbihsKSwgc2VyaWFsaXplRXhwcmVzc2lvbihyKV1cbiAgICB9KTtcbiAgfSxcbiAgbXVsKGwsIHIpIHtcbiAgICByZXR1cm4gbmV3IEV4cHJlc3Npb25JbXBsKHtcbiAgICAgICRtdWw6IFtzZXJpYWxpemVFeHByZXNzaW9uKGwpLCBzZXJpYWxpemVFeHByZXNzaW9uKHIpXVxuICAgIH0pO1xuICB9LFxuICBkaXYobCwgcikge1xuICAgIHJldHVybiBuZXcgRXhwcmVzc2lvbkltcGwoe1xuICAgICAgJGRpdjogW3NlcmlhbGl6ZUV4cHJlc3Npb24obCksIHNlcmlhbGl6ZUV4cHJlc3Npb24ocildXG4gICAgfSk7XG4gIH0sXG4gIG1vZChsLCByKSB7XG4gICAgcmV0dXJuIG5ldyBFeHByZXNzaW9uSW1wbCh7XG4gICAgICAkbW9kOiBbc2VyaWFsaXplRXhwcmVzc2lvbihsKSwgc2VyaWFsaXplRXhwcmVzc2lvbihyKV1cbiAgICB9KTtcbiAgfSxcbiAgbmVnKHgpIHtcbiAgICByZXR1cm4gbmV3IEV4cHJlc3Npb25JbXBsKHsgJG5lZzogc2VyaWFsaXplRXhwcmVzc2lvbih4KSB9KTtcbiAgfSxcbiAgLy8gIExvZ2ljICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4gIGFuZCguLi5leHBycykge1xuICAgIHJldHVybiBuZXcgRXhwcmVzc2lvbkltcGwoeyAkYW5kOiBleHBycy5tYXAoc2VyaWFsaXplRXhwcmVzc2lvbikgfSk7XG4gIH0sXG4gIG9yKC4uLmV4cHJzKSB7XG4gICAgcmV0dXJuIG5ldyBFeHByZXNzaW9uSW1wbCh7ICRvcjogZXhwcnMubWFwKHNlcmlhbGl6ZUV4cHJlc3Npb24pIH0pO1xuICB9LFxuICBub3QoeCkge1xuICAgIHJldHVybiBuZXcgRXhwcmVzc2lvbkltcGwoeyAkbm90OiBzZXJpYWxpemVFeHByZXNzaW9uKHgpIH0pO1xuICB9LFxuICAvLyAgT3RoZXIgIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiAgZmllbGQoZmllbGRQYXRoKSB7XG4gICAgcmV0dXJuIG5ldyBFeHByZXNzaW9uSW1wbCh7ICRmaWVsZDogZmllbGRQYXRoIH0pO1xuICB9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZmlsdGVyX2J1aWxkZXJfaW1wbC5qcy5tYXBcbiJdLCJuYW1lcyI6WyJjb252ZXhPclVuZGVmaW5lZFRvSnNvbiIsIkV4cHJlc3Npb24iLCJFeHByZXNzaW9uSW1wbCIsImNvbnN0cnVjdG9yIiwiaW5uZXIiLCJzZXJpYWxpemUiLCJzZXJpYWxpemVFeHByZXNzaW9uIiwiZXhwciIsIiRsaXRlcmFsIiwiZmlsdGVyQnVpbGRlckltcGwiLCJlcSIsImwiLCJyIiwiJGVxIiwibmVxIiwiJG5lcSIsImx0IiwiJGx0IiwibHRlIiwiJGx0ZSIsImd0IiwiJGd0IiwiZ3RlIiwiJGd0ZSIsImFkZCIsIiRhZGQiLCJzdWIiLCIkc3ViIiwibXVsIiwiJG11bCIsImRpdiIsIiRkaXYiLCJtb2QiLCIkbW9kIiwibmVnIiwieCIsIiRuZWciLCJhbmQiLCJleHBycyIsIiRhbmQiLCJtYXAiLCJvciIsIiRvciIsIm5vdCIsIiRub3QiLCJmaWVsZCIsImZpZWxkUGF0aCIsIiRmaWVsZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/filter_builder_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/index_range_builder_impl.js":
/*!******************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/index_range_builder_impl.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IndexRangeBuilderImpl: () => (/* binding */ IndexRangeBuilderImpl)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _values_value_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../values/value.js */ \"(ssr)/./node_modules/convex/dist/esm/values/value.js\");\n/* harmony import */ var _index_range_builder_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../index_range_builder.js */ \"(ssr)/./node_modules/convex/dist/esm/server/index_range_builder.js\");\n\n\n\n\nclass IndexRangeBuilderImpl extends _index_range_builder_js__WEBPACK_IMPORTED_MODULE_2__.IndexRange {\n    constructor(rangeExpressions){\n        super();\n        this.rangeExpressions = rangeExpressions;\n        this.isConsumed = false;\n    }\n    static new() {\n        return new IndexRangeBuilderImpl([]);\n    }\n    consume() {\n        if (this.isConsumed) {\n            throw new Error(\"IndexRangeBuilder has already been used! Chain your method calls like `q => q.eq(...).eq(...)`. See https://docs.convex.dev/using/indexes\");\n        }\n        this.isConsumed = true;\n    }\n    eq(fieldName, value) {\n        this.consume();\n        return new IndexRangeBuilderImpl(this.rangeExpressions.concat({\n            type: \"Eq\",\n            fieldPath: fieldName,\n            value: (0,_values_value_js__WEBPACK_IMPORTED_MODULE_1__.convexOrUndefinedToJson)(value)\n        }));\n    }\n    gt(fieldName, value) {\n        this.consume();\n        return new IndexRangeBuilderImpl(this.rangeExpressions.concat({\n            type: \"Gt\",\n            fieldPath: fieldName,\n            value: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(value)\n        }));\n    }\n    gte(fieldName, value) {\n        this.consume();\n        return new IndexRangeBuilderImpl(this.rangeExpressions.concat({\n            type: \"Gte\",\n            fieldPath: fieldName,\n            value: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(value)\n        }));\n    }\n    lt(fieldName, value) {\n        this.consume();\n        return new IndexRangeBuilderImpl(this.rangeExpressions.concat({\n            type: \"Lt\",\n            fieldPath: fieldName,\n            value: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(value)\n        }));\n    }\n    lte(fieldName, value) {\n        this.consume();\n        return new IndexRangeBuilderImpl(this.rangeExpressions.concat({\n            type: \"Lte\",\n            fieldPath: fieldName,\n            value: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(value)\n        }));\n    }\n    export() {\n        this.consume();\n        return this.rangeExpressions;\n    }\n} //# sourceMappingURL=index_range_builder_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL2luZGV4X3JhbmdlX2J1aWxkZXJfaW1wbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWE7QUFDd0M7QUFDVztBQUc3QjtBQUM1QixNQUFNRyw4QkFBOEJELCtEQUFVQTtJQUNuREUsWUFBWUMsZ0JBQWdCLENBQUU7UUFDNUIsS0FBSztRQUNMLElBQUksQ0FBQ0EsZ0JBQWdCLEdBQUdBO1FBQ3hCLElBQUksQ0FBQ0MsVUFBVSxHQUFHO0lBQ3BCO0lBQ0EsT0FBT0MsTUFBTTtRQUNYLE9BQU8sSUFBSUosc0JBQXNCLEVBQUU7SUFDckM7SUFDQUssVUFBVTtRQUNSLElBQUksSUFBSSxDQUFDRixVQUFVLEVBQUU7WUFDbkIsTUFBTSxJQUFJRyxNQUNSO1FBRUo7UUFDQSxJQUFJLENBQUNILFVBQVUsR0FBRztJQUNwQjtJQUNBSSxHQUFHQyxTQUFTLEVBQUVDLEtBQUssRUFBRTtRQUNuQixJQUFJLENBQUNKLE9BQU87UUFDWixPQUFPLElBQUlMLHNCQUNULElBQUksQ0FBQ0UsZ0JBQWdCLENBQUNRLE1BQU0sQ0FBQztZQUMzQkMsTUFBTTtZQUNOQyxXQUFXSjtZQUNYQyxPQUFPWCx5RUFBdUJBLENBQUNXO1FBQ2pDO0lBRUo7SUFDQUksR0FBR0wsU0FBUyxFQUFFQyxLQUFLLEVBQUU7UUFDbkIsSUFBSSxDQUFDSixPQUFPO1FBQ1osT0FBTyxJQUFJTCxzQkFDVCxJQUFJLENBQUNFLGdCQUFnQixDQUFDUSxNQUFNLENBQUM7WUFDM0JDLE1BQU07WUFDTkMsV0FBV0o7WUFDWEMsT0FBT1osOERBQVlBLENBQUNZO1FBQ3RCO0lBRUo7SUFDQUssSUFBSU4sU0FBUyxFQUFFQyxLQUFLLEVBQUU7UUFDcEIsSUFBSSxDQUFDSixPQUFPO1FBQ1osT0FBTyxJQUFJTCxzQkFDVCxJQUFJLENBQUNFLGdCQUFnQixDQUFDUSxNQUFNLENBQUM7WUFDM0JDLE1BQU07WUFDTkMsV0FBV0o7WUFDWEMsT0FBT1osOERBQVlBLENBQUNZO1FBQ3RCO0lBRUo7SUFDQU0sR0FBR1AsU0FBUyxFQUFFQyxLQUFLLEVBQUU7UUFDbkIsSUFBSSxDQUFDSixPQUFPO1FBQ1osT0FBTyxJQUFJTCxzQkFDVCxJQUFJLENBQUNFLGdCQUFnQixDQUFDUSxNQUFNLENBQUM7WUFDM0JDLE1BQU07WUFDTkMsV0FBV0o7WUFDWEMsT0FBT1osOERBQVlBLENBQUNZO1FBQ3RCO0lBRUo7SUFDQU8sSUFBSVIsU0FBUyxFQUFFQyxLQUFLLEVBQUU7UUFDcEIsSUFBSSxDQUFDSixPQUFPO1FBQ1osT0FBTyxJQUFJTCxzQkFDVCxJQUFJLENBQUNFLGdCQUFnQixDQUFDUSxNQUFNLENBQUM7WUFDM0JDLE1BQU07WUFDTkMsV0FBV0o7WUFDWEMsT0FBT1osOERBQVlBLENBQUNZO1FBQ3RCO0lBRUo7SUFDQVEsU0FBUztRQUNQLElBQUksQ0FBQ1osT0FBTztRQUNaLE9BQU8sSUFBSSxDQUFDSCxnQkFBZ0I7SUFDOUI7QUFDRixFQUNBLG9EQUFvRCIsInNvdXJjZXMiOlsid2VicGFjazovL2VyYXNvcl9jbG9uZS8uL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vc2VydmVyL2ltcGwvaW5kZXhfcmFuZ2VfYnVpbGRlcl9pbXBsLmpzPzE2ODciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5pbXBvcnQgeyBjb252ZXhUb0pzb24gfSBmcm9tIFwiLi4vLi4vdmFsdWVzL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBjb252ZXhPclVuZGVmaW5lZFRvSnNvbiB9IGZyb20gXCIuLi8uLi92YWx1ZXMvdmFsdWUuanNcIjtcbmltcG9ydCB7XG4gIEluZGV4UmFuZ2Vcbn0gZnJvbSBcIi4uL2luZGV4X3JhbmdlX2J1aWxkZXIuanNcIjtcbmV4cG9ydCBjbGFzcyBJbmRleFJhbmdlQnVpbGRlckltcGwgZXh0ZW5kcyBJbmRleFJhbmdlIHtcbiAgY29uc3RydWN0b3IocmFuZ2VFeHByZXNzaW9ucykge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5yYW5nZUV4cHJlc3Npb25zID0gcmFuZ2VFeHByZXNzaW9ucztcbiAgICB0aGlzLmlzQ29uc3VtZWQgPSBmYWxzZTtcbiAgfVxuICBzdGF0aWMgbmV3KCkge1xuICAgIHJldHVybiBuZXcgSW5kZXhSYW5nZUJ1aWxkZXJJbXBsKFtdKTtcbiAgfVxuICBjb25zdW1lKCkge1xuICAgIGlmICh0aGlzLmlzQ29uc3VtZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgXCJJbmRleFJhbmdlQnVpbGRlciBoYXMgYWxyZWFkeSBiZWVuIHVzZWQhIENoYWluIHlvdXIgbWV0aG9kIGNhbGxzIGxpa2UgYHEgPT4gcS5lcSguLi4pLmVxKC4uLilgLiBTZWUgaHR0cHM6Ly9kb2NzLmNvbnZleC5kZXYvdXNpbmcvaW5kZXhlc1wiXG4gICAgICApO1xuICAgIH1cbiAgICB0aGlzLmlzQ29uc3VtZWQgPSB0cnVlO1xuICB9XG4gIGVxKGZpZWxkTmFtZSwgdmFsdWUpIHtcbiAgICB0aGlzLmNvbnN1bWUoKTtcbiAgICByZXR1cm4gbmV3IEluZGV4UmFuZ2VCdWlsZGVySW1wbChcbiAgICAgIHRoaXMucmFuZ2VFeHByZXNzaW9ucy5jb25jYXQoe1xuICAgICAgICB0eXBlOiBcIkVxXCIsXG4gICAgICAgIGZpZWxkUGF0aDogZmllbGROYW1lLFxuICAgICAgICB2YWx1ZTogY29udmV4T3JVbmRlZmluZWRUb0pzb24odmFsdWUpXG4gICAgICB9KVxuICAgICk7XG4gIH1cbiAgZ3QoZmllbGROYW1lLCB2YWx1ZSkge1xuICAgIHRoaXMuY29uc3VtZSgpO1xuICAgIHJldHVybiBuZXcgSW5kZXhSYW5nZUJ1aWxkZXJJbXBsKFxuICAgICAgdGhpcy5yYW5nZUV4cHJlc3Npb25zLmNvbmNhdCh7XG4gICAgICAgIHR5cGU6IFwiR3RcIixcbiAgICAgICAgZmllbGRQYXRoOiBmaWVsZE5hbWUsXG4gICAgICAgIHZhbHVlOiBjb252ZXhUb0pzb24odmFsdWUpXG4gICAgICB9KVxuICAgICk7XG4gIH1cbiAgZ3RlKGZpZWxkTmFtZSwgdmFsdWUpIHtcbiAgICB0aGlzLmNvbnN1bWUoKTtcbiAgICByZXR1cm4gbmV3IEluZGV4UmFuZ2VCdWlsZGVySW1wbChcbiAgICAgIHRoaXMucmFuZ2VFeHByZXNzaW9ucy5jb25jYXQoe1xuICAgICAgICB0eXBlOiBcIkd0ZVwiLFxuICAgICAgICBmaWVsZFBhdGg6IGZpZWxkTmFtZSxcbiAgICAgICAgdmFsdWU6IGNvbnZleFRvSnNvbih2YWx1ZSlcbiAgICAgIH0pXG4gICAgKTtcbiAgfVxuICBsdChmaWVsZE5hbWUsIHZhbHVlKSB7XG4gICAgdGhpcy5jb25zdW1lKCk7XG4gICAgcmV0dXJuIG5ldyBJbmRleFJhbmdlQnVpbGRlckltcGwoXG4gICAgICB0aGlzLnJhbmdlRXhwcmVzc2lvbnMuY29uY2F0KHtcbiAgICAgICAgdHlwZTogXCJMdFwiLFxuICAgICAgICBmaWVsZFBhdGg6IGZpZWxkTmFtZSxcbiAgICAgICAgdmFsdWU6IGNvbnZleFRvSnNvbih2YWx1ZSlcbiAgICAgIH0pXG4gICAgKTtcbiAgfVxuICBsdGUoZmllbGROYW1lLCB2YWx1ZSkge1xuICAgIHRoaXMuY29uc3VtZSgpO1xuICAgIHJldHVybiBuZXcgSW5kZXhSYW5nZUJ1aWxkZXJJbXBsKFxuICAgICAgdGhpcy5yYW5nZUV4cHJlc3Npb25zLmNvbmNhdCh7XG4gICAgICAgIHR5cGU6IFwiTHRlXCIsXG4gICAgICAgIGZpZWxkUGF0aDogZmllbGROYW1lLFxuICAgICAgICB2YWx1ZTogY29udmV4VG9Kc29uKHZhbHVlKVxuICAgICAgfSlcbiAgICApO1xuICB9XG4gIGV4cG9ydCgpIHtcbiAgICB0aGlzLmNvbnN1bWUoKTtcbiAgICByZXR1cm4gdGhpcy5yYW5nZUV4cHJlc3Npb25zO1xuICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleF9yYW5nZV9idWlsZGVyX2ltcGwuanMubWFwXG4iXSwibmFtZXMiOlsiY29udmV4VG9Kc29uIiwiY29udmV4T3JVbmRlZmluZWRUb0pzb24iLCJJbmRleFJhbmdlIiwiSW5kZXhSYW5nZUJ1aWxkZXJJbXBsIiwiY29uc3RydWN0b3IiLCJyYW5nZUV4cHJlc3Npb25zIiwiaXNDb25zdW1lZCIsIm5ldyIsImNvbnN1bWUiLCJFcnJvciIsImVxIiwiZmllbGROYW1lIiwidmFsdWUiLCJjb25jYXQiLCJ0eXBlIiwiZmllbGRQYXRoIiwiZ3QiLCJndGUiLCJsdCIsImx0ZSIsImV4cG9ydCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/index_range_builder_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/query_impl.js":
/*!****************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/query_impl.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryImpl: () => (/* binding */ QueryImpl),\n/* harmony export */   QueryInitializerImpl: () => (/* binding */ QueryInitializerImpl)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _syscall_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./syscall.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n/* harmony import */ var _filter_builder_impl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./filter_builder_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/filter_builder_impl.js\");\n/* harmony import */ var _index_range_builder_impl_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./index_range_builder_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/index_range_builder_impl.js\");\n/* harmony import */ var _search_filter_builder_impl_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./search_filter_builder_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/search_filter_builder_impl.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./validate.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/validate.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/convex/dist/esm/index.js\");\n\n\n\n\n\n\n\n\nclass QueryInitializerImpl {\n    constructor(tableName){\n        this.tableName = tableName;\n    }\n    withIndex(indexName, indexRange) {\n        (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(indexName, 1, \"withIndex\", \"indexName\");\n        let rangeBuilder = _index_range_builder_impl_js__WEBPACK_IMPORTED_MODULE_3__.IndexRangeBuilderImpl.new();\n        if (indexRange !== void 0) {\n            rangeBuilder = indexRange(rangeBuilder);\n        }\n        return new QueryImpl({\n            source: {\n                type: \"IndexRange\",\n                indexName: this.tableName + \".\" + indexName,\n                range: rangeBuilder.export(),\n                order: null\n            },\n            operators: []\n        });\n    }\n    withSearchIndex(indexName, searchFilter) {\n        (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(indexName, 1, \"withSearchIndex\", \"indexName\");\n        (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(searchFilter, 2, \"withSearchIndex\", \"searchFilter\");\n        const searchFilterBuilder = _search_filter_builder_impl_js__WEBPACK_IMPORTED_MODULE_4__.SearchFilterBuilderImpl.new();\n        return new QueryImpl({\n            source: {\n                type: \"Search\",\n                indexName: this.tableName + \".\" + indexName,\n                filters: searchFilter(searchFilterBuilder).export()\n            },\n            operators: []\n        });\n    }\n    fullTableScan() {\n        return new QueryImpl({\n            source: {\n                type: \"FullTableScan\",\n                tableName: this.tableName,\n                order: null\n            },\n            operators: []\n        });\n    }\n    order(order) {\n        return this.fullTableScan().order(order);\n    }\n    // This is internal API and should not be exposed to developers yet.\n    async count() {\n        const syscallJSON = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/count\", {\n            table: this.tableName\n        });\n        const syscallResult = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(syscallJSON, false);\n        return syscallResult;\n    }\n    filter(predicate) {\n        return this.fullTableScan().filter(predicate);\n    }\n    limit(n) {\n        return this.fullTableScan().limit(n);\n    }\n    collect() {\n        return this.fullTableScan().collect();\n    }\n    take(n) {\n        return this.fullTableScan().take(n);\n    }\n    paginate(paginationOpts) {\n        return this.fullTableScan().paginate(paginationOpts);\n    }\n    first() {\n        return this.fullTableScan().first();\n    }\n    unique() {\n        return this.fullTableScan().unique();\n    }\n    [Symbol.asyncIterator]() {\n        return this.fullTableScan()[Symbol.asyncIterator]();\n    }\n}\nfunction throwClosedError(type) {\n    throw new Error(type === \"consumed\" ? \"This query is closed and can't emit any more values.\" : \"This query has been chained with another operator and can't be reused.\");\n}\nclass QueryImpl {\n    constructor(query){\n        this.state = {\n            type: \"preparing\",\n            query\n        };\n    }\n    takeQuery() {\n        if (this.state.type !== \"preparing\") {\n            throw new Error(\"A query can only be chained once and can't be chained after iteration begins.\");\n        }\n        const query = this.state.query;\n        this.state = {\n            type: \"closed\"\n        };\n        return query;\n    }\n    startQuery() {\n        if (this.state.type === \"executing\") {\n            throw new Error(\"Iteration can only begin on a query once.\");\n        }\n        if (this.state.type === \"closed\" || this.state.type === \"consumed\") {\n            throwClosedError(this.state.type);\n        }\n        const query = this.state.query;\n        const { queryId } = (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performSyscall)(\"1.0/queryStream\", {\n            query,\n            version: _index_js__WEBPACK_IMPORTED_MODULE_6__.version\n        });\n        this.state = {\n            type: \"executing\",\n            queryId\n        };\n        return queryId;\n    }\n    closeQuery() {\n        if (this.state.type === \"executing\") {\n            const queryId = this.state.queryId;\n            (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performSyscall)(\"1.0/queryCleanup\", {\n                queryId\n            });\n        }\n        this.state = {\n            type: \"consumed\"\n        };\n    }\n    order(order) {\n        (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(order, 1, \"order\", \"order\");\n        const query = this.takeQuery();\n        if (query.source.type === \"Search\") {\n            throw new Error(\"Search queries must always be in relevance order. Can not set order manually.\");\n        }\n        if (query.source.order !== null) {\n            throw new Error(\"Queries may only specify order at most once\");\n        }\n        query.source.order = order;\n        return new QueryImpl(query);\n    }\n    filter(predicate) {\n        (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(predicate, 1, \"filter\", \"predicate\");\n        const query = this.takeQuery();\n        query.operators.push({\n            filter: (0,_filter_builder_impl_js__WEBPACK_IMPORTED_MODULE_2__.serializeExpression)(predicate(_filter_builder_impl_js__WEBPACK_IMPORTED_MODULE_2__.filterBuilderImpl))\n        });\n        return new QueryImpl(query);\n    }\n    limit(n) {\n        (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(n, 1, \"limit\", \"n\");\n        const query = this.takeQuery();\n        query.operators.push({\n            limit: n\n        });\n        return new QueryImpl(query);\n    }\n    [Symbol.asyncIterator]() {\n        this.startQuery();\n        return this;\n    }\n    async next() {\n        if (this.state.type === \"closed\" || this.state.type === \"consumed\") {\n            throwClosedError(this.state.type);\n        }\n        const queryId = this.state.type === \"preparing\" ? this.startQuery() : this.state.queryId;\n        const { value, done } = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/queryStreamNext\", {\n            queryId\n        });\n        if (done) {\n            this.closeQuery();\n        }\n        const convexValue = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(value, true);\n        return {\n            value: convexValue,\n            done\n        };\n    }\n    return() {\n        this.closeQuery();\n        return Promise.resolve({\n            done: true,\n            value: void 0\n        });\n    }\n    async paginate(paginationOpts) {\n        (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(paginationOpts, 1, \"paginate\", \"options\");\n        if (typeof paginationOpts?.numItems !== \"number\" || paginationOpts.numItems < 0) {\n            throw new Error(`\\`options.numItems\\` must be a positive number. Received \\`${paginationOpts?.numItems}\\`.`);\n        }\n        const query = this.takeQuery();\n        const pageSize = paginationOpts.numItems;\n        const cursor = paginationOpts.cursor;\n        const endCursor = paginationOpts?.endCursor ?? null;\n        const maximumRowsRead = paginationOpts.maximumRowsRead ?? null;\n        const { page, isDone, continueCursor, splitCursor, pageStatus } = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/queryPage\", {\n            query,\n            cursor,\n            endCursor,\n            pageSize,\n            maximumRowsRead,\n            maximumBytesRead: paginationOpts.maximumBytesRead,\n            version: _index_js__WEBPACK_IMPORTED_MODULE_6__.version\n        });\n        return {\n            page: page.map((json)=>(0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(json, true)),\n            isDone,\n            continueCursor,\n            splitCursor,\n            pageStatus\n        };\n    }\n    async collect() {\n        const out = [];\n        for await (const item of this){\n            out.push(item);\n        }\n        return out;\n    }\n    async take(n) {\n        (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(n, 1, \"take\", \"n\");\n        return this.limit(n).collect();\n    }\n    async first() {\n        const first_array = await this.take(1);\n        return first_array.length === 0 ? null : first_array[0];\n    }\n    async unique() {\n        const first_two_array = await this.take(2);\n        if (first_two_array.length === 0) {\n            return null;\n        }\n        if (first_two_array.length === 2) {\n            throw new Error(\"unique() query returned more than one result\");\n        }\n        return first_two_array[0];\n    }\n} //# sourceMappingURL=query_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/query_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/registration_impl.js":
/*!***********************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/registration_impl.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   actionGeneric: () => (/* binding */ actionGeneric),\n/* harmony export */   httpActionGeneric: () => (/* binding */ httpActionGeneric),\n/* harmony export */   internalActionGeneric: () => (/* binding */ internalActionGeneric),\n/* harmony export */   internalMutationGeneric: () => (/* binding */ internalMutationGeneric),\n/* harmony export */   internalQueryGeneric: () => (/* binding */ internalQueryGeneric),\n/* harmony export */   mutationGeneric: () => (/* binding */ mutationGeneric),\n/* harmony export */   queryGeneric: () => (/* binding */ queryGeneric)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _actions_impl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./actions_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/actions_impl.js\");\n/* harmony import */ var _vector_search_impl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vector_search_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/vector_search_impl.js\");\n/* harmony import */ var _authentication_impl_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./authentication_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/authentication_impl.js\");\n/* harmony import */ var _database_impl_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./database_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/database_impl.js\");\n/* harmony import */ var _query_impl_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./query_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/query_impl.js\");\n/* harmony import */ var _scheduler_impl_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./scheduler_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/scheduler_impl.js\");\n/* harmony import */ var _storage_impl_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./storage_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/storage_impl.js\");\n\n\n\n\n\n\n\n\n\nasync function invokeMutation(func, argsStr) {\n    const requestId = \"\";\n    const args = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(JSON.parse(argsStr), false);\n    const mutationCtx = {\n        db: (0,_database_impl_js__WEBPACK_IMPORTED_MODULE_4__.setupWriter)(),\n        auth: (0,_authentication_impl_js__WEBPACK_IMPORTED_MODULE_3__.setupAuth)(requestId),\n        storage: (0,_storage_impl_js__WEBPACK_IMPORTED_MODULE_7__.setupStorageWriter)(requestId),\n        scheduler: (0,_scheduler_impl_js__WEBPACK_IMPORTED_MODULE_6__.setupMutationScheduler)()\n    };\n    const result = await invokeFunction(func, mutationCtx, args);\n    validateReturnValue(result);\n    return JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(result === void 0 ? null : result));\n}\nfunction validateReturnValue(v2) {\n    if (v2 instanceof _query_impl_js__WEBPACK_IMPORTED_MODULE_5__.QueryInitializerImpl || v2 instanceof _query_impl_js__WEBPACK_IMPORTED_MODULE_5__.QueryImpl) {\n        throw new Error(\"Return value is a Query. Results must be retrieved with `.collect()`, `.take(n), `.unique()`, or `.first()`.\");\n    }\n}\nasync function invokeFunction(func, ctx, args) {\n    let result;\n    try {\n        result = await Promise.resolve(func(ctx, ...args));\n    } catch (thrown) {\n        throw serializeConvexErrorData(thrown);\n    }\n    return result;\n}\nfunction serializeConvexErrorData(thrown) {\n    if (typeof thrown === \"object\" && thrown !== null && Symbol.for(\"ConvexError\") in thrown) {\n        const error = thrown;\n        error.data = JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(error.data === void 0 ? null : error.data));\n        error.ConvexErrorSymbol = Symbol.for(\"ConvexError\");\n        return error;\n    } else {\n        return thrown;\n    }\n}\nfunction assertNotBrowser() {\n    if (true) {\n        return;\n    }\n    const isRealBrowser = Object.getOwnPropertyDescriptor(globalThis, \"window\")?.get?.toString().includes(\"[native code]\") ?? false;\n    if (isRealBrowser) {\n        throw new Error(\"Convex functions should not be imported in the browser.\");\n    }\n}\nfunction exportArgs(functionDefinition) {\n    return ()=>{\n        let args = _values_index_js__WEBPACK_IMPORTED_MODULE_0__.v.any();\n        if (typeof functionDefinition === \"object\" && functionDefinition.args !== void 0) {\n            args = _values_index_js__WEBPACK_IMPORTED_MODULE_0__.v.object(functionDefinition.args);\n        }\n        return JSON.stringify(args.json);\n    };\n}\nconst mutationGeneric = (functionDefinition)=>{\n    const func = typeof functionDefinition === \"function\" ? functionDefinition : functionDefinition.handler;\n    if (func.isRegistered) {\n        throw new Error(\"Function registered twice \" + func);\n    }\n    assertNotBrowser();\n    func.isRegistered = true;\n    func.isMutation = true;\n    func.isPublic = true;\n    func.invokeMutation = (argsStr)=>invokeMutation(func, argsStr);\n    func.exportArgs = exportArgs(functionDefinition);\n    return func;\n};\nconst internalMutationGeneric = (functionDefinition)=>{\n    const func = typeof functionDefinition === \"function\" ? functionDefinition : functionDefinition.handler;\n    if (func.isRegistered) {\n        throw new Error(\"Function registered twice \" + func);\n    }\n    assertNotBrowser();\n    func.isRegistered = true;\n    func.isMutation = true;\n    func.isInternal = true;\n    func.invokeMutation = (argsStr)=>invokeMutation(func, argsStr);\n    func.exportArgs = exportArgs(functionDefinition);\n    return func;\n};\nasync function invokeQuery(func, argsStr, allowMapsAndSetsInReturnValue) {\n    const requestId = \"\";\n    const args = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(JSON.parse(argsStr), false);\n    const queryCtx = {\n        db: (0,_database_impl_js__WEBPACK_IMPORTED_MODULE_4__.setupReader)(),\n        auth: (0,_authentication_impl_js__WEBPACK_IMPORTED_MODULE_3__.setupAuth)(requestId),\n        storage: (0,_storage_impl_js__WEBPACK_IMPORTED_MODULE_7__.setupStorageReader)(requestId)\n    };\n    const result = await invokeFunction(func, queryCtx, args);\n    validateReturnValue(result);\n    return JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(result === void 0 ? null : result, allowMapsAndSetsInReturnValue));\n}\nconst queryGeneric = (functionDefinition)=>{\n    const func = typeof functionDefinition === \"function\" ? functionDefinition : functionDefinition.handler;\n    if (func.isRegistered) {\n        throw new Error(\"Function registered twice \" + func);\n    }\n    assertNotBrowser();\n    func.isRegistered = true;\n    func.isQuery = true;\n    func.isPublic = true;\n    func.invokeQuery = (argsStr, allowMapsAndSetsInReturnValue)=>invokeQuery(func, argsStr, allowMapsAndSetsInReturnValue);\n    func.exportArgs = exportArgs(functionDefinition);\n    return func;\n};\nconst internalQueryGeneric = (functionDefinition)=>{\n    const func = typeof functionDefinition === \"function\" ? functionDefinition : functionDefinition.handler;\n    if (func.isRegistered) {\n        throw new Error(\"Function registered twice \" + func);\n    }\n    assertNotBrowser();\n    func.isRegistered = true;\n    func.isQuery = true;\n    func.isInternal = true;\n    func.invokeQuery = (argsStr)=>invokeQuery(func, argsStr, false);\n    func.exportArgs = exportArgs(functionDefinition);\n    return func;\n};\nasync function invokeAction(func, requestId, argsStr) {\n    const args = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(JSON.parse(argsStr), false);\n    const calls = (0,_actions_impl_js__WEBPACK_IMPORTED_MODULE_1__.setupActionCalls)(requestId);\n    const ctx = {\n        ...calls,\n        auth: (0,_authentication_impl_js__WEBPACK_IMPORTED_MODULE_3__.setupAuth)(requestId),\n        scheduler: (0,_scheduler_impl_js__WEBPACK_IMPORTED_MODULE_6__.setupActionScheduler)(requestId),\n        storage: (0,_storage_impl_js__WEBPACK_IMPORTED_MODULE_7__.setupStorageActionWriter)(requestId),\n        vectorSearch: (0,_vector_search_impl_js__WEBPACK_IMPORTED_MODULE_2__.setupActionVectorSearch)(requestId)\n    };\n    const result = await invokeFunction(func, ctx, args);\n    return JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(result === void 0 ? null : result));\n}\nconst actionGeneric = (functionDefinition)=>{\n    const func = typeof functionDefinition === \"function\" ? functionDefinition : functionDefinition.handler;\n    if (func.isRegistered) {\n        throw new Error(\"Function registered twice \" + func);\n    }\n    assertNotBrowser();\n    func.isRegistered = true;\n    func.isAction = true;\n    func.isPublic = true;\n    func.invokeAction = (requestId, argsStr)=>invokeAction(func, requestId, argsStr);\n    func.exportArgs = exportArgs(functionDefinition);\n    return func;\n};\nconst internalActionGeneric = (functionDefinition)=>{\n    const func = typeof functionDefinition === \"function\" ? functionDefinition : functionDefinition.handler;\n    if (func.isRegistered) {\n        throw new Error(\"Function registered twice \" + func);\n    }\n    assertNotBrowser();\n    func.isRegistered = true;\n    func.isAction = true;\n    func.isInternal = true;\n    func.invokeAction = (requestId, argsStr)=>invokeAction(func, requestId, argsStr);\n    func.exportArgs = exportArgs(functionDefinition);\n    return func;\n};\nasync function invokeHttpAction(func, request) {\n    const requestId = \"\";\n    const calls = (0,_actions_impl_js__WEBPACK_IMPORTED_MODULE_1__.setupActionCalls)(requestId);\n    const ctx = {\n        ...calls,\n        auth: (0,_authentication_impl_js__WEBPACK_IMPORTED_MODULE_3__.setupAuth)(requestId),\n        storage: (0,_storage_impl_js__WEBPACK_IMPORTED_MODULE_7__.setupStorageActionWriter)(requestId),\n        scheduler: (0,_scheduler_impl_js__WEBPACK_IMPORTED_MODULE_6__.setupActionScheduler)(requestId),\n        vectorSearch: (0,_vector_search_impl_js__WEBPACK_IMPORTED_MODULE_2__.setupActionVectorSearch)(requestId)\n    };\n    return await invokeFunction(func, ctx, [\n        request\n    ]);\n}\nconst httpActionGeneric = (func)=>{\n    const q = func;\n    if (q.isRegistered) {\n        throw new Error(\"Function registered twice \" + func);\n    }\n    assertNotBrowser();\n    q.isRegistered = true;\n    q.isHttp = true;\n    q.invokeHttpAction = (request)=>invokeHttpAction(func, request);\n    return q;\n}; //# sourceMappingURL=registration_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/registration_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/scheduler_impl.js":
/*!********************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/scheduler_impl.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setupActionScheduler: () => (/* binding */ setupActionScheduler),\n/* harmony export */   setupMutationScheduler: () => (/* binding */ setupMutationScheduler)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/convex/dist/esm/index.js\");\n/* harmony import */ var _syscall_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./syscall.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/index.js */ \"(ssr)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../server/api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./validate.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/validate.js\");\n\n\n\n\n\n\n\nfunction setupMutationScheduler() {\n    return {\n        runAfter: async (delayMs, functionReference, args)=>{\n            const syscallArgs = runAfterSyscallArgs(delayMs, functionReference, args);\n            return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\"1.0/schedule\", syscallArgs);\n        },\n        runAt: async (ms_since_epoch_or_date, functionReference, args)=>{\n            const syscallArgs = runAtSyscallArgs(ms_since_epoch_or_date, functionReference, args);\n            return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\"1.0/schedule\", syscallArgs);\n        },\n        cancel: async (id)=>{\n            (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(id, 1, \"cancel\", \"id\");\n            const args = {\n                id: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(id)\n            };\n            await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\"1.0/cancel_job\", args);\n        }\n    };\n}\nfunction setupActionScheduler(requestId) {\n    return {\n        runAfter: async (delayMs, functionReference, args)=>{\n            const syscallArgs = {\n                requestId,\n                ...runAfterSyscallArgs(delayMs, functionReference, args)\n            };\n            return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\"1.0/actions/schedule\", syscallArgs);\n        },\n        runAt: async (ms_since_epoch_or_date, functionReference, args)=>{\n            const syscallArgs = {\n                requestId,\n                ...runAtSyscallArgs(ms_since_epoch_or_date, functionReference, args)\n            };\n            return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\"1.0/actions/schedule\", syscallArgs);\n        },\n        cancel: async (id)=>{\n            (0,_validate_js__WEBPACK_IMPORTED_MODULE_5__.validateArg)(id, 1, \"cancel\", \"id\");\n            const syscallArgs = {\n                id: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(id)\n            };\n            return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_2__.performAsyncSyscall)(\"1.0/actions/cancel_job\", syscallArgs);\n        }\n    };\n}\nfunction runAfterSyscallArgs(delayMs, functionReference, args) {\n    if (typeof delayMs !== \"number\") {\n        throw new Error(\"`delayMs` must be a number\");\n    }\n    if (!isFinite(delayMs)) {\n        throw new Error(\"`delayMs` must be a finite number\");\n    }\n    if (delayMs < 0) {\n        throw new Error(\"`delayMs` must be non-negative\");\n    }\n    const functionArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_3__.parseArgs)(args);\n    const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_4__.getFunctionName)(functionReference);\n    const ts = (Date.now() + delayMs) / 1e3;\n    return {\n        name,\n        ts,\n        args: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(functionArgs),\n        version: _index_js__WEBPACK_IMPORTED_MODULE_1__.version\n    };\n}\nfunction runAtSyscallArgs(ms_since_epoch_or_date, functionReference, args) {\n    let ts;\n    if (ms_since_epoch_or_date instanceof Date) {\n        ts = ms_since_epoch_or_date.valueOf() / 1e3;\n    } else if (typeof ms_since_epoch_or_date === \"number\") {\n        ts = ms_since_epoch_or_date / 1e3;\n    } else {\n        throw new Error(\"The invoke time must a Date or a timestamp\");\n    }\n    const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_4__.getFunctionName)(functionReference);\n    const functionArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_3__.parseArgs)(args);\n    return {\n        name,\n        ts,\n        args: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(functionArgs),\n        version: _index_js__WEBPACK_IMPORTED_MODULE_1__.version\n    };\n} //# sourceMappingURL=scheduler_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL3NjaGVkdWxlcl9pbXBsLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQWE7QUFDd0M7QUFDWjtBQUNVO0FBQ0Q7QUFDSTtBQUNWO0FBQ3JDLFNBQVNNO0lBQ2QsT0FBTztRQUNMQyxVQUFVLE9BQU9DLFNBQVNDLG1CQUFtQkM7WUFDM0MsTUFBTUMsY0FBY0Msb0JBQW9CSixTQUFTQyxtQkFBbUJDO1lBQ3BFLE9BQU8sTUFBTVIsZ0VBQW1CQSxDQUFDLGdCQUFnQlM7UUFDbkQ7UUFDQUUsT0FBTyxPQUFPQyx3QkFBd0JMLG1CQUFtQkM7WUFDdkQsTUFBTUMsY0FBY0ksaUJBQ2xCRCx3QkFDQUwsbUJBQ0FDO1lBRUYsT0FBTyxNQUFNUixnRUFBbUJBLENBQUMsZ0JBQWdCUztRQUNuRDtRQUNBSyxRQUFRLE9BQU9DO1lBQ2JaLHlEQUFXQSxDQUFDWSxJQUFJLEdBQUcsVUFBVTtZQUM3QixNQUFNUCxPQUFPO2dCQUFFTyxJQUFJakIsOERBQVlBLENBQUNpQjtZQUFJO1lBQ3BDLE1BQU1mLGdFQUFtQkEsQ0FBQyxrQkFBa0JRO1FBQzlDO0lBQ0Y7QUFDRjtBQUNPLFNBQVNRLHFCQUFxQkMsU0FBUztJQUM1QyxPQUFPO1FBQ0xaLFVBQVUsT0FBT0MsU0FBU0MsbUJBQW1CQztZQUMzQyxNQUFNQyxjQUFjO2dCQUNsQlE7Z0JBQ0EsR0FBR1Asb0JBQW9CSixTQUFTQyxtQkFBbUJDLEtBQUs7WUFDMUQ7WUFDQSxPQUFPLE1BQU1SLGdFQUFtQkEsQ0FBQyx3QkFBd0JTO1FBQzNEO1FBQ0FFLE9BQU8sT0FBT0Msd0JBQXdCTCxtQkFBbUJDO1lBQ3ZELE1BQU1DLGNBQWM7Z0JBQ2xCUTtnQkFDQSxHQUFHSixpQkFBaUJELHdCQUF3QkwsbUJBQW1CQyxLQUFLO1lBQ3RFO1lBQ0EsT0FBTyxNQUFNUixnRUFBbUJBLENBQUMsd0JBQXdCUztRQUMzRDtRQUNBSyxRQUFRLE9BQU9DO1lBQ2JaLHlEQUFXQSxDQUFDWSxJQUFJLEdBQUcsVUFBVTtZQUM3QixNQUFNTixjQUFjO2dCQUFFTSxJQUFJakIsOERBQVlBLENBQUNpQjtZQUFJO1lBQzNDLE9BQU8sTUFBTWYsZ0VBQW1CQSxDQUFDLDBCQUEwQlM7UUFDN0Q7SUFDRjtBQUNGO0FBQ0EsU0FBU0Msb0JBQW9CSixPQUFPLEVBQUVDLGlCQUFpQixFQUFFQyxJQUFJO0lBQzNELElBQUksT0FBT0YsWUFBWSxVQUFVO1FBQy9CLE1BQU0sSUFBSVksTUFBTTtJQUNsQjtJQUNBLElBQUksQ0FBQ0MsU0FBU2IsVUFBVTtRQUN0QixNQUFNLElBQUlZLE1BQU07SUFDbEI7SUFDQSxJQUFJWixVQUFVLEdBQUc7UUFDZixNQUFNLElBQUlZLE1BQU07SUFDbEI7SUFDQSxNQUFNRSxlQUFlbkIsMkRBQVNBLENBQUNPO0lBQy9CLE1BQU1hLE9BQU9uQiwrREFBZUEsQ0FBQ0s7SUFDN0IsTUFBTWUsS0FBSyxDQUFDQyxLQUFLQyxHQUFHLEtBQUtsQixPQUFNLElBQUs7SUFDcEMsT0FBTztRQUNMZTtRQUNBQztRQUNBZCxNQUFNViw4REFBWUEsQ0FBQ3NCO1FBQ25CckIsT0FBT0EsZ0RBQUFBO0lBQ1Q7QUFDRjtBQUNBLFNBQVNjLGlCQUFpQkQsc0JBQXNCLEVBQUVMLGlCQUFpQixFQUFFQyxJQUFJO0lBQ3ZFLElBQUljO0lBQ0osSUFBSVYsa0NBQWtDVyxNQUFNO1FBQzFDRCxLQUFLVix1QkFBdUJhLE9BQU8sS0FBSztJQUMxQyxPQUFPLElBQUksT0FBT2IsMkJBQTJCLFVBQVU7UUFDckRVLEtBQUtWLHlCQUF5QjtJQUNoQyxPQUFPO1FBQ0wsTUFBTSxJQUFJTSxNQUFNO0lBQ2xCO0lBQ0EsTUFBTUcsT0FBT25CLCtEQUFlQSxDQUFDSztJQUM3QixNQUFNYSxlQUFlbkIsMkRBQVNBLENBQUNPO0lBQy9CLE9BQU87UUFDTGE7UUFDQUM7UUFDQWQsTUFBTVYsOERBQVlBLENBQUNzQjtRQUNuQnJCLE9BQU9BLGdEQUFBQTtJQUNUO0FBQ0YsRUFDQSwwQ0FBMEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9lcmFzb3JfY2xvbmUvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL3NjaGVkdWxlcl9pbXBsLmpzP2VjNTUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5pbXBvcnQgeyBjb252ZXhUb0pzb24gfSBmcm9tIFwiLi4vLi4vdmFsdWVzL2luZGV4LmpzXCI7XG5pbXBvcnQgeyB2ZXJzaW9uIH0gZnJvbSBcIi4uLy4uL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBwZXJmb3JtQXN5bmNTeXNjYWxsIH0gZnJvbSBcIi4vc3lzY2FsbC5qc1wiO1xuaW1wb3J0IHsgcGFyc2VBcmdzIH0gZnJvbSBcIi4uLy4uL2NvbW1vbi9pbmRleC5qc1wiO1xuaW1wb3J0IHsgZ2V0RnVuY3Rpb25OYW1lIH0gZnJvbSBcIi4uLy4uL3NlcnZlci9hcGkuanNcIjtcbmltcG9ydCB7IHZhbGlkYXRlQXJnIH0gZnJvbSBcIi4vdmFsaWRhdGUuanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBzZXR1cE11dGF0aW9uU2NoZWR1bGVyKCkge1xuICByZXR1cm4ge1xuICAgIHJ1bkFmdGVyOiBhc3luYyAoZGVsYXlNcywgZnVuY3Rpb25SZWZlcmVuY2UsIGFyZ3MpID0+IHtcbiAgICAgIGNvbnN0IHN5c2NhbGxBcmdzID0gcnVuQWZ0ZXJTeXNjYWxsQXJncyhkZWxheU1zLCBmdW5jdGlvblJlZmVyZW5jZSwgYXJncyk7XG4gICAgICByZXR1cm4gYXdhaXQgcGVyZm9ybUFzeW5jU3lzY2FsbChcIjEuMC9zY2hlZHVsZVwiLCBzeXNjYWxsQXJncyk7XG4gICAgfSxcbiAgICBydW5BdDogYXN5bmMgKG1zX3NpbmNlX2Vwb2NoX29yX2RhdGUsIGZ1bmN0aW9uUmVmZXJlbmNlLCBhcmdzKSA9PiB7XG4gICAgICBjb25zdCBzeXNjYWxsQXJncyA9IHJ1bkF0U3lzY2FsbEFyZ3MoXG4gICAgICAgIG1zX3NpbmNlX2Vwb2NoX29yX2RhdGUsXG4gICAgICAgIGZ1bmN0aW9uUmVmZXJlbmNlLFxuICAgICAgICBhcmdzXG4gICAgICApO1xuICAgICAgcmV0dXJuIGF3YWl0IHBlcmZvcm1Bc3luY1N5c2NhbGwoXCIxLjAvc2NoZWR1bGVcIiwgc3lzY2FsbEFyZ3MpO1xuICAgIH0sXG4gICAgY2FuY2VsOiBhc3luYyAoaWQpID0+IHtcbiAgICAgIHZhbGlkYXRlQXJnKGlkLCAxLCBcImNhbmNlbFwiLCBcImlkXCIpO1xuICAgICAgY29uc3QgYXJncyA9IHsgaWQ6IGNvbnZleFRvSnNvbihpZCkgfTtcbiAgICAgIGF3YWl0IHBlcmZvcm1Bc3luY1N5c2NhbGwoXCIxLjAvY2FuY2VsX2pvYlwiLCBhcmdzKTtcbiAgICB9XG4gIH07XG59XG5leHBvcnQgZnVuY3Rpb24gc2V0dXBBY3Rpb25TY2hlZHVsZXIocmVxdWVzdElkKSB7XG4gIHJldHVybiB7XG4gICAgcnVuQWZ0ZXI6IGFzeW5jIChkZWxheU1zLCBmdW5jdGlvblJlZmVyZW5jZSwgYXJncykgPT4ge1xuICAgICAgY29uc3Qgc3lzY2FsbEFyZ3MgPSB7XG4gICAgICAgIHJlcXVlc3RJZCxcbiAgICAgICAgLi4ucnVuQWZ0ZXJTeXNjYWxsQXJncyhkZWxheU1zLCBmdW5jdGlvblJlZmVyZW5jZSwgYXJncylcbiAgICAgIH07XG4gICAgICByZXR1cm4gYXdhaXQgcGVyZm9ybUFzeW5jU3lzY2FsbChcIjEuMC9hY3Rpb25zL3NjaGVkdWxlXCIsIHN5c2NhbGxBcmdzKTtcbiAgICB9LFxuICAgIHJ1bkF0OiBhc3luYyAobXNfc2luY2VfZXBvY2hfb3JfZGF0ZSwgZnVuY3Rpb25SZWZlcmVuY2UsIGFyZ3MpID0+IHtcbiAgICAgIGNvbnN0IHN5c2NhbGxBcmdzID0ge1xuICAgICAgICByZXF1ZXN0SWQsXG4gICAgICAgIC4uLnJ1bkF0U3lzY2FsbEFyZ3MobXNfc2luY2VfZXBvY2hfb3JfZGF0ZSwgZnVuY3Rpb25SZWZlcmVuY2UsIGFyZ3MpXG4gICAgICB9O1xuICAgICAgcmV0dXJuIGF3YWl0IHBlcmZvcm1Bc3luY1N5c2NhbGwoXCIxLjAvYWN0aW9ucy9zY2hlZHVsZVwiLCBzeXNjYWxsQXJncyk7XG4gICAgfSxcbiAgICBjYW5jZWw6IGFzeW5jIChpZCkgPT4ge1xuICAgICAgdmFsaWRhdGVBcmcoaWQsIDEsIFwiY2FuY2VsXCIsIFwiaWRcIik7XG4gICAgICBjb25zdCBzeXNjYWxsQXJncyA9IHsgaWQ6IGNvbnZleFRvSnNvbihpZCkgfTtcbiAgICAgIHJldHVybiBhd2FpdCBwZXJmb3JtQXN5bmNTeXNjYWxsKFwiMS4wL2FjdGlvbnMvY2FuY2VsX2pvYlwiLCBzeXNjYWxsQXJncyk7XG4gICAgfVxuICB9O1xufVxuZnVuY3Rpb24gcnVuQWZ0ZXJTeXNjYWxsQXJncyhkZWxheU1zLCBmdW5jdGlvblJlZmVyZW5jZSwgYXJncykge1xuICBpZiAodHlwZW9mIGRlbGF5TXMgIT09IFwibnVtYmVyXCIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJgZGVsYXlNc2AgbXVzdCBiZSBhIG51bWJlclwiKTtcbiAgfVxuICBpZiAoIWlzRmluaXRlKGRlbGF5TXMpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiYGRlbGF5TXNgIG11c3QgYmUgYSBmaW5pdGUgbnVtYmVyXCIpO1xuICB9XG4gIGlmIChkZWxheU1zIDwgMCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcImBkZWxheU1zYCBtdXN0IGJlIG5vbi1uZWdhdGl2ZVwiKTtcbiAgfVxuICBjb25zdCBmdW5jdGlvbkFyZ3MgPSBwYXJzZUFyZ3MoYXJncyk7XG4gIGNvbnN0IG5hbWUgPSBnZXRGdW5jdGlvbk5hbWUoZnVuY3Rpb25SZWZlcmVuY2UpO1xuICBjb25zdCB0cyA9IChEYXRlLm5vdygpICsgZGVsYXlNcykgLyAxZTM7XG4gIHJldHVybiB7XG4gICAgbmFtZSxcbiAgICB0cyxcbiAgICBhcmdzOiBjb252ZXhUb0pzb24oZnVuY3Rpb25BcmdzKSxcbiAgICB2ZXJzaW9uXG4gIH07XG59XG5mdW5jdGlvbiBydW5BdFN5c2NhbGxBcmdzKG1zX3NpbmNlX2Vwb2NoX29yX2RhdGUsIGZ1bmN0aW9uUmVmZXJlbmNlLCBhcmdzKSB7XG4gIGxldCB0cztcbiAgaWYgKG1zX3NpbmNlX2Vwb2NoX29yX2RhdGUgaW5zdGFuY2VvZiBEYXRlKSB7XG4gICAgdHMgPSBtc19zaW5jZV9lcG9jaF9vcl9kYXRlLnZhbHVlT2YoKSAvIDFlMztcbiAgfSBlbHNlIGlmICh0eXBlb2YgbXNfc2luY2VfZXBvY2hfb3JfZGF0ZSA9PT0gXCJudW1iZXJcIikge1xuICAgIHRzID0gbXNfc2luY2VfZXBvY2hfb3JfZGF0ZSAvIDFlMztcbiAgfSBlbHNlIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJUaGUgaW52b2tlIHRpbWUgbXVzdCBhIERhdGUgb3IgYSB0aW1lc3RhbXBcIik7XG4gIH1cbiAgY29uc3QgbmFtZSA9IGdldEZ1bmN0aW9uTmFtZShmdW5jdGlvblJlZmVyZW5jZSk7XG4gIGNvbnN0IGZ1bmN0aW9uQXJncyA9IHBhcnNlQXJncyhhcmdzKTtcbiAgcmV0dXJuIHtcbiAgICBuYW1lLFxuICAgIHRzLFxuICAgIGFyZ3M6IGNvbnZleFRvSnNvbihmdW5jdGlvbkFyZ3MpLFxuICAgIHZlcnNpb25cbiAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNjaGVkdWxlcl9pbXBsLmpzLm1hcFxuIl0sIm5hbWVzIjpbImNvbnZleFRvSnNvbiIsInZlcnNpb24iLCJwZXJmb3JtQXN5bmNTeXNjYWxsIiwicGFyc2VBcmdzIiwiZ2V0RnVuY3Rpb25OYW1lIiwidmFsaWRhdGVBcmciLCJzZXR1cE11dGF0aW9uU2NoZWR1bGVyIiwicnVuQWZ0ZXIiLCJkZWxheU1zIiwiZnVuY3Rpb25SZWZlcmVuY2UiLCJhcmdzIiwic3lzY2FsbEFyZ3MiLCJydW5BZnRlclN5c2NhbGxBcmdzIiwicnVuQXQiLCJtc19zaW5jZV9lcG9jaF9vcl9kYXRlIiwicnVuQXRTeXNjYWxsQXJncyIsImNhbmNlbCIsImlkIiwic2V0dXBBY3Rpb25TY2hlZHVsZXIiLCJyZXF1ZXN0SWQiLCJFcnJvciIsImlzRmluaXRlIiwiZnVuY3Rpb25BcmdzIiwibmFtZSIsInRzIiwiRGF0ZSIsIm5vdyIsInZhbHVlT2YiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/scheduler_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/search_filter_builder_impl.js":
/*!********************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/search_filter_builder_impl.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SearchFilterBuilderImpl: () => (/* binding */ SearchFilterBuilderImpl)\n/* harmony export */ });\n/* harmony import */ var _values_value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/value.js */ \"(ssr)/./node_modules/convex/dist/esm/values/value.js\");\n/* harmony import */ var _search_filter_builder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../search_filter_builder.js */ \"(ssr)/./node_modules/convex/dist/esm/server/search_filter_builder.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./validate.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/validate.js\");\n\n\n\n\nclass SearchFilterBuilderImpl extends _search_filter_builder_js__WEBPACK_IMPORTED_MODULE_1__.SearchFilter {\n    constructor(filters){\n        super();\n        this.filters = filters;\n        this.isConsumed = false;\n    }\n    static new() {\n        return new SearchFilterBuilderImpl([]);\n    }\n    consume() {\n        if (this.isConsumed) {\n            throw new Error(\"SearchFilterBuilder has already been used! Chain your method calls like `q => q.search(...).eq(...)`.\");\n        }\n        this.isConsumed = true;\n    }\n    search(fieldName, query) {\n        (0,_validate_js__WEBPACK_IMPORTED_MODULE_2__.validateArg)(fieldName, 1, \"search\", \"fieldName\");\n        (0,_validate_js__WEBPACK_IMPORTED_MODULE_2__.validateArg)(query, 2, \"search\", \"query\");\n        this.consume();\n        return new SearchFilterBuilderImpl(this.filters.concat({\n            type: \"Search\",\n            fieldPath: fieldName,\n            value: query\n        }));\n    }\n    eq(fieldName, value) {\n        (0,_validate_js__WEBPACK_IMPORTED_MODULE_2__.validateArg)(fieldName, 1, \"eq\", \"fieldName\");\n        if (arguments.length !== 2) {\n            (0,_validate_js__WEBPACK_IMPORTED_MODULE_2__.validateArg)(value, 2, \"search\", \"value\");\n        }\n        this.consume();\n        return new SearchFilterBuilderImpl(this.filters.concat({\n            type: \"Eq\",\n            fieldPath: fieldName,\n            value: (0,_values_value_js__WEBPACK_IMPORTED_MODULE_0__.convexOrUndefinedToJson)(value)\n        }));\n    }\n    export() {\n        this.consume();\n        return this.filters;\n    }\n} //# sourceMappingURL=search_filter_builder_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL3NlYXJjaF9maWx0ZXJfYnVpbGRlcl9pbXBsLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBYTtBQUNtRDtBQUczQjtBQUNPO0FBQ3JDLE1BQU1HLGdDQUFnQ0YsbUVBQVlBO0lBQ3ZERyxZQUFZQyxPQUFPLENBQUU7UUFDbkIsS0FBSztRQUNMLElBQUksQ0FBQ0EsT0FBTyxHQUFHQTtRQUNmLElBQUksQ0FBQ0MsVUFBVSxHQUFHO0lBQ3BCO0lBQ0EsT0FBT0MsTUFBTTtRQUNYLE9BQU8sSUFBSUosd0JBQXdCLEVBQUU7SUFDdkM7SUFDQUssVUFBVTtRQUNSLElBQUksSUFBSSxDQUFDRixVQUFVLEVBQUU7WUFDbkIsTUFBTSxJQUFJRyxNQUNSO1FBRUo7UUFDQSxJQUFJLENBQUNILFVBQVUsR0FBRztJQUNwQjtJQUNBSSxPQUFPQyxTQUFTLEVBQUVDLEtBQUssRUFBRTtRQUN2QlYseURBQVdBLENBQUNTLFdBQVcsR0FBRyxVQUFVO1FBQ3BDVCx5REFBV0EsQ0FBQ1UsT0FBTyxHQUFHLFVBQVU7UUFDaEMsSUFBSSxDQUFDSixPQUFPO1FBQ1osT0FBTyxJQUFJTCx3QkFDVCxJQUFJLENBQUNFLE9BQU8sQ0FBQ1EsTUFBTSxDQUFDO1lBQ2xCQyxNQUFNO1lBQ05DLFdBQVdKO1lBQ1hLLE9BQU9KO1FBQ1Q7SUFFSjtJQUNBSyxHQUFHTixTQUFTLEVBQUVLLEtBQUssRUFBRTtRQUNuQmQseURBQVdBLENBQUNTLFdBQVcsR0FBRyxNQUFNO1FBQ2hDLElBQUlPLFVBQVVDLE1BQU0sS0FBSyxHQUFHO1lBQzFCakIseURBQVdBLENBQUNjLE9BQU8sR0FBRyxVQUFVO1FBQ2xDO1FBQ0EsSUFBSSxDQUFDUixPQUFPO1FBQ1osT0FBTyxJQUFJTCx3QkFDVCxJQUFJLENBQUNFLE9BQU8sQ0FBQ1EsTUFBTSxDQUFDO1lBQ2xCQyxNQUFNO1lBQ05DLFdBQVdKO1lBQ1hLLE9BQU9oQix5RUFBdUJBLENBQUNnQjtRQUNqQztJQUVKO0lBQ0FJLFNBQVM7UUFDUCxJQUFJLENBQUNaLE9BQU87UUFDWixPQUFPLElBQUksQ0FBQ0gsT0FBTztJQUNyQjtBQUNGLEVBQ0Esc0RBQXNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXJhc29yX2Nsb25lLy4vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9zZXJ2ZXIvaW1wbC9zZWFyY2hfZmlsdGVyX2J1aWxkZXJfaW1wbC5qcz80ODI1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuaW1wb3J0IHsgY29udmV4T3JVbmRlZmluZWRUb0pzb24gfSBmcm9tIFwiLi4vLi4vdmFsdWVzL3ZhbHVlLmpzXCI7XG5pbXBvcnQge1xuICBTZWFyY2hGaWx0ZXJcbn0gZnJvbSBcIi4uL3NlYXJjaF9maWx0ZXJfYnVpbGRlci5qc1wiO1xuaW1wb3J0IHsgdmFsaWRhdGVBcmcgfSBmcm9tIFwiLi92YWxpZGF0ZS5qc1wiO1xuZXhwb3J0IGNsYXNzIFNlYXJjaEZpbHRlckJ1aWxkZXJJbXBsIGV4dGVuZHMgU2VhcmNoRmlsdGVyIHtcbiAgY29uc3RydWN0b3IoZmlsdGVycykge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5maWx0ZXJzID0gZmlsdGVycztcbiAgICB0aGlzLmlzQ29uc3VtZWQgPSBmYWxzZTtcbiAgfVxuICBzdGF0aWMgbmV3KCkge1xuICAgIHJldHVybiBuZXcgU2VhcmNoRmlsdGVyQnVpbGRlckltcGwoW10pO1xuICB9XG4gIGNvbnN1bWUoKSB7XG4gICAgaWYgKHRoaXMuaXNDb25zdW1lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBcIlNlYXJjaEZpbHRlckJ1aWxkZXIgaGFzIGFscmVhZHkgYmVlbiB1c2VkISBDaGFpbiB5b3VyIG1ldGhvZCBjYWxscyBsaWtlIGBxID0+IHEuc2VhcmNoKC4uLikuZXEoLi4uKWAuXCJcbiAgICAgICk7XG4gICAgfVxuICAgIHRoaXMuaXNDb25zdW1lZCA9IHRydWU7XG4gIH1cbiAgc2VhcmNoKGZpZWxkTmFtZSwgcXVlcnkpIHtcbiAgICB2YWxpZGF0ZUFyZyhmaWVsZE5hbWUsIDEsIFwic2VhcmNoXCIsIFwiZmllbGROYW1lXCIpO1xuICAgIHZhbGlkYXRlQXJnKHF1ZXJ5LCAyLCBcInNlYXJjaFwiLCBcInF1ZXJ5XCIpO1xuICAgIHRoaXMuY29uc3VtZSgpO1xuICAgIHJldHVybiBuZXcgU2VhcmNoRmlsdGVyQnVpbGRlckltcGwoXG4gICAgICB0aGlzLmZpbHRlcnMuY29uY2F0KHtcbiAgICAgICAgdHlwZTogXCJTZWFyY2hcIixcbiAgICAgICAgZmllbGRQYXRoOiBmaWVsZE5hbWUsXG4gICAgICAgIHZhbHVlOiBxdWVyeVxuICAgICAgfSlcbiAgICApO1xuICB9XG4gIGVxKGZpZWxkTmFtZSwgdmFsdWUpIHtcbiAgICB2YWxpZGF0ZUFyZyhmaWVsZE5hbWUsIDEsIFwiZXFcIiwgXCJmaWVsZE5hbWVcIik7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggIT09IDIpIHtcbiAgICAgIHZhbGlkYXRlQXJnKHZhbHVlLCAyLCBcInNlYXJjaFwiLCBcInZhbHVlXCIpO1xuICAgIH1cbiAgICB0aGlzLmNvbnN1bWUoKTtcbiAgICByZXR1cm4gbmV3IFNlYXJjaEZpbHRlckJ1aWxkZXJJbXBsKFxuICAgICAgdGhpcy5maWx0ZXJzLmNvbmNhdCh7XG4gICAgICAgIHR5cGU6IFwiRXFcIixcbiAgICAgICAgZmllbGRQYXRoOiBmaWVsZE5hbWUsXG4gICAgICAgIHZhbHVlOiBjb252ZXhPclVuZGVmaW5lZFRvSnNvbih2YWx1ZSlcbiAgICAgIH0pXG4gICAgKTtcbiAgfVxuICBleHBvcnQoKSB7XG4gICAgdGhpcy5jb25zdW1lKCk7XG4gICAgcmV0dXJuIHRoaXMuZmlsdGVycztcbiAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VhcmNoX2ZpbHRlcl9idWlsZGVyX2ltcGwuanMubWFwXG4iXSwibmFtZXMiOlsiY29udmV4T3JVbmRlZmluZWRUb0pzb24iLCJTZWFyY2hGaWx0ZXIiLCJ2YWxpZGF0ZUFyZyIsIlNlYXJjaEZpbHRlckJ1aWxkZXJJbXBsIiwiY29uc3RydWN0b3IiLCJmaWx0ZXJzIiwiaXNDb25zdW1lZCIsIm5ldyIsImNvbnN1bWUiLCJFcnJvciIsInNlYXJjaCIsImZpZWxkTmFtZSIsInF1ZXJ5IiwiY29uY2F0IiwidHlwZSIsImZpZWxkUGF0aCIsInZhbHVlIiwiZXEiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJleHBvcnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/search_filter_builder_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/storage_impl.js":
/*!******************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/storage_impl.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setupStorageActionWriter: () => (/* binding */ setupStorageActionWriter),\n/* harmony export */   setupStorageReader: () => (/* binding */ setupStorageReader),\n/* harmony export */   setupStorageWriter: () => (/* binding */ setupStorageWriter)\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/convex/dist/esm/index.js\");\n/* harmony import */ var _syscall_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./syscall.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./validate.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/validate.js\");\n\n\n\n\nfunction setupStorageReader(requestId) {\n    return {\n        getUrl: async (storageId)=>{\n            (0,_validate_js__WEBPACK_IMPORTED_MODULE_2__.validateArg)(storageId, 1, \"getUrl\", \"storageId\");\n            return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/storageGetUrl\", {\n                requestId,\n                version: _index_js__WEBPACK_IMPORTED_MODULE_0__.version,\n                storageId\n            });\n        },\n        getMetadata: async (storageId)=>{\n            return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/storageGetMetadata\", {\n                requestId,\n                version: _index_js__WEBPACK_IMPORTED_MODULE_0__.version,\n                storageId\n            });\n        }\n    };\n}\nfunction setupStorageWriter(requestId) {\n    const reader = setupStorageReader(requestId);\n    return {\n        generateUploadUrl: async ()=>{\n            return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/storageGenerateUploadUrl\", {\n                requestId,\n                version: _index_js__WEBPACK_IMPORTED_MODULE_0__.version\n            });\n        },\n        delete: async (storageId)=>{\n            await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performAsyncSyscall)(\"1.0/storageDelete\", {\n                requestId,\n                version: _index_js__WEBPACK_IMPORTED_MODULE_0__.version,\n                storageId\n            });\n        },\n        getUrl: reader.getUrl,\n        getMetadata: reader.getMetadata\n    };\n}\nfunction setupStorageActionWriter(requestId) {\n    const writer = setupStorageWriter(requestId);\n    return {\n        ...writer,\n        store: async (blob, options)=>{\n            return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performJsSyscall)(\"storage/storeBlob\", {\n                requestId,\n                version: _index_js__WEBPACK_IMPORTED_MODULE_0__.version,\n                blob,\n                options\n            });\n        },\n        get: async (storageId)=>{\n            return await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_1__.performJsSyscall)(\"storage/getBlob\", {\n                requestId,\n                version: _index_js__WEBPACK_IMPORTED_MODULE_0__.version,\n                storageId\n            });\n        }\n    };\n} //# sourceMappingURL=storage_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL3N0b3JhZ2VfaW1wbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBYTtBQUM0QjtBQUM0QjtBQUN6QjtBQUNyQyxTQUFTSSxtQkFBbUJDLFNBQVM7SUFDMUMsT0FBTztRQUNMQyxRQUFRLE9BQU9DO1lBQ2JKLHlEQUFXQSxDQUFDSSxXQUFXLEdBQUcsVUFBVTtZQUNwQyxPQUFPLE1BQU1OLGdFQUFtQkEsQ0FBQyxxQkFBcUI7Z0JBQ3BESTtnQkFDQUwsT0FBT0EsZ0RBQUFBO2dCQUNQTztZQUNGO1FBQ0Y7UUFDQUMsYUFBYSxPQUFPRDtZQUNsQixPQUFPLE1BQU1OLGdFQUFtQkEsQ0FBQywwQkFBMEI7Z0JBQ3pESTtnQkFDQUwsT0FBT0EsZ0RBQUFBO2dCQUNQTztZQUNGO1FBQ0Y7SUFDRjtBQUNGO0FBQ08sU0FBU0UsbUJBQW1CSixTQUFTO0lBQzFDLE1BQU1LLFNBQVNOLG1CQUFtQkM7SUFDbEMsT0FBTztRQUNMTSxtQkFBbUI7WUFDakIsT0FBTyxNQUFNVixnRUFBbUJBLENBQUMsZ0NBQWdDO2dCQUMvREk7Z0JBQ0FMLE9BQU9BLGdEQUFBQTtZQUNUO1FBQ0Y7UUFDQVksUUFBUSxPQUFPTDtZQUNiLE1BQU1OLGdFQUFtQkEsQ0FBQyxxQkFBcUI7Z0JBQzdDSTtnQkFDQUwsT0FBT0EsZ0RBQUFBO2dCQUNQTztZQUNGO1FBQ0Y7UUFDQUQsUUFBUUksT0FBT0osTUFBTTtRQUNyQkUsYUFBYUUsT0FBT0YsV0FBVztJQUNqQztBQUNGO0FBQ08sU0FBU0sseUJBQXlCUixTQUFTO0lBQ2hELE1BQU1TLFNBQVNMLG1CQUFtQko7SUFDbEMsT0FBTztRQUNMLEdBQUdTLE1BQU07UUFDVEMsT0FBTyxPQUFPQyxNQUFNQztZQUNsQixPQUFPLE1BQU1mLDZEQUFnQkEsQ0FBQyxxQkFBcUI7Z0JBQ2pERztnQkFDQUwsT0FBT0EsZ0RBQUFBO2dCQUNQZ0I7Z0JBQ0FDO1lBQ0Y7UUFDRjtRQUNBQyxLQUFLLE9BQU9YO1lBQ1YsT0FBTyxNQUFNTCw2REFBZ0JBLENBQUMsbUJBQW1CO2dCQUMvQ0c7Z0JBQ0FMLE9BQU9BLGdEQUFBQTtnQkFDUE87WUFDRjtRQUNGO0lBQ0Y7QUFDRixFQUNBLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL2VyYXNvcl9jbG9uZS8uL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vc2VydmVyL2ltcGwvc3RvcmFnZV9pbXBsLmpzPzg5MGYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5pbXBvcnQgeyB2ZXJzaW9uIH0gZnJvbSBcIi4uLy4uL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBwZXJmb3JtQXN5bmNTeXNjYWxsLCBwZXJmb3JtSnNTeXNjYWxsIH0gZnJvbSBcIi4vc3lzY2FsbC5qc1wiO1xuaW1wb3J0IHsgdmFsaWRhdGVBcmcgfSBmcm9tIFwiLi92YWxpZGF0ZS5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHNldHVwU3RvcmFnZVJlYWRlcihyZXF1ZXN0SWQpIHtcbiAgcmV0dXJuIHtcbiAgICBnZXRVcmw6IGFzeW5jIChzdG9yYWdlSWQpID0+IHtcbiAgICAgIHZhbGlkYXRlQXJnKHN0b3JhZ2VJZCwgMSwgXCJnZXRVcmxcIiwgXCJzdG9yYWdlSWRcIik7XG4gICAgICByZXR1cm4gYXdhaXQgcGVyZm9ybUFzeW5jU3lzY2FsbChcIjEuMC9zdG9yYWdlR2V0VXJsXCIsIHtcbiAgICAgICAgcmVxdWVzdElkLFxuICAgICAgICB2ZXJzaW9uLFxuICAgICAgICBzdG9yYWdlSWRcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0TWV0YWRhdGE6IGFzeW5jIChzdG9yYWdlSWQpID0+IHtcbiAgICAgIHJldHVybiBhd2FpdCBwZXJmb3JtQXN5bmNTeXNjYWxsKFwiMS4wL3N0b3JhZ2VHZXRNZXRhZGF0YVwiLCB7XG4gICAgICAgIHJlcXVlc3RJZCxcbiAgICAgICAgdmVyc2lvbixcbiAgICAgICAgc3RvcmFnZUlkXG4gICAgICB9KTtcbiAgICB9XG4gIH07XG59XG5leHBvcnQgZnVuY3Rpb24gc2V0dXBTdG9yYWdlV3JpdGVyKHJlcXVlc3RJZCkge1xuICBjb25zdCByZWFkZXIgPSBzZXR1cFN0b3JhZ2VSZWFkZXIocmVxdWVzdElkKTtcbiAgcmV0dXJuIHtcbiAgICBnZW5lcmF0ZVVwbG9hZFVybDogYXN5bmMgKCkgPT4ge1xuICAgICAgcmV0dXJuIGF3YWl0IHBlcmZvcm1Bc3luY1N5c2NhbGwoXCIxLjAvc3RvcmFnZUdlbmVyYXRlVXBsb2FkVXJsXCIsIHtcbiAgICAgICAgcmVxdWVzdElkLFxuICAgICAgICB2ZXJzaW9uXG4gICAgICB9KTtcbiAgICB9LFxuICAgIGRlbGV0ZTogYXN5bmMgKHN0b3JhZ2VJZCkgPT4ge1xuICAgICAgYXdhaXQgcGVyZm9ybUFzeW5jU3lzY2FsbChcIjEuMC9zdG9yYWdlRGVsZXRlXCIsIHtcbiAgICAgICAgcmVxdWVzdElkLFxuICAgICAgICB2ZXJzaW9uLFxuICAgICAgICBzdG9yYWdlSWRcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0VXJsOiByZWFkZXIuZ2V0VXJsLFxuICAgIGdldE1ldGFkYXRhOiByZWFkZXIuZ2V0TWV0YWRhdGFcbiAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBzZXR1cFN0b3JhZ2VBY3Rpb25Xcml0ZXIocmVxdWVzdElkKSB7XG4gIGNvbnN0IHdyaXRlciA9IHNldHVwU3RvcmFnZVdyaXRlcihyZXF1ZXN0SWQpO1xuICByZXR1cm4ge1xuICAgIC4uLndyaXRlcixcbiAgICBzdG9yZTogYXN5bmMgKGJsb2IsIG9wdGlvbnMpID0+IHtcbiAgICAgIHJldHVybiBhd2FpdCBwZXJmb3JtSnNTeXNjYWxsKFwic3RvcmFnZS9zdG9yZUJsb2JcIiwge1xuICAgICAgICByZXF1ZXN0SWQsXG4gICAgICAgIHZlcnNpb24sXG4gICAgICAgIGJsb2IsXG4gICAgICAgIG9wdGlvbnNcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0OiBhc3luYyAoc3RvcmFnZUlkKSA9PiB7XG4gICAgICByZXR1cm4gYXdhaXQgcGVyZm9ybUpzU3lzY2FsbChcInN0b3JhZ2UvZ2V0QmxvYlwiLCB7XG4gICAgICAgIHJlcXVlc3RJZCxcbiAgICAgICAgdmVyc2lvbixcbiAgICAgICAgc3RvcmFnZUlkXG4gICAgICB9KTtcbiAgICB9XG4gIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdG9yYWdlX2ltcGwuanMubWFwXG4iXSwibmFtZXMiOlsidmVyc2lvbiIsInBlcmZvcm1Bc3luY1N5c2NhbGwiLCJwZXJmb3JtSnNTeXNjYWxsIiwidmFsaWRhdGVBcmciLCJzZXR1cFN0b3JhZ2VSZWFkZXIiLCJyZXF1ZXN0SWQiLCJnZXRVcmwiLCJzdG9yYWdlSWQiLCJnZXRNZXRhZGF0YSIsInNldHVwU3RvcmFnZVdyaXRlciIsInJlYWRlciIsImdlbmVyYXRlVXBsb2FkVXJsIiwiZGVsZXRlIiwic2V0dXBTdG9yYWdlQWN0aW9uV3JpdGVyIiwid3JpdGVyIiwic3RvcmUiLCJibG9iIiwib3B0aW9ucyIsImdldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/storage_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/syscall.js":
/*!*************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/syscall.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   performAsyncSyscall: () => (/* binding */ performAsyncSyscall),\n/* harmony export */   performJsSyscall: () => (/* binding */ performJsSyscall),\n/* harmony export */   performSyscall: () => (/* binding */ performSyscall)\n/* harmony export */ });\n/* harmony import */ var _values_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/errors.js */ \"(ssr)/./node_modules/convex/dist/esm/values/errors.js\");\n\n\nfunction performSyscall(op, arg) {\n    if (typeof Convex === \"undefined\" || Convex.syscall === void 0) {\n        throw new Error(\"The Convex database and auth objects are being used outside of a Convex backend. Did you mean to use `useQuery` or `useMutation` to call a Convex function?\");\n    }\n    const resultStr = Convex.syscall(op, JSON.stringify(arg));\n    return JSON.parse(resultStr);\n}\nasync function performAsyncSyscall(op, arg) {\n    if (typeof Convex === \"undefined\" || Convex.asyncSyscall === void 0) {\n        throw new Error(\"The Convex database and auth objects are being used outside of a Convex backend. Did you mean to use `useQuery` or `useMutation` to call a Convex function?\");\n    }\n    let resultStr;\n    try {\n        resultStr = await Convex.asyncSyscall(op, JSON.stringify(arg));\n    } catch (e) {\n        if (e.data !== void 0) {\n            const rethrown = new _values_errors_js__WEBPACK_IMPORTED_MODULE_0__.ConvexError(e.message);\n            rethrown.data = e.data;\n            throw rethrown;\n        }\n        throw new Error(e.message);\n    }\n    return JSON.parse(resultStr);\n}\nfunction performJsSyscall(op, arg) {\n    if (typeof Convex === \"undefined\" || Convex.jsSyscall === void 0) {\n        throw new Error(\"The Convex database and auth objects are being used outside of a Convex backend. Did you mean to use `useQuery` or `useMutation` to call a Convex function?\");\n    }\n    return Convex.jsSyscall(op, arg);\n} //# sourceMappingURL=syscall.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL3N5c2NhbGwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFhO0FBQ3dDO0FBQzlDLFNBQVNDLGVBQWVDLEVBQUUsRUFBRUMsR0FBRztJQUNwQyxJQUFJLE9BQU9DLFdBQVcsZUFBZUEsT0FBT0MsT0FBTyxLQUFLLEtBQUssR0FBRztRQUM5RCxNQUFNLElBQUlDLE1BQ1I7SUFFSjtJQUNBLE1BQU1DLFlBQVlILE9BQU9DLE9BQU8sQ0FBQ0gsSUFBSU0sS0FBS0MsU0FBUyxDQUFDTjtJQUNwRCxPQUFPSyxLQUFLRSxLQUFLLENBQUNIO0FBQ3BCO0FBQ08sZUFBZUksb0JBQW9CVCxFQUFFLEVBQUVDLEdBQUc7SUFDL0MsSUFBSSxPQUFPQyxXQUFXLGVBQWVBLE9BQU9RLFlBQVksS0FBSyxLQUFLLEdBQUc7UUFDbkUsTUFBTSxJQUFJTixNQUNSO0lBRUo7SUFDQSxJQUFJQztJQUNKLElBQUk7UUFDRkEsWUFBWSxNQUFNSCxPQUFPUSxZQUFZLENBQUNWLElBQUlNLEtBQUtDLFNBQVMsQ0FBQ047SUFDM0QsRUFBRSxPQUFPVSxHQUFHO1FBQ1YsSUFBSUEsRUFBRUMsSUFBSSxLQUFLLEtBQUssR0FBRztZQUNyQixNQUFNQyxXQUFXLElBQUlmLDBEQUFXQSxDQUFDYSxFQUFFRyxPQUFPO1lBQzFDRCxTQUFTRCxJQUFJLEdBQUdELEVBQUVDLElBQUk7WUFDdEIsTUFBTUM7UUFDUjtRQUNBLE1BQU0sSUFBSVQsTUFBTU8sRUFBRUcsT0FBTztJQUMzQjtJQUNBLE9BQU9SLEtBQUtFLEtBQUssQ0FBQ0g7QUFDcEI7QUFDTyxTQUFTVSxpQkFBaUJmLEVBQUUsRUFBRUMsR0FBRztJQUN0QyxJQUFJLE9BQU9DLFdBQVcsZUFBZUEsT0FBT2MsU0FBUyxLQUFLLEtBQUssR0FBRztRQUNoRSxNQUFNLElBQUlaLE1BQ1I7SUFFSjtJQUNBLE9BQU9GLE9BQU9jLFNBQVMsQ0FBQ2hCLElBQUlDO0FBQzlCLEVBQ0EsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXJhc29yX2Nsb25lLy4vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9zZXJ2ZXIvaW1wbC9zeXNjYWxsLmpzPzQ4NTMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5pbXBvcnQgeyBDb252ZXhFcnJvciB9IGZyb20gXCIuLi8uLi92YWx1ZXMvZXJyb3JzLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gcGVyZm9ybVN5c2NhbGwob3AsIGFyZykge1xuICBpZiAodHlwZW9mIENvbnZleCA9PT0gXCJ1bmRlZmluZWRcIiB8fCBDb252ZXguc3lzY2FsbCA9PT0gdm9pZCAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgXCJUaGUgQ29udmV4IGRhdGFiYXNlIGFuZCBhdXRoIG9iamVjdHMgYXJlIGJlaW5nIHVzZWQgb3V0c2lkZSBvZiBhIENvbnZleCBiYWNrZW5kLiBEaWQgeW91IG1lYW4gdG8gdXNlIGB1c2VRdWVyeWAgb3IgYHVzZU11dGF0aW9uYCB0byBjYWxsIGEgQ29udmV4IGZ1bmN0aW9uP1wiXG4gICAgKTtcbiAgfVxuICBjb25zdCByZXN1bHRTdHIgPSBDb252ZXguc3lzY2FsbChvcCwgSlNPTi5zdHJpbmdpZnkoYXJnKSk7XG4gIHJldHVybiBKU09OLnBhcnNlKHJlc3VsdFN0cik7XG59XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcGVyZm9ybUFzeW5jU3lzY2FsbChvcCwgYXJnKSB7XG4gIGlmICh0eXBlb2YgQ29udmV4ID09PSBcInVuZGVmaW5lZFwiIHx8IENvbnZleC5hc3luY1N5c2NhbGwgPT09IHZvaWQgMCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIFwiVGhlIENvbnZleCBkYXRhYmFzZSBhbmQgYXV0aCBvYmplY3RzIGFyZSBiZWluZyB1c2VkIG91dHNpZGUgb2YgYSBDb252ZXggYmFja2VuZC4gRGlkIHlvdSBtZWFuIHRvIHVzZSBgdXNlUXVlcnlgIG9yIGB1c2VNdXRhdGlvbmAgdG8gY2FsbCBhIENvbnZleCBmdW5jdGlvbj9cIlxuICAgICk7XG4gIH1cbiAgbGV0IHJlc3VsdFN0cjtcbiAgdHJ5IHtcbiAgICByZXN1bHRTdHIgPSBhd2FpdCBDb252ZXguYXN5bmNTeXNjYWxsKG9wLCBKU09OLnN0cmluZ2lmeShhcmcpKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGlmIChlLmRhdGEgIT09IHZvaWQgMCkge1xuICAgICAgY29uc3QgcmV0aHJvd24gPSBuZXcgQ29udmV4RXJyb3IoZS5tZXNzYWdlKTtcbiAgICAgIHJldGhyb3duLmRhdGEgPSBlLmRhdGE7XG4gICAgICB0aHJvdyByZXRocm93bjtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKGUubWVzc2FnZSk7XG4gIH1cbiAgcmV0dXJuIEpTT04ucGFyc2UocmVzdWx0U3RyKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwZXJmb3JtSnNTeXNjYWxsKG9wLCBhcmcpIHtcbiAgaWYgKHR5cGVvZiBDb252ZXggPT09IFwidW5kZWZpbmVkXCIgfHwgQ29udmV4LmpzU3lzY2FsbCA9PT0gdm9pZCAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgXCJUaGUgQ29udmV4IGRhdGFiYXNlIGFuZCBhdXRoIG9iamVjdHMgYXJlIGJlaW5nIHVzZWQgb3V0c2lkZSBvZiBhIENvbnZleCBiYWNrZW5kLiBEaWQgeW91IG1lYW4gdG8gdXNlIGB1c2VRdWVyeWAgb3IgYHVzZU11dGF0aW9uYCB0byBjYWxsIGEgQ29udmV4IGZ1bmN0aW9uP1wiXG4gICAgKTtcbiAgfVxuICByZXR1cm4gQ29udmV4LmpzU3lzY2FsbChvcCwgYXJnKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN5c2NhbGwuanMubWFwXG4iXSwibmFtZXMiOlsiQ29udmV4RXJyb3IiLCJwZXJmb3JtU3lzY2FsbCIsIm9wIiwiYXJnIiwiQ29udmV4Iiwic3lzY2FsbCIsIkVycm9yIiwicmVzdWx0U3RyIiwiSlNPTiIsInN0cmluZ2lmeSIsInBhcnNlIiwicGVyZm9ybUFzeW5jU3lzY2FsbCIsImFzeW5jU3lzY2FsbCIsImUiLCJkYXRhIiwicmV0aHJvd24iLCJtZXNzYWdlIiwicGVyZm9ybUpzU3lzY2FsbCIsImpzU3lzY2FsbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/syscall.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/validate.js":
/*!**************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/validate.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   validateArg: () => (/* binding */ validateArg)\n/* harmony export */ });\n\nfunction validateArg(arg, idx, method, argName) {\n    if (arg === void 0) {\n        throw new Error(`Must provide arg ${idx} \\`${argName}\\` to \\`${method}\\``);\n    }\n} //# sourceMappingURL=validate.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL3ZhbGlkYXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBYTtBQUNOLFNBQVNBLFlBQVlDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxNQUFNLEVBQUVDLE9BQU87SUFDbkQsSUFBSUgsUUFBUSxLQUFLLEdBQUc7UUFDbEIsTUFBTSxJQUFJSSxNQUFNLENBQUMsaUJBQWlCLEVBQUVILElBQUksR0FBRyxFQUFFRSxRQUFRLFFBQVEsRUFBRUQsT0FBTyxFQUFFLENBQUM7SUFDM0U7QUFDRixFQUNBLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL2VyYXNvcl9jbG9uZS8uL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vc2VydmVyL2ltcGwvdmFsaWRhdGUuanM/YTM2YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZUFyZyhhcmcsIGlkeCwgbWV0aG9kLCBhcmdOYW1lKSB7XG4gIGlmIChhcmcgPT09IHZvaWQgMCkge1xuICAgIHRocm93IG5ldyBFcnJvcihgTXVzdCBwcm92aWRlIGFyZyAke2lkeH0gXFxgJHthcmdOYW1lfVxcYCB0byBcXGAke21ldGhvZH1cXGBgKTtcbiAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmFsaWRhdGUuanMubWFwXG4iXSwibmFtZXMiOlsidmFsaWRhdGVBcmciLCJhcmciLCJpZHgiLCJtZXRob2QiLCJhcmdOYW1lIiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/validate.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/impl/vector_search_impl.js":
/*!************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/impl/vector_search_impl.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ExpressionImpl: () => (/* binding */ ExpressionImpl),\n/* harmony export */   VectorQueryImpl: () => (/* binding */ VectorQueryImpl),\n/* harmony export */   filterBuilderImpl: () => (/* binding */ filterBuilderImpl),\n/* harmony export */   serializeExpression: () => (/* binding */ serializeExpression),\n/* harmony export */   setupActionVectorSearch: () => (/* binding */ setupActionVectorSearch)\n/* harmony export */ });\n/* harmony import */ var _syscall_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./syscall.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/convex/dist/esm/index.js\");\n/* harmony import */ var _vector_search_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../vector_search.js */ \"(ssr)/./node_modules/convex/dist/esm/server/vector_search.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./validate.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/validate.js\");\n/* harmony import */ var _values_value_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../values/value.js */ \"(ssr)/./node_modules/convex/dist/esm/values/value.js\");\n\n\n\n\n\n\nfunction setupActionVectorSearch(requestId) {\n    return async (tableName, indexName, query)=>{\n        (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(tableName, 1, \"vectorSearch\", \"tableName\");\n        (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(indexName, 2, \"vectorSearch\", \"indexName\");\n        (0,_validate_js__WEBPACK_IMPORTED_MODULE_3__.validateArg)(query, 3, \"vectorSearch\", \"query\");\n        if (!query.vector || !Array.isArray(query.vector) || query.vector.length === 0) {\n            throw Error(\"`vector` must be a non-empty Array in vectorSearch\");\n        }\n        return await new VectorQueryImpl(requestId, tableName + \".\" + indexName, query).collect();\n    };\n}\nclass VectorQueryImpl {\n    constructor(requestId, indexName, query){\n        this.requestId = requestId;\n        const filters = query.filter ? serializeExpression(query.filter(filterBuilderImpl)) : null;\n        this.state = {\n            type: \"preparing\",\n            query: {\n                indexName,\n                limit: query.limit,\n                vector: query.vector,\n                expressions: filters\n            }\n        };\n    }\n    async collect() {\n        if (this.state.type === \"consumed\") {\n            throw new Error(\"This query is closed and can't emit any more values.\");\n        }\n        const query = this.state.query;\n        this.state = {\n            type: \"consumed\"\n        };\n        const { results } = await (0,_syscall_js__WEBPACK_IMPORTED_MODULE_0__.performAsyncSyscall)(\"1.0/actions/vectorSearch\", {\n            requestId: this.requestId,\n            version: _index_js__WEBPACK_IMPORTED_MODULE_1__.version,\n            query\n        });\n        return results;\n    }\n}\nclass ExpressionImpl extends _vector_search_js__WEBPACK_IMPORTED_MODULE_2__.FilterExpression {\n    constructor(inner){\n        super();\n        this.inner = inner;\n    }\n    serialize() {\n        return this.inner;\n    }\n}\nfunction serializeExpression(expr) {\n    if (expr instanceof ExpressionImpl) {\n        return expr.serialize();\n    } else {\n        return {\n            $literal: (0,_values_value_js__WEBPACK_IMPORTED_MODULE_4__.convexOrUndefinedToJson)(expr)\n        };\n    }\n}\nconst filterBuilderImpl = {\n    //  Comparisons  /////////////////////////////////////////////////////////////\n    eq (fieldName, value) {\n        if (typeof fieldName !== \"string\") {\n            throw new Error(\"The first argument to `q.eq` must be a field name.\");\n        }\n        return new ExpressionImpl({\n            $eq: [\n                serializeExpression(new ExpressionImpl({\n                    $field: fieldName\n                })),\n                serializeExpression(value)\n            ]\n        });\n    },\n    //  Logic  ///////////////////////////////////////////////////////////////////\n    or (...exprs) {\n        return new ExpressionImpl({\n            $or: exprs.map(serializeExpression)\n        });\n    }\n}; //# sourceMappingURL=vector_search_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL3ZlY3Rvcl9zZWFyY2hfaW1wbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQWE7QUFDc0M7QUFDVjtBQUdaO0FBQ2U7QUFDb0I7QUFDekQsU0FBU0ssd0JBQXdCQyxTQUFTO0lBQy9DLE9BQU8sT0FBT0MsV0FBV0MsV0FBV0M7UUFDbENOLHlEQUFXQSxDQUFDSSxXQUFXLEdBQUcsZ0JBQWdCO1FBQzFDSix5REFBV0EsQ0FBQ0ssV0FBVyxHQUFHLGdCQUFnQjtRQUMxQ0wseURBQVdBLENBQUNNLE9BQU8sR0FBRyxnQkFBZ0I7UUFDdEMsSUFBSSxDQUFDQSxNQUFNQyxNQUFNLElBQUksQ0FBQ0MsTUFBTUMsT0FBTyxDQUFDSCxNQUFNQyxNQUFNLEtBQUtELE1BQU1DLE1BQU0sQ0FBQ0csTUFBTSxLQUFLLEdBQUc7WUFDOUUsTUFBTUMsTUFBTTtRQUNkO1FBQ0EsT0FBTyxNQUFNLElBQUlDLGdCQUNmVCxXQUNBQyxZQUFZLE1BQU1DLFdBQ2xCQyxPQUNBTyxPQUFPO0lBQ1g7QUFDRjtBQUNPLE1BQU1EO0lBQ1hFLFlBQVlYLFNBQVMsRUFBRUUsU0FBUyxFQUFFQyxLQUFLLENBQUU7UUFDdkMsSUFBSSxDQUFDSCxTQUFTLEdBQUdBO1FBQ2pCLE1BQU1ZLFVBQVVULE1BQU1VLE1BQU0sR0FBR0Msb0JBQW9CWCxNQUFNVSxNQUFNLENBQUNFLHNCQUFzQjtRQUN0RixJQUFJLENBQUNDLEtBQUssR0FBRztZQUNYQyxNQUFNO1lBQ05kLE9BQU87Z0JBQ0xEO2dCQUNBZ0IsT0FBT2YsTUFBTWUsS0FBSztnQkFDbEJkLFFBQVFELE1BQU1DLE1BQU07Z0JBQ3BCZSxhQUFhUDtZQUNmO1FBQ0Y7SUFDRjtJQUNBLE1BQU1GLFVBQVU7UUFDZCxJQUFJLElBQUksQ0FBQ00sS0FBSyxDQUFDQyxJQUFJLEtBQUssWUFBWTtZQUNsQyxNQUFNLElBQUlULE1BQU07UUFDbEI7UUFDQSxNQUFNTCxRQUFRLElBQUksQ0FBQ2EsS0FBSyxDQUFDYixLQUFLO1FBQzlCLElBQUksQ0FBQ2EsS0FBSyxHQUFHO1lBQUVDLE1BQU07UUFBVztRQUNoQyxNQUFNLEVBQUVHLE9BQU8sRUFBRSxHQUFHLE1BQU0xQixnRUFBbUJBLENBQUMsNEJBQTRCO1lBQ3hFTSxXQUFXLElBQUksQ0FBQ0EsU0FBUztZQUN6QkwsT0FBT0EsZ0RBQUFBO1lBQ1BRO1FBQ0Y7UUFDQSxPQUFPaUI7SUFDVDtBQUNGO0FBQ08sTUFBTUMsdUJBQXVCekIsK0RBQWdCQTtJQUNsRGUsWUFBWVcsS0FBSyxDQUFFO1FBQ2pCLEtBQUs7UUFDTCxJQUFJLENBQUNBLEtBQUssR0FBR0E7SUFDZjtJQUNBQyxZQUFZO1FBQ1YsT0FBTyxJQUFJLENBQUNELEtBQUs7SUFDbkI7QUFDRjtBQUNPLFNBQVNSLG9CQUFvQlUsSUFBSTtJQUN0QyxJQUFJQSxnQkFBZ0JILGdCQUFnQjtRQUNsQyxPQUFPRyxLQUFLRCxTQUFTO0lBQ3ZCLE9BQU87UUFDTCxPQUFPO1lBQUVFLFVBQVUzQix5RUFBdUJBLENBQUMwQjtRQUFNO0lBQ25EO0FBQ0Y7QUFDTyxNQUFNVCxvQkFBb0I7SUFDL0IsOEVBQThFO0lBQzlFVyxJQUFHQyxTQUFTLEVBQUVDLEtBQUs7UUFDakIsSUFBSSxPQUFPRCxjQUFjLFVBQVU7WUFDakMsTUFBTSxJQUFJbkIsTUFBTTtRQUNsQjtRQUNBLE9BQU8sSUFBSWEsZUFBZTtZQUN4QlEsS0FBSztnQkFDSGYsb0JBQW9CLElBQUlPLGVBQWU7b0JBQUVTLFFBQVFIO2dCQUFVO2dCQUMzRGIsb0JBQW9CYzthQUNyQjtRQUNIO0lBQ0Y7SUFDQSw4RUFBOEU7SUFDOUVHLElBQUcsR0FBR0MsS0FBSztRQUNULE9BQU8sSUFBSVgsZUFBZTtZQUFFWSxLQUFLRCxNQUFNRSxHQUFHLENBQUNwQjtRQUFxQjtJQUNsRTtBQUNGLEVBQUUsQ0FDRiw4Q0FBOEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9lcmFzb3JfY2xvbmUvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbXBsL3ZlY3Rvcl9zZWFyY2hfaW1wbC5qcz8xMmY4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuaW1wb3J0IHsgcGVyZm9ybUFzeW5jU3lzY2FsbCB9IGZyb20gXCIuL3N5c2NhbGwuanNcIjtcbmltcG9ydCB7IHZlcnNpb24gfSBmcm9tIFwiLi4vLi4vaW5kZXguanNcIjtcbmltcG9ydCB7XG4gIEZpbHRlckV4cHJlc3Npb25cbn0gZnJvbSBcIi4uL3ZlY3Rvcl9zZWFyY2guanNcIjtcbmltcG9ydCB7IHZhbGlkYXRlQXJnIH0gZnJvbSBcIi4vdmFsaWRhdGUuanNcIjtcbmltcG9ydCB7IGNvbnZleE9yVW5kZWZpbmVkVG9Kc29uIH0gZnJvbSBcIi4uLy4uL3ZhbHVlcy92YWx1ZS5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHNldHVwQWN0aW9uVmVjdG9yU2VhcmNoKHJlcXVlc3RJZCkge1xuICByZXR1cm4gYXN5bmMgKHRhYmxlTmFtZSwgaW5kZXhOYW1lLCBxdWVyeSkgPT4ge1xuICAgIHZhbGlkYXRlQXJnKHRhYmxlTmFtZSwgMSwgXCJ2ZWN0b3JTZWFyY2hcIiwgXCJ0YWJsZU5hbWVcIik7XG4gICAgdmFsaWRhdGVBcmcoaW5kZXhOYW1lLCAyLCBcInZlY3RvclNlYXJjaFwiLCBcImluZGV4TmFtZVwiKTtcbiAgICB2YWxpZGF0ZUFyZyhxdWVyeSwgMywgXCJ2ZWN0b3JTZWFyY2hcIiwgXCJxdWVyeVwiKTtcbiAgICBpZiAoIXF1ZXJ5LnZlY3RvciB8fCAhQXJyYXkuaXNBcnJheShxdWVyeS52ZWN0b3IpIHx8IHF1ZXJ5LnZlY3Rvci5sZW5ndGggPT09IDApIHtcbiAgICAgIHRocm93IEVycm9yKFwiYHZlY3RvcmAgbXVzdCBiZSBhIG5vbi1lbXB0eSBBcnJheSBpbiB2ZWN0b3JTZWFyY2hcIik7XG4gICAgfVxuICAgIHJldHVybiBhd2FpdCBuZXcgVmVjdG9yUXVlcnlJbXBsKFxuICAgICAgcmVxdWVzdElkLFxuICAgICAgdGFibGVOYW1lICsgXCIuXCIgKyBpbmRleE5hbWUsXG4gICAgICBxdWVyeVxuICAgICkuY29sbGVjdCgpO1xuICB9O1xufVxuZXhwb3J0IGNsYXNzIFZlY3RvclF1ZXJ5SW1wbCB7XG4gIGNvbnN0cnVjdG9yKHJlcXVlc3RJZCwgaW5kZXhOYW1lLCBxdWVyeSkge1xuICAgIHRoaXMucmVxdWVzdElkID0gcmVxdWVzdElkO1xuICAgIGNvbnN0IGZpbHRlcnMgPSBxdWVyeS5maWx0ZXIgPyBzZXJpYWxpemVFeHByZXNzaW9uKHF1ZXJ5LmZpbHRlcihmaWx0ZXJCdWlsZGVySW1wbCkpIDogbnVsbDtcbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgdHlwZTogXCJwcmVwYXJpbmdcIixcbiAgICAgIHF1ZXJ5OiB7XG4gICAgICAgIGluZGV4TmFtZSxcbiAgICAgICAgbGltaXQ6IHF1ZXJ5LmxpbWl0LFxuICAgICAgICB2ZWN0b3I6IHF1ZXJ5LnZlY3RvcixcbiAgICAgICAgZXhwcmVzc2lvbnM6IGZpbHRlcnNcbiAgICAgIH1cbiAgICB9O1xuICB9XG4gIGFzeW5jIGNvbGxlY3QoKSB7XG4gICAgaWYgKHRoaXMuc3RhdGUudHlwZSA9PT0gXCJjb25zdW1lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUaGlzIHF1ZXJ5IGlzIGNsb3NlZCBhbmQgY2FuJ3QgZW1pdCBhbnkgbW9yZSB2YWx1ZXMuXCIpO1xuICAgIH1cbiAgICBjb25zdCBxdWVyeSA9IHRoaXMuc3RhdGUucXVlcnk7XG4gICAgdGhpcy5zdGF0ZSA9IHsgdHlwZTogXCJjb25zdW1lZFwiIH07XG4gICAgY29uc3QgeyByZXN1bHRzIH0gPSBhd2FpdCBwZXJmb3JtQXN5bmNTeXNjYWxsKFwiMS4wL2FjdGlvbnMvdmVjdG9yU2VhcmNoXCIsIHtcbiAgICAgIHJlcXVlc3RJZDogdGhpcy5yZXF1ZXN0SWQsXG4gICAgICB2ZXJzaW9uLFxuICAgICAgcXVlcnlcbiAgICB9KTtcbiAgICByZXR1cm4gcmVzdWx0cztcbiAgfVxufVxuZXhwb3J0IGNsYXNzIEV4cHJlc3Npb25JbXBsIGV4dGVuZHMgRmlsdGVyRXhwcmVzc2lvbiB7XG4gIGNvbnN0cnVjdG9yKGlubmVyKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLmlubmVyID0gaW5uZXI7XG4gIH1cbiAgc2VyaWFsaXplKCkge1xuICAgIHJldHVybiB0aGlzLmlubmVyO1xuICB9XG59XG5leHBvcnQgZnVuY3Rpb24gc2VyaWFsaXplRXhwcmVzc2lvbihleHByKSB7XG4gIGlmIChleHByIGluc3RhbmNlb2YgRXhwcmVzc2lvbkltcGwpIHtcbiAgICByZXR1cm4gZXhwci5zZXJpYWxpemUoKTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4geyAkbGl0ZXJhbDogY29udmV4T3JVbmRlZmluZWRUb0pzb24oZXhwcikgfTtcbiAgfVxufVxuZXhwb3J0IGNvbnN0IGZpbHRlckJ1aWxkZXJJbXBsID0ge1xuICAvLyAgQ29tcGFyaXNvbnMgIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiAgZXEoZmllbGROYW1lLCB2YWx1ZSkge1xuICAgIGlmICh0eXBlb2YgZmllbGROYW1lICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUaGUgZmlyc3QgYXJndW1lbnQgdG8gYHEuZXFgIG11c3QgYmUgYSBmaWVsZCBuYW1lLlwiKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBFeHByZXNzaW9uSW1wbCh7XG4gICAgICAkZXE6IFtcbiAgICAgICAgc2VyaWFsaXplRXhwcmVzc2lvbihuZXcgRXhwcmVzc2lvbkltcGwoeyAkZmllbGQ6IGZpZWxkTmFtZSB9KSksXG4gICAgICAgIHNlcmlhbGl6ZUV4cHJlc3Npb24odmFsdWUpXG4gICAgICBdXG4gICAgfSk7XG4gIH0sXG4gIC8vICBMb2dpYyAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuICBvciguLi5leHBycykge1xuICAgIHJldHVybiBuZXcgRXhwcmVzc2lvbkltcGwoeyAkb3I6IGV4cHJzLm1hcChzZXJpYWxpemVFeHByZXNzaW9uKSB9KTtcbiAgfVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZlY3Rvcl9zZWFyY2hfaW1wbC5qcy5tYXBcbiJdLCJuYW1lcyI6WyJwZXJmb3JtQXN5bmNTeXNjYWxsIiwidmVyc2lvbiIsIkZpbHRlckV4cHJlc3Npb24iLCJ2YWxpZGF0ZUFyZyIsImNvbnZleE9yVW5kZWZpbmVkVG9Kc29uIiwic2V0dXBBY3Rpb25WZWN0b3JTZWFyY2giLCJyZXF1ZXN0SWQiLCJ0YWJsZU5hbWUiLCJpbmRleE5hbWUiLCJxdWVyeSIsInZlY3RvciIsIkFycmF5IiwiaXNBcnJheSIsImxlbmd0aCIsIkVycm9yIiwiVmVjdG9yUXVlcnlJbXBsIiwiY29sbGVjdCIsImNvbnN0cnVjdG9yIiwiZmlsdGVycyIsImZpbHRlciIsInNlcmlhbGl6ZUV4cHJlc3Npb24iLCJmaWx0ZXJCdWlsZGVySW1wbCIsInN0YXRlIiwidHlwZSIsImxpbWl0IiwiZXhwcmVzc2lvbnMiLCJyZXN1bHRzIiwiRXhwcmVzc2lvbkltcGwiLCJpbm5lciIsInNlcmlhbGl6ZSIsImV4cHIiLCIkbGl0ZXJhbCIsImVxIiwiZmllbGROYW1lIiwidmFsdWUiLCIkZXEiLCIkZmllbGQiLCJvciIsImV4cHJzIiwiJG9yIiwibWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/impl/vector_search_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/index.js":
/*!******************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpRouter: () => (/* reexport safe */ _router_js__WEBPACK_IMPORTED_MODULE_6__.HttpRouter),\n/* harmony export */   ROUTABLE_HTTP_METHODS: () => (/* reexport safe */ _router_js__WEBPACK_IMPORTED_MODULE_6__.ROUTABLE_HTTP_METHODS),\n/* harmony export */   SearchFilter: () => (/* reexport safe */ _search_filter_builder_js__WEBPACK_IMPORTED_MODULE_3__.SearchFilter),\n/* harmony export */   actionGeneric: () => (/* reexport safe */ _impl_registration_impl_js__WEBPACK_IMPORTED_MODULE_1__.actionGeneric),\n/* harmony export */   anyApi: () => (/* reexport safe */ _api_js__WEBPACK_IMPORTED_MODULE_7__.anyApi),\n/* harmony export */   cronJobs: () => (/* reexport safe */ _cron_js__WEBPACK_IMPORTED_MODULE_5__.cronJobs),\n/* harmony export */   defineSchema: () => (/* reexport safe */ _schema_js__WEBPACK_IMPORTED_MODULE_8__.defineSchema),\n/* harmony export */   defineTable: () => (/* reexport safe */ _schema_js__WEBPACK_IMPORTED_MODULE_8__.defineTable),\n/* harmony export */   filterApi: () => (/* reexport safe */ _api_js__WEBPACK_IMPORTED_MODULE_7__.filterApi),\n/* harmony export */   getFunctionName: () => (/* reexport safe */ _api_js__WEBPACK_IMPORTED_MODULE_7__.getFunctionName),\n/* harmony export */   httpActionGeneric: () => (/* reexport safe */ _impl_registration_impl_js__WEBPACK_IMPORTED_MODULE_1__.httpActionGeneric),\n/* harmony export */   httpRouter: () => (/* reexport safe */ _router_js__WEBPACK_IMPORTED_MODULE_6__.httpRouter),\n/* harmony export */   internalActionGeneric: () => (/* reexport safe */ _impl_registration_impl_js__WEBPACK_IMPORTED_MODULE_1__.internalActionGeneric),\n/* harmony export */   internalMutationGeneric: () => (/* reexport safe */ _impl_registration_impl_js__WEBPACK_IMPORTED_MODULE_1__.internalMutationGeneric),\n/* harmony export */   internalQueryGeneric: () => (/* reexport safe */ _impl_registration_impl_js__WEBPACK_IMPORTED_MODULE_1__.internalQueryGeneric),\n/* harmony export */   makeFunctionReference: () => (/* reexport safe */ _api_js__WEBPACK_IMPORTED_MODULE_7__.makeFunctionReference),\n/* harmony export */   mutationGeneric: () => (/* reexport safe */ _impl_registration_impl_js__WEBPACK_IMPORTED_MODULE_1__.mutationGeneric),\n/* harmony export */   paginationOptsValidator: () => (/* reexport safe */ _pagination_js__WEBPACK_IMPORTED_MODULE_2__.paginationOptsValidator),\n/* harmony export */   queryGeneric: () => (/* reexport safe */ _impl_registration_impl_js__WEBPACK_IMPORTED_MODULE_1__.queryGeneric)\n/* harmony export */ });\n/* harmony import */ var _database_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./database.js */ \"(ssr)/./node_modules/convex/dist/esm/server/database.js\");\n/* harmony import */ var _impl_registration_impl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./impl/registration_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/registration_impl.js\");\n/* harmony import */ var _pagination_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pagination.js */ \"(ssr)/./node_modules/convex/dist/esm/server/pagination.js\");\n/* harmony import */ var _search_filter_builder_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./search_filter_builder.js */ \"(ssr)/./node_modules/convex/dist/esm/server/search_filter_builder.js\");\n/* harmony import */ var _storage_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./storage.js */ \"(ssr)/./node_modules/convex/dist/esm/server/storage.js\");\n/* harmony import */ var _cron_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cron.js */ \"(ssr)/./node_modules/convex/dist/esm/server/cron.js\");\n/* harmony import */ var _router_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./router.js */ \"(ssr)/./node_modules/convex/dist/esm/server/router.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n/* harmony import */ var _schema_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./schema.js */ \"(ssr)/./node_modules/convex/dist/esm/server/schema.js\");\n\n\n\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQWE7QUFDaUI7QUFTTztBQUNMO0FBQ1c7QUFDZDtBQUNRO0FBQ3VDO0FBTTFEO0FBQ3NDLENBQ3hELGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2VyYXNvcl9jbG9uZS8uL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vc2VydmVyL2luZGV4LmpzPzgzOTAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnQgKiBmcm9tIFwiLi9kYXRhYmFzZS5qc1wiO1xuZXhwb3J0IHtcbiAgYWN0aW9uR2VuZXJpYyxcbiAgaHR0cEFjdGlvbkdlbmVyaWMsXG4gIG11dGF0aW9uR2VuZXJpYyxcbiAgcXVlcnlHZW5lcmljLFxuICBpbnRlcm5hbEFjdGlvbkdlbmVyaWMsXG4gIGludGVybmFsTXV0YXRpb25HZW5lcmljLFxuICBpbnRlcm5hbFF1ZXJ5R2VuZXJpY1xufSBmcm9tIFwiLi9pbXBsL3JlZ2lzdHJhdGlvbl9pbXBsLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wYWdpbmF0aW9uLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9zZWFyY2hfZmlsdGVyX2J1aWxkZXIuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3N0b3JhZ2UuanNcIjtcbmV4cG9ydCB7IGNyb25Kb2JzIH0gZnJvbSBcIi4vY3Jvbi5qc1wiO1xuZXhwb3J0IHsgaHR0cFJvdXRlciwgSHR0cFJvdXRlciwgUk9VVEFCTEVfSFRUUF9NRVRIT0RTIH0gZnJvbSBcIi4vcm91dGVyLmpzXCI7XG5leHBvcnQge1xuICBhbnlBcGksXG4gIGdldEZ1bmN0aW9uTmFtZSxcbiAgbWFrZUZ1bmN0aW9uUmVmZXJlbmNlLFxuICBmaWx0ZXJBcGlcbn0gZnJvbSBcIi4vYXBpLmpzXCI7XG5leHBvcnQgeyBkZWZpbmVUYWJsZSwgZGVmaW5lU2NoZW1hIH0gZnJvbSBcIi4vc2NoZW1hLmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6WyJhY3Rpb25HZW5lcmljIiwiaHR0cEFjdGlvbkdlbmVyaWMiLCJtdXRhdGlvbkdlbmVyaWMiLCJxdWVyeUdlbmVyaWMiLCJpbnRlcm5hbEFjdGlvbkdlbmVyaWMiLCJpbnRlcm5hbE11dGF0aW9uR2VuZXJpYyIsImludGVybmFsUXVlcnlHZW5lcmljIiwiY3JvbkpvYnMiLCJodHRwUm91dGVyIiwiSHR0cFJvdXRlciIsIlJPVVRBQkxFX0hUVFBfTUVUSE9EUyIsImFueUFwaSIsImdldEZ1bmN0aW9uTmFtZSIsIm1ha2VGdW5jdGlvblJlZmVyZW5jZSIsImZpbHRlckFwaSIsImRlZmluZVRhYmxlIiwiZGVmaW5lU2NoZW1hIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/index_range_builder.js":
/*!********************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/index_range_builder.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IndexRange: () => (/* binding */ IndexRange)\n/* harmony export */ });\n\nclass IndexRange {\n    /**\n   * @internal\n   */ constructor(){}\n} //# sourceMappingURL=index_range_builder.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbmRleF9yYW5nZV9idWlsZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBYTtBQUNOLE1BQU1BO0lBQ1g7O0dBRUMsR0FDREMsYUFBYyxDQUNkO0FBQ0YsRUFDQSwrQ0FBK0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9lcmFzb3JfY2xvbmUvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9pbmRleF9yYW5nZV9idWlsZGVyLmpzP2Y1OTMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnQgY2xhc3MgSW5kZXhSYW5nZSB7XG4gIC8qKlxuICAgKiBAaW50ZXJuYWxcbiAgICovXG4gIGNvbnN0cnVjdG9yKCkge1xuICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleF9yYW5nZV9idWlsZGVyLmpzLm1hcFxuIl0sIm5hbWVzIjpbIkluZGV4UmFuZ2UiLCJjb25zdHJ1Y3RvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/index_range_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/pagination.js":
/*!***********************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/pagination.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   paginationOptsValidator: () => (/* binding */ paginationOptsValidator)\n/* harmony export */ });\n/* harmony import */ var _values_validator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../values/validator.js */ \"(ssr)/./node_modules/convex/dist/esm/values/validator.js\");\n\n\nconst paginationOptsValidator = _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.object({\n    numItems: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.number(),\n    cursor: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.union(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.string(), _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.null()),\n    endCursor: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.optional(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.union(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.string(), _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.null())),\n    id: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.optional(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.number()),\n    maximumRowsRead: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.optional(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.number()),\n    maximumBytesRead: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.optional(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.number())\n}); //# sourceMappingURL=pagination.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9wYWdpbmF0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWE7QUFDOEI7QUFDcEMsTUFBTUMsMEJBQTBCRCxtREFBQ0EsQ0FBQ0UsTUFBTSxDQUFDO0lBQzlDQyxVQUFVSCxtREFBQ0EsQ0FBQ0ksTUFBTTtJQUNsQkMsUUFBUUwsbURBQUNBLENBQUNNLEtBQUssQ0FBQ04sbURBQUNBLENBQUNPLE1BQU0sSUFBSVAsbURBQUNBLENBQUNRLElBQUk7SUFDbENDLFdBQVdULG1EQUFDQSxDQUFDVSxRQUFRLENBQUNWLG1EQUFDQSxDQUFDTSxLQUFLLENBQUNOLG1EQUFDQSxDQUFDTyxNQUFNLElBQUlQLG1EQUFDQSxDQUFDUSxJQUFJO0lBQ2hERyxJQUFJWCxtREFBQ0EsQ0FBQ1UsUUFBUSxDQUFDVixtREFBQ0EsQ0FBQ0ksTUFBTTtJQUN2QlEsaUJBQWlCWixtREFBQ0EsQ0FBQ1UsUUFBUSxDQUFDVixtREFBQ0EsQ0FBQ0ksTUFBTTtJQUNwQ1Msa0JBQWtCYixtREFBQ0EsQ0FBQ1UsUUFBUSxDQUFDVixtREFBQ0EsQ0FBQ0ksTUFBTTtBQUN2QyxHQUFHLENBQ0gsc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXJhc29yX2Nsb25lLy4vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9zZXJ2ZXIvcGFnaW5hdGlvbi5qcz9lMTE0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuaW1wb3J0IHsgdiB9IGZyb20gXCIuLi92YWx1ZXMvdmFsaWRhdG9yLmpzXCI7XG5leHBvcnQgY29uc3QgcGFnaW5hdGlvbk9wdHNWYWxpZGF0b3IgPSB2Lm9iamVjdCh7XG4gIG51bUl0ZW1zOiB2Lm51bWJlcigpLFxuICBjdXJzb3I6IHYudW5pb24odi5zdHJpbmcoKSwgdi5udWxsKCkpLFxuICBlbmRDdXJzb3I6IHYub3B0aW9uYWwodi51bmlvbih2LnN0cmluZygpLCB2Lm51bGwoKSkpLFxuICBpZDogdi5vcHRpb25hbCh2Lm51bWJlcigpKSxcbiAgbWF4aW11bVJvd3NSZWFkOiB2Lm9wdGlvbmFsKHYubnVtYmVyKCkpLFxuICBtYXhpbXVtQnl0ZXNSZWFkOiB2Lm9wdGlvbmFsKHYubnVtYmVyKCkpXG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2luYXRpb24uanMubWFwXG4iXSwibmFtZXMiOlsidiIsInBhZ2luYXRpb25PcHRzVmFsaWRhdG9yIiwib2JqZWN0IiwibnVtSXRlbXMiLCJudW1iZXIiLCJjdXJzb3IiLCJ1bmlvbiIsInN0cmluZyIsIm51bGwiLCJlbmRDdXJzb3IiLCJvcHRpb25hbCIsImlkIiwibWF4aW11bVJvd3NSZWFkIiwibWF4aW11bUJ5dGVzUmVhZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/pagination.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/router.js":
/*!*******************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/router.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpRouter: () => (/* binding */ HttpRouter),\n/* harmony export */   ROUTABLE_HTTP_METHODS: () => (/* binding */ ROUTABLE_HTTP_METHODS),\n/* harmony export */   httpRouter: () => (/* binding */ httpRouter),\n/* harmony export */   normalizeMethod: () => (/* binding */ normalizeMethod)\n/* harmony export */ });\n/* harmony import */ var _impl_syscall_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./impl/syscall.js */ \"(ssr)/./node_modules/convex/dist/esm/server/impl/syscall.js\");\n\n\nconst ROUTABLE_HTTP_METHODS = [\n    \"GET\",\n    \"POST\",\n    \"PUT\",\n    \"DELETE\",\n    \"OPTIONS\",\n    \"PATCH\"\n];\nfunction normalizeMethod(method) {\n    if (method === \"HEAD\") return \"GET\";\n    return method;\n}\nconst httpRouter = ()=>new HttpRouter();\nclass HttpRouter {\n    constructor(){\n        this.exactRoutes = /* @__PURE__ */ new Map();\n        this.prefixRoutes = /* @__PURE__ */ new Map();\n        this.isRouter = true;\n        /**\n     * Specify an HttpAction to be used to respond to requests\n     * for an HTTP method (e.g. \"GET\") and a path or pathPrefix.\n     *\n     * Paths must begin with a slash. Path prefixes must also end in a slash.\n     *\n     * ```js\n     * // matches `/profile` (but not `/profile/`)\n     * http.route({ path: \"/profile\", method: \"GET\", handler: getProfile})\n     *\n     * // matches `/profiles/`, `/profiles/abc`, and `/profiles/a/c/b` (but not `/profile`)\n     * http.route({ pathPrefix: \"/profile/\", method: \"GET\", handler: getProfile})\n     * ```\n     */ this.route = (spec)=>{\n            if (!spec.handler) throw new Error(`route requires handler`);\n            if (!spec.method) throw new Error(`route requires method`);\n            const { method, handler } = spec;\n            if (!ROUTABLE_HTTP_METHODS.includes(method)) {\n                throw new Error(`'${method}' is not an allowed HTTP method (like GET, POST, PUT etc.)`);\n            }\n            if (\"path\" in spec) {\n                if (!spec.path.startsWith(\"/\")) {\n                    throw new Error(`path '${spec.path}' does not start with a /`);\n                }\n                const prefixes = this.prefixRoutes.get(method) || /* @__PURE__ */ new Map();\n                for (const [prefix, _] of prefixes.entries()){\n                    if (spec.path.startsWith(prefix)) {\n                        throw new Error(`${spec.method} path ${spec.path} is shadowed by pathPrefix ${prefix}`);\n                    }\n                }\n                const methods = this.exactRoutes.has(spec.path) ? this.exactRoutes.get(spec.path) : /* @__PURE__ */ new Map();\n                if (methods.has(method)) {\n                    throw new Error(`Path '${spec.path}' for method ${method} already in use`);\n                }\n                methods.set(method, handler);\n                this.exactRoutes.set(spec.path, methods);\n            } else if (\"pathPrefix\" in spec) {\n                if (!spec.pathPrefix.startsWith(\"/\")) {\n                    throw new Error(`path '${spec.pathPrefix}' does not start with a /`);\n                }\n                if (!spec.pathPrefix.endsWith(\"/\")) {\n                    throw new Error(`pathPrefix ${spec.pathPrefix} must end with a /`);\n                }\n                const prefixes = this.prefixRoutes.get(method) || /* @__PURE__ */ new Map();\n                for (const [prefix, _] of prefixes.entries()){\n                    if (spec.pathPrefix.startsWith(prefix)) {\n                        throw new Error(`${spec.method} pathPrefix ${spec.pathPrefix} is shadowed by pathPrefix ${prefix}`);\n                    }\n                }\n                prefixes.set(spec.pathPrefix, handler);\n                this.prefixRoutes.set(method, prefixes);\n            } else {\n                throw new Error(`Invalid httpRouter route entry: must contain either field 'path' or 'pathPrefix'`);\n            }\n        };\n        /**\n     * Returns a list of routed HTTP actions.\n     *\n     * These are used to populate the list of routes shown in the Functions page of the Convex dashboard.\n     *\n     * @returns - an array of [path, method, endpoint] tuples.\n     */ this.getRoutes = ()=>{\n            const exactPaths = [\n                ...this.exactRoutes.keys()\n            ].sort();\n            const exact = exactPaths.flatMap((path)=>[\n                    ...this.exactRoutes.get(path).keys()\n                ].sort().map((method)=>[\n                        path,\n                        method,\n                        this.exactRoutes.get(path).get(method)\n                    ]));\n            const prefixPathMethods = [\n                ...this.prefixRoutes.keys()\n            ].sort();\n            const prefixes = prefixPathMethods.flatMap((method)=>[\n                    ...this.prefixRoutes.get(method).keys()\n                ].sort().map((pathPrefix)=>[\n                        `${pathPrefix}*`,\n                        method,\n                        this.prefixRoutes.get(method).get(pathPrefix)\n                    ]));\n            return [\n                ...exact,\n                ...prefixes\n            ];\n        };\n        /**\n     * Returns the appropriate HTTP action and its routed request path and method.\n     *\n     * The path and method returned are used for logging and metrics, and should\n     * match up with one of the routes returned by `getRoutes`.\n     *\n     * For example,\n     *\n     * ```js\n     * http.route({ pathPrefix: \"/profile/\", method: \"GET\", handler: getProfile});\n     *\n     * http.lookup(\"/profile/abc\", \"GET\") // returns [getProfile, \"GET\", \"/profile/*\"]\n     *```\n     *\n     * @returns - a tuple [{@link PublicHttpAction}, method, path] or null.\n     */ this.lookup = (path, method)=>{\n            method = normalizeMethod(method);\n            const exactMatch = this.exactRoutes.get(path)?.get(method);\n            if (exactMatch) return [\n                exactMatch,\n                method,\n                path\n            ];\n            const prefixes = this.prefixRoutes.get(method) || /* @__PURE__ */ new Map();\n            for (const [pathPrefix, endpoint] of prefixes.entries()){\n                if (path.startsWith(pathPrefix)) {\n                    return [\n                        endpoint,\n                        method,\n                        `${pathPrefix}*`\n                    ];\n                }\n            }\n            return null;\n        };\n        /**\n     * Given a JSON string representation of a Request object, return a Response\n     * by routing the request and running the appropriate endpoint or returning\n     * a 404 Response.\n     *\n     * @param argsStr - a JSON string representing a Request object.\n     *\n     * @returns - a Response object.\n     */ this.runRequest = async (argsStr)=>{\n            const request = (0,_impl_syscall_js__WEBPACK_IMPORTED_MODULE_0__.performJsSyscall)(\"requestFromConvexJson\", {\n                convexJson: JSON.parse(argsStr)\n            });\n            const pathname = new URL(request.url).pathname;\n            const method = request.method;\n            const match = this.lookup(pathname, method);\n            if (!match) {\n                const response2 = new Response(`No HttpAction routed for ${pathname}`, {\n                    status: 404\n                });\n                return JSON.stringify((0,_impl_syscall_js__WEBPACK_IMPORTED_MODULE_0__.performJsSyscall)(\"convexJsonFromResponse\", {\n                    response: response2\n                }));\n            }\n            const [endpoint, _method, _path] = match;\n            const response = await endpoint.invokeHttpAction(request);\n            return JSON.stringify((0,_impl_syscall_js__WEBPACK_IMPORTED_MODULE_0__.performJsSyscall)(\"convexJsonFromResponse\", {\n                response\n            }));\n        };\n    }\n} //# sourceMappingURL=router.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/router.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/schema.js":
/*!*******************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/schema.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SchemaDefinition: () => (/* binding */ SchemaDefinition),\n/* harmony export */   TableDefinition: () => (/* binding */ TableDefinition),\n/* harmony export */   defineSchema: () => (/* binding */ defineSchema),\n/* harmony export */   defineTable: () => (/* binding */ defineTable)\n/* harmony export */ });\n/* harmony import */ var _values_validator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../values/validator.js */ \"(ssr)/./node_modules/convex/dist/esm/values/validator.js\");\n\n\nclass TableDefinition {\n    /**\n   * @internal\n   */ constructor(documentType){\n        this.indexes = [];\n        this.searchIndexes = [];\n        this.vectorIndexes = [];\n        this.documentType = documentType;\n    }\n    /**\n   * Define an index on this table.\n   *\n   * To learn about indexes, see [Defining Indexes](https://docs.convex.dev/using/indexes).\n   *\n   * @param name - The name of the index.\n   * @param fields - The fields to index, in order. Must specify at least one\n   * field.\n   * @returns A {@link TableDefinition} with this index included.\n   */ index(name, fields) {\n        this.indexes.push({\n            indexDescriptor: name,\n            fields\n        });\n        return this;\n    }\n    /**\n   * Define a search index on this table.\n   *\n   * To learn about search indexes, see [Search](https://docs.convex.dev/text-search).\n   *\n   * @param name - The name of the index.\n   * @param indexConfig - The search index configuration object.\n   * @returns A {@link TableDefinition} with this search index included.\n   */ searchIndex(name, indexConfig) {\n        this.searchIndexes.push({\n            indexDescriptor: name,\n            searchField: indexConfig.searchField,\n            filterFields: indexConfig.filterFields || []\n        });\n        return this;\n    }\n    /**\n   * Define a vector index on this table.\n   *\n   * To learn about vector indexes, see [Vector Search](https://docs.convex.dev/vector-search).\n   *\n   * @param name - The name of the index.\n   * @param indexConfig - The vector index configuration object.\n   * @returns A {@link TableDefinition} with this vector index included.\n   */ vectorIndex(name, indexConfig) {\n        this.vectorIndexes.push({\n            indexDescriptor: name,\n            vectorField: indexConfig.vectorField,\n            dimensions: indexConfig.dimensions,\n            filterFields: indexConfig.filterFields || []\n        });\n        return this;\n    }\n    /**\n   * Work around for https://github.com/microsoft/TypeScript/issues/57035\n   */ self() {\n        return this;\n    }\n    /**\n   * Export the contents of this definition.\n   *\n   * This is called internally by the Convex framework.\n   * @internal\n   */ export() {\n        return {\n            indexes: this.indexes,\n            searchIndexes: this.searchIndexes,\n            vectorIndexes: this.vectorIndexes,\n            documentType: this.documentType.json\n        };\n    }\n}\nfunction defineTable(documentSchema) {\n    if (documentSchema instanceof _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.Validator) {\n        return new TableDefinition(documentSchema);\n    } else {\n        return new TableDefinition(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.object(documentSchema));\n    }\n}\nclass SchemaDefinition {\n    /**\n   * @internal\n   */ constructor(tables, options){\n        this.tables = tables;\n        this.schemaValidation = options?.schemaValidation === void 0 ? true : options.schemaValidation;\n    }\n    /**\n   * Export the contents of this definition.\n   *\n   * This is called internally by the Convex framework.\n   * @internal\n   */ export() {\n        return JSON.stringify({\n            tables: Object.entries(this.tables).map(([tableName, definition])=>{\n                const { indexes, searchIndexes, vectorIndexes, documentType } = definition.export();\n                return {\n                    tableName,\n                    indexes,\n                    searchIndexes,\n                    vectorIndexes,\n                    documentType\n                };\n            }),\n            schemaValidation: this.schemaValidation\n        });\n    }\n}\nfunction defineSchema(schema, options) {\n    return new SchemaDefinition(schema, options);\n}\nconst systemSchema = defineSchema({\n    _scheduled_functions: defineTable({\n        name: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.string(),\n        args: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.array(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.any()),\n        scheduledTime: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.float64(),\n        completedTime: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.optional(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.float64()),\n        state: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.union(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.object({\n            kind: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.literal(\"pending\")\n        }), _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.object({\n            kind: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.literal(\"inProgress\")\n        }), _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.object({\n            kind: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.literal(\"success\")\n        }), _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.object({\n            kind: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.literal(\"failed\"),\n            error: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.string()\n        }), _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.object({\n            kind: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.literal(\"canceled\")\n        }))\n    }),\n    _storage: defineTable({\n        sha256: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.string(),\n        size: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.float64(),\n        contentType: _values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.optional(_values_validator_js__WEBPACK_IMPORTED_MODULE_0__.v.string())\n    })\n}); //# sourceMappingURL=schema.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/schema.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/search_filter_builder.js":
/*!**********************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/search_filter_builder.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SearchFilter: () => (/* binding */ SearchFilter)\n/* harmony export */ });\n\nclass SearchFilter {\n    /**\n   * @internal\n   */ constructor(){}\n} //# sourceMappingURL=search_filter_builder.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9zZWFyY2hfZmlsdGVyX2J1aWxkZXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFhO0FBQ04sTUFBTUE7SUFDWDs7R0FFQyxHQUNEQyxhQUFjLENBQ2Q7QUFDRixFQUNBLGlEQUFpRCIsInNvdXJjZXMiOlsid2VicGFjazovL2VyYXNvcl9jbG9uZS8uL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vc2VydmVyL3NlYXJjaF9maWx0ZXJfYnVpbGRlci5qcz82MGZjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuZXhwb3J0IGNsYXNzIFNlYXJjaEZpbHRlciB7XG4gIC8qKlxuICAgKiBAaW50ZXJuYWxcbiAgICovXG4gIGNvbnN0cnVjdG9yKCkge1xuICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZWFyY2hfZmlsdGVyX2J1aWxkZXIuanMubWFwXG4iXSwibmFtZXMiOlsiU2VhcmNoRmlsdGVyIiwiY29uc3RydWN0b3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/search_filter_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/storage.js":
/*!********************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/storage.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=storage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9zdG9yYWdlLmpzIiwibWFwcGluZ3MiOiI7QUFBYSxDQUNiLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL2VyYXNvcl9jbG9uZS8uL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vc2VydmVyL3N0b3JhZ2UuanM/NTZjMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0b3JhZ2UuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/storage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/vector_search.js":
/*!**************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/vector_search.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FilterExpression: () => (/* binding */ FilterExpression)\n/* harmony export */ });\n\nclass FilterExpression {\n    /**\n   * @internal\n   */ constructor(){}\n} //# sourceMappingURL=vector_search.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci92ZWN0b3Jfc2VhcmNoLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBYTtBQUNOLE1BQU1BO0lBQ1g7O0dBRUMsR0FDREMsYUFBYyxDQUNkO0FBQ0YsRUFDQSx5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9lcmFzb3JfY2xvbmUvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci92ZWN0b3Jfc2VhcmNoLmpzP2Q0YzEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnQgY2xhc3MgRmlsdGVyRXhwcmVzc2lvbiB7XG4gIC8qKlxuICAgKiBAaW50ZXJuYWxcbiAgICovXG4gIGNvbnN0cnVjdG9yKCkge1xuICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZWN0b3Jfc2VhcmNoLmpzLm1hcFxuIl0sIm5hbWVzIjpbIkZpbHRlckV4cHJlc3Npb24iLCJjb25zdHJ1Y3RvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/vector_search.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/values/base64.js":
/*!*******************************************************!*\
  !*** ./node_modules/convex/dist/esm/values/base64.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   byteLength: () => (/* binding */ byteLength),\n/* harmony export */   fromByteArray: () => (/* binding */ fromByteArray),\n/* harmony export */   toByteArray: () => (/* binding */ toByteArray)\n/* harmony export */ });\n\nvar lookup = [];\nvar revLookup = [];\nvar Arr = Uint8Array;\nvar code = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nfor(var i = 0, len = code.length; i < len; ++i){\n    lookup[i] = code[i];\n    revLookup[code.charCodeAt(i)] = i;\n}\nrevLookup[\"-\".charCodeAt(0)] = 62;\nrevLookup[\"_\".charCodeAt(0)] = 63;\nfunction getLens(b64) {\n    var len = b64.length;\n    if (len % 4 > 0) {\n        throw new Error(\"Invalid string. Length must be a multiple of 4\");\n    }\n    var validLen = b64.indexOf(\"=\");\n    if (validLen === -1) validLen = len;\n    var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n    return [\n        validLen,\n        placeHoldersLen\n    ];\n}\nfunction byteLength(b64) {\n    var lens = getLens(b64);\n    var validLen = lens[0];\n    var placeHoldersLen = lens[1];\n    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\nfunction _byteLength(_b64, validLen, placeHoldersLen) {\n    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\nfunction toByteArray(b64) {\n    var tmp;\n    var lens = getLens(b64);\n    var validLen = lens[0];\n    var placeHoldersLen = lens[1];\n    var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n    var curByte = 0;\n    var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n    var i;\n    for(i = 0; i < len; i += 4){\n        tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n        arr[curByte++] = tmp >> 16 & 255;\n        arr[curByte++] = tmp >> 8 & 255;\n        arr[curByte++] = tmp & 255;\n    }\n    if (placeHoldersLen === 2) {\n        tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n        arr[curByte++] = tmp & 255;\n    }\n    if (placeHoldersLen === 1) {\n        tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n        arr[curByte++] = tmp >> 8 & 255;\n        arr[curByte++] = tmp & 255;\n    }\n    return arr;\n}\nfunction tripletToBase64(num) {\n    return lookup[num >> 18 & 63] + lookup[num >> 12 & 63] + lookup[num >> 6 & 63] + lookup[num & 63];\n}\nfunction encodeChunk(uint8, start, end) {\n    var tmp;\n    var output = [];\n    for(var i = start; i < end; i += 3){\n        tmp = (uint8[i] << 16 & 16711680) + (uint8[i + 1] << 8 & 65280) + (uint8[i + 2] & 255);\n        output.push(tripletToBase64(tmp));\n    }\n    return output.join(\"\");\n}\nfunction fromByteArray(uint8) {\n    var tmp;\n    var len = uint8.length;\n    var extraBytes = len % 3;\n    var parts = [];\n    var maxChunkLength = 16383;\n    for(var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength){\n        parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n    }\n    if (extraBytes === 1) {\n        tmp = uint8[len - 1];\n        parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 63] + \"==\");\n    } else if (extraBytes === 2) {\n        tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n        parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 63] + lookup[tmp << 2 & 63] + \"=\");\n    }\n    return parts.join(\"\");\n} //# sourceMappingURL=base64.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/values/base64.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/values/errors.js":
/*!*******************************************************!*\
  !*** ./node_modules/convex/dist/esm/values/errors.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConvexError: () => (/* binding */ ConvexError)\n/* harmony export */ });\n/* harmony import */ var _value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value.js */ \"(ssr)/./node_modules/convex/dist/esm/values/value.js\");\n\nvar _a;\n\nconst IDENTIFYING_FIELD = Symbol.for(\"ConvexError\");\nclass ConvexError extends Error {\n    constructor(data){\n        super(typeof data === \"string\" ? data : (0,_value_js__WEBPACK_IMPORTED_MODULE_0__.stringifyValueForError)(data));\n        this.name = \"ConvexError\";\n        this[_a] = true;\n        this.data = data;\n    }\n}\n_a = IDENTIFYING_FIELD; //# sourceMappingURL=errors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3ZhbHVlcy9lcnJvcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBYTtBQUNiLElBQUlBO0FBQ2dEO0FBQ3BELE1BQU1FLG9CQUFvQkMsT0FBT0MsR0FBRyxDQUFDO0FBQzlCLE1BQU1DLG9CQUFvQkM7SUFDL0JDLFlBQVlDLElBQUksQ0FBRTtRQUNoQixLQUFLLENBQUMsT0FBT0EsU0FBUyxXQUFXQSxPQUFPUCxpRUFBc0JBLENBQUNPO1FBQy9ELElBQUksQ0FBQ0MsSUFBSSxHQUFHO1FBQ1osSUFBSSxDQUFDVCxHQUFHLEdBQUc7UUFDWCxJQUFJLENBQUNRLElBQUksR0FBR0E7SUFDZDtBQUNGO0FBQ0FSLEtBQUtFLG1CQUNMLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL2VyYXNvcl9jbG9uZS8uL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vdmFsdWVzL2Vycm9ycy5qcz81OWQ4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9hO1xuaW1wb3J0IHsgc3RyaW5naWZ5VmFsdWVGb3JFcnJvciB9IGZyb20gXCIuL3ZhbHVlLmpzXCI7XG5jb25zdCBJREVOVElGWUlOR19GSUVMRCA9IFN5bWJvbC5mb3IoXCJDb252ZXhFcnJvclwiKTtcbmV4cG9ydCBjbGFzcyBDb252ZXhFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgY29uc3RydWN0b3IoZGF0YSkge1xuICAgIHN1cGVyKHR5cGVvZiBkYXRhID09PSBcInN0cmluZ1wiID8gZGF0YSA6IHN0cmluZ2lmeVZhbHVlRm9yRXJyb3IoZGF0YSkpO1xuICAgIHRoaXMubmFtZSA9IFwiQ29udmV4RXJyb3JcIjtcbiAgICB0aGlzW19hXSA9IHRydWU7XG4gICAgdGhpcy5kYXRhID0gZGF0YTtcbiAgfVxufVxuX2EgPSBJREVOVElGWUlOR19GSUVMRDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9ycy5qcy5tYXBcbiJdLCJuYW1lcyI6WyJfYSIsInN0cmluZ2lmeVZhbHVlRm9yRXJyb3IiLCJJREVOVElGWUlOR19GSUVMRCIsIlN5bWJvbCIsImZvciIsIkNvbnZleEVycm9yIiwiRXJyb3IiLCJjb25zdHJ1Y3RvciIsImRhdGEiLCJuYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/values/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/values/index.js":
/*!******************************************************!*\
  !*** ./node_modules/convex/dist/esm/values/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Base64: () => (/* reexport module object */ _base64_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   ConvexError: () => (/* reexport safe */ _errors_js__WEBPACK_IMPORTED_MODULE_3__.ConvexError),\n/* harmony export */   Validator: () => (/* reexport safe */ _validator_js__WEBPACK_IMPORTED_MODULE_1__.Validator),\n/* harmony export */   convexToJson: () => (/* reexport safe */ _value_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson),\n/* harmony export */   jsonToConvex: () => (/* reexport safe */ _value_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex),\n/* harmony export */   v: () => (/* reexport safe */ _validator_js__WEBPACK_IMPORTED_MODULE_1__.v)\n/* harmony export */ });\n/* harmony import */ var _value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value.js */ \"(ssr)/./node_modules/convex/dist/esm/values/value.js\");\n/* harmony import */ var _validator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./validator.js */ \"(ssr)/./node_modules/convex/dist/esm/values/validator.js\");\n/* harmony import */ var _base64_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base64.js */ \"(ssr)/./node_modules/convex/dist/esm/values/base64.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errors.js */ \"(ssr)/./node_modules/convex/dist/esm/values/errors.js\");\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3ZhbHVlcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQWE7QUFDMkM7QUFDVjtBQUNSO0FBQ3BCO0FBQ1UsQ0FDNUIsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXJhc29yX2Nsb25lLy4vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS92YWx1ZXMvaW5kZXguanM/NDA1MiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmV4cG9ydCB7IGNvbnZleFRvSnNvbiwganNvblRvQ29udmV4IH0gZnJvbSBcIi4vdmFsdWUuanNcIjtcbmV4cG9ydCB7IHYsIFZhbGlkYXRvciB9IGZyb20gXCIuL3ZhbGlkYXRvci5qc1wiO1xuaW1wb3J0ICogYXMgQmFzZTY0IGZyb20gXCIuL2Jhc2U2NC5qc1wiO1xuZXhwb3J0IHsgQmFzZTY0IH07XG5leHBvcnQgKiBmcm9tIFwiLi9lcnJvcnMuanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcFxuIl0sIm5hbWVzIjpbImNvbnZleFRvSnNvbiIsImpzb25Ub0NvbnZleCIsInYiLCJWYWxpZGF0b3IiLCJCYXNlNjQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/values/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/values/validator.js":
/*!**********************************************************!*\
  !*** ./node_modules/convex/dist/esm/values/validator.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Validator: () => (/* binding */ Validator),\n/* harmony export */   v: () => (/* binding */ v)\n/* harmony export */ });\n/* harmony import */ var _value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value.js */ \"(ssr)/./node_modules/convex/dist/esm/values/value.js\");\n\n\nclass Validator {\n    /**\n   * @internal\n   */ constructor(json, optional){\n        this.json = json;\n        this.optional = optional;\n    }\n}\nconst v = {\n    id (tableName) {\n        return new Validator({\n            type: \"id\",\n            tableName\n        }, false);\n    },\n    null () {\n        return new Validator({\n            type: \"null\"\n        }, false);\n    },\n    /**\n   * Alias for `v.float64()`\n   */ number () {\n        return new Validator({\n            type: \"number\"\n        }, false);\n    },\n    float64 () {\n        return new Validator({\n            type: \"number\"\n        }, false);\n    },\n    /**\n   * @deprecated Use `v.int64()` instead\n   */ bigint () {\n        return new Validator({\n            type: \"bigint\"\n        }, false);\n    },\n    int64 () {\n        return new Validator({\n            type: \"bigint\"\n        }, false);\n    },\n    boolean () {\n        return new Validator({\n            type: \"boolean\"\n        }, false);\n    },\n    string () {\n        return new Validator({\n            type: \"string\"\n        }, false);\n    },\n    bytes () {\n        return new Validator({\n            type: \"bytes\"\n        }, false);\n    },\n    literal (literal) {\n        const value = (0,_value_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(literal);\n        return new Validator({\n            type: \"literal\",\n            value\n        }, false);\n    },\n    array (values) {\n        return new Validator({\n            type: \"array\",\n            value: values.json\n        }, false);\n    },\n    object (schema) {\n        return new Validator({\n            type: \"object\",\n            value: Object.fromEntries(Object.entries(schema).map(([k, v2])=>[\n                    k,\n                    {\n                        fieldType: v2.json,\n                        optional: v2.optional\n                    }\n                ]))\n        }, false);\n    },\n    /** @internal */ record (keys, values) {\n        return new Validator({\n            type: \"record\",\n            keys: keys.json,\n            values: {\n                fieldType: values.json,\n                optional: values.optional\n            }\n        }, false);\n    },\n    union (...schemaTypes) {\n        return new Validator({\n            type: \"union\",\n            value: schemaTypes.map((t)=>t.json)\n        }, false);\n    },\n    any () {\n        return new Validator({\n            type: \"any\"\n        }, false);\n    },\n    optional (inner) {\n        return new Validator(inner.json, true);\n    }\n}; //# sourceMappingURL=validator.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3ZhbHVlcy92YWxpZGF0b3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWE7QUFDNkI7QUFDbkMsTUFBTUM7SUFDWDs7R0FFQyxHQUNEQyxZQUFZQyxJQUFJLEVBQUVDLFFBQVEsQ0FBRTtRQUMxQixJQUFJLENBQUNELElBQUksR0FBR0E7UUFDWixJQUFJLENBQUNDLFFBQVEsR0FBR0E7SUFDbEI7QUFDRjtBQUNPLE1BQU1DLElBQUk7SUFDZkMsSUFBR0MsU0FBUztRQUNWLE9BQU8sSUFBSU4sVUFBVTtZQUFFTyxNQUFNO1lBQU1EO1FBQVUsR0FBRztJQUNsRDtJQUNBRTtRQUNFLE9BQU8sSUFBSVIsVUFBVTtZQUFFTyxNQUFNO1FBQU8sR0FBRztJQUN6QztJQUNBOztHQUVDLEdBQ0RFO1FBQ0UsT0FBTyxJQUFJVCxVQUFVO1lBQUVPLE1BQU07UUFBUyxHQUFHO0lBQzNDO0lBQ0FHO1FBQ0UsT0FBTyxJQUFJVixVQUFVO1lBQUVPLE1BQU07UUFBUyxHQUFHO0lBQzNDO0lBQ0E7O0dBRUMsR0FDREk7UUFDRSxPQUFPLElBQUlYLFVBQVU7WUFBRU8sTUFBTTtRQUFTLEdBQUc7SUFDM0M7SUFDQUs7UUFDRSxPQUFPLElBQUlaLFVBQVU7WUFBRU8sTUFBTTtRQUFTLEdBQUc7SUFDM0M7SUFDQU07UUFDRSxPQUFPLElBQUliLFVBQVU7WUFBRU8sTUFBTTtRQUFVLEdBQUc7SUFDNUM7SUFDQU87UUFDRSxPQUFPLElBQUlkLFVBQVU7WUFBRU8sTUFBTTtRQUFTLEdBQUc7SUFDM0M7SUFDQVE7UUFDRSxPQUFPLElBQUlmLFVBQVU7WUFBRU8sTUFBTTtRQUFRLEdBQUc7SUFDMUM7SUFDQVMsU0FBUUEsT0FBTztRQUNiLE1BQU1DLFFBQVFsQix1REFBWUEsQ0FBQ2lCO1FBQzNCLE9BQU8sSUFBSWhCLFVBQVU7WUFBRU8sTUFBTTtZQUFXVTtRQUFNLEdBQUc7SUFDbkQ7SUFDQUMsT0FBTUMsTUFBTTtRQUNWLE9BQU8sSUFBSW5CLFVBQVU7WUFBRU8sTUFBTTtZQUFTVSxPQUFPRSxPQUFPakIsSUFBSTtRQUFDLEdBQUc7SUFDOUQ7SUFDQWtCLFFBQU9DLE1BQU07UUFDWCxPQUFPLElBQUlyQixVQUNUO1lBQ0VPLE1BQU07WUFDTlUsT0FBT0ssT0FBT0MsV0FBVyxDQUN2QkQsT0FBT0UsT0FBTyxDQUFDSCxRQUFRSSxHQUFHLENBQUMsQ0FBQyxDQUFDQyxHQUFHQyxHQUFHLEdBQUs7b0JBQ3RDRDtvQkFDQTt3QkFBRUUsV0FBV0QsR0FBR3pCLElBQUk7d0JBQUVDLFVBQVV3QixHQUFHeEIsUUFBUTtvQkFBQztpQkFDN0M7UUFFTCxHQUNBO0lBRUo7SUFDQSxjQUFjLEdBQ2QwQixRQUFPQyxJQUFJLEVBQUVYLE1BQU07UUFDakIsT0FBTyxJQUFJbkIsVUFDVDtZQUNFTyxNQUFNO1lBQ051QixNQUFNQSxLQUFLNUIsSUFBSTtZQUNmaUIsUUFBUTtnQkFBRVMsV0FBV1QsT0FBT2pCLElBQUk7Z0JBQUVDLFVBQVVnQixPQUFPaEIsUUFBUTtZQUFDO1FBQzlELEdBQ0E7SUFFSjtJQUNBNEIsT0FBTSxHQUFHQyxXQUFXO1FBQ2xCLE9BQU8sSUFBSWhDLFVBQ1Q7WUFDRU8sTUFBTTtZQUNOVSxPQUFPZSxZQUFZUCxHQUFHLENBQUMsQ0FBQ1EsSUFBTUEsRUFBRS9CLElBQUk7UUFDdEMsR0FDQTtJQUVKO0lBQ0FnQztRQUNFLE9BQU8sSUFBSWxDLFVBQVU7WUFBRU8sTUFBTTtRQUFNLEdBQUc7SUFDeEM7SUFDQUosVUFBU2dDLEtBQUs7UUFDWixPQUFPLElBQUluQyxVQUFVbUMsTUFBTWpDLElBQUksRUFBRTtJQUNuQztBQUNGLEVBQUUsQ0FDRixxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9lcmFzb3JfY2xvbmUvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3ZhbHVlcy92YWxpZGF0b3IuanM/ZDU5OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmltcG9ydCB7IGNvbnZleFRvSnNvbiB9IGZyb20gXCIuL3ZhbHVlLmpzXCI7XG5leHBvcnQgY2xhc3MgVmFsaWRhdG9yIHtcbiAgLyoqXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cbiAgY29uc3RydWN0b3IoanNvbiwgb3B0aW9uYWwpIHtcbiAgICB0aGlzLmpzb24gPSBqc29uO1xuICAgIHRoaXMub3B0aW9uYWwgPSBvcHRpb25hbDtcbiAgfVxufVxuZXhwb3J0IGNvbnN0IHYgPSB7XG4gIGlkKHRhYmxlTmFtZSkge1xuICAgIHJldHVybiBuZXcgVmFsaWRhdG9yKHsgdHlwZTogXCJpZFwiLCB0YWJsZU5hbWUgfSwgZmFsc2UpO1xuICB9LFxuICBudWxsKCkge1xuICAgIHJldHVybiBuZXcgVmFsaWRhdG9yKHsgdHlwZTogXCJudWxsXCIgfSwgZmFsc2UpO1xuICB9LFxuICAvKipcbiAgICogQWxpYXMgZm9yIGB2LmZsb2F0NjQoKWBcbiAgICovXG4gIG51bWJlcigpIHtcbiAgICByZXR1cm4gbmV3IFZhbGlkYXRvcih7IHR5cGU6IFwibnVtYmVyXCIgfSwgZmFsc2UpO1xuICB9LFxuICBmbG9hdDY0KCkge1xuICAgIHJldHVybiBuZXcgVmFsaWRhdG9yKHsgdHlwZTogXCJudW1iZXJcIiB9LCBmYWxzZSk7XG4gIH0sXG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCBVc2UgYHYuaW50NjQoKWAgaW5zdGVhZFxuICAgKi9cbiAgYmlnaW50KCkge1xuICAgIHJldHVybiBuZXcgVmFsaWRhdG9yKHsgdHlwZTogXCJiaWdpbnRcIiB9LCBmYWxzZSk7XG4gIH0sXG4gIGludDY0KCkge1xuICAgIHJldHVybiBuZXcgVmFsaWRhdG9yKHsgdHlwZTogXCJiaWdpbnRcIiB9LCBmYWxzZSk7XG4gIH0sXG4gIGJvb2xlYW4oKSB7XG4gICAgcmV0dXJuIG5ldyBWYWxpZGF0b3IoeyB0eXBlOiBcImJvb2xlYW5cIiB9LCBmYWxzZSk7XG4gIH0sXG4gIHN0cmluZygpIHtcbiAgICByZXR1cm4gbmV3IFZhbGlkYXRvcih7IHR5cGU6IFwic3RyaW5nXCIgfSwgZmFsc2UpO1xuICB9LFxuICBieXRlcygpIHtcbiAgICByZXR1cm4gbmV3IFZhbGlkYXRvcih7IHR5cGU6IFwiYnl0ZXNcIiB9LCBmYWxzZSk7XG4gIH0sXG4gIGxpdGVyYWwobGl0ZXJhbCkge1xuICAgIGNvbnN0IHZhbHVlID0gY29udmV4VG9Kc29uKGxpdGVyYWwpO1xuICAgIHJldHVybiBuZXcgVmFsaWRhdG9yKHsgdHlwZTogXCJsaXRlcmFsXCIsIHZhbHVlIH0sIGZhbHNlKTtcbiAgfSxcbiAgYXJyYXkodmFsdWVzKSB7XG4gICAgcmV0dXJuIG5ldyBWYWxpZGF0b3IoeyB0eXBlOiBcImFycmF5XCIsIHZhbHVlOiB2YWx1ZXMuanNvbiB9LCBmYWxzZSk7XG4gIH0sXG4gIG9iamVjdChzY2hlbWEpIHtcbiAgICByZXR1cm4gbmV3IFZhbGlkYXRvcihcbiAgICAgIHtcbiAgICAgICAgdHlwZTogXCJvYmplY3RcIixcbiAgICAgICAgdmFsdWU6IE9iamVjdC5mcm9tRW50cmllcyhcbiAgICAgICAgICBPYmplY3QuZW50cmllcyhzY2hlbWEpLm1hcCgoW2ssIHYyXSkgPT4gW1xuICAgICAgICAgICAgayxcbiAgICAgICAgICAgIHsgZmllbGRUeXBlOiB2Mi5qc29uLCBvcHRpb25hbDogdjIub3B0aW9uYWwgfVxuICAgICAgICAgIF0pXG4gICAgICAgIClcbiAgICAgIH0sXG4gICAgICBmYWxzZVxuICAgICk7XG4gIH0sXG4gIC8qKiBAaW50ZXJuYWwgKi9cbiAgcmVjb3JkKGtleXMsIHZhbHVlcykge1xuICAgIHJldHVybiBuZXcgVmFsaWRhdG9yKFxuICAgICAge1xuICAgICAgICB0eXBlOiBcInJlY29yZFwiLFxuICAgICAgICBrZXlzOiBrZXlzLmpzb24sXG4gICAgICAgIHZhbHVlczogeyBmaWVsZFR5cGU6IHZhbHVlcy5qc29uLCBvcHRpb25hbDogdmFsdWVzLm9wdGlvbmFsIH1cbiAgICAgIH0sXG4gICAgICBmYWxzZVxuICAgICk7XG4gIH0sXG4gIHVuaW9uKC4uLnNjaGVtYVR5cGVzKSB7XG4gICAgcmV0dXJuIG5ldyBWYWxpZGF0b3IoXG4gICAgICB7XG4gICAgICAgIHR5cGU6IFwidW5pb25cIixcbiAgICAgICAgdmFsdWU6IHNjaGVtYVR5cGVzLm1hcCgodCkgPT4gdC5qc29uKVxuICAgICAgfSxcbiAgICAgIGZhbHNlXG4gICAgKTtcbiAgfSxcbiAgYW55KCkge1xuICAgIHJldHVybiBuZXcgVmFsaWRhdG9yKHsgdHlwZTogXCJhbnlcIiB9LCBmYWxzZSk7XG4gIH0sXG4gIG9wdGlvbmFsKGlubmVyKSB7XG4gICAgcmV0dXJuIG5ldyBWYWxpZGF0b3IoaW5uZXIuanNvbiwgdHJ1ZSk7XG4gIH1cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD12YWxpZGF0b3IuanMubWFwXG4iXSwibmFtZXMiOlsiY29udmV4VG9Kc29uIiwiVmFsaWRhdG9yIiwiY29uc3RydWN0b3IiLCJqc29uIiwib3B0aW9uYWwiLCJ2IiwiaWQiLCJ0YWJsZU5hbWUiLCJ0eXBlIiwibnVsbCIsIm51bWJlciIsImZsb2F0NjQiLCJiaWdpbnQiLCJpbnQ2NCIsImJvb2xlYW4iLCJzdHJpbmciLCJieXRlcyIsImxpdGVyYWwiLCJ2YWx1ZSIsImFycmF5IiwidmFsdWVzIiwib2JqZWN0Iiwic2NoZW1hIiwiT2JqZWN0IiwiZnJvbUVudHJpZXMiLCJlbnRyaWVzIiwibWFwIiwiayIsInYyIiwiZmllbGRUeXBlIiwicmVjb3JkIiwia2V5cyIsInVuaW9uIiwic2NoZW1hVHlwZXMiLCJ0IiwiYW55IiwiaW5uZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/values/validator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/values/value.js":
/*!******************************************************!*\
  !*** ./node_modules/convex/dist/esm/values/value.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64ToBigInt: () => (/* binding */ base64ToBigInt),\n/* harmony export */   bigIntToBase64: () => (/* binding */ bigIntToBase64),\n/* harmony export */   convexOrUndefinedToJson: () => (/* binding */ convexOrUndefinedToJson),\n/* harmony export */   convexToJson: () => (/* binding */ convexToJson),\n/* harmony export */   jsonToConvex: () => (/* binding */ jsonToConvex),\n/* harmony export */   modernBase64ToBigInt: () => (/* binding */ modernBase64ToBigInt),\n/* harmony export */   modernBigIntToBase64: () => (/* binding */ modernBigIntToBase64),\n/* harmony export */   patchValueToJson: () => (/* binding */ patchValueToJson),\n/* harmony export */   slowBase64ToBigInt: () => (/* binding */ slowBase64ToBigInt),\n/* harmony export */   slowBigIntToBase64: () => (/* binding */ slowBigIntToBase64),\n/* harmony export */   stringifyValueForError: () => (/* binding */ stringifyValueForError)\n/* harmony export */ });\n/* harmony import */ var _base64_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base64.js */ \"(ssr)/./node_modules/convex/dist/esm/values/base64.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/index.js */ \"(ssr)/./node_modules/convex/dist/esm/common/index.js\");\n\n\n\nconst LITTLE_ENDIAN = true;\nconst MIN_INT64 = BigInt(\"-9223372036854775808\");\nconst MAX_INT64 = BigInt(\"9223372036854775807\");\nconst ZERO = BigInt(\"0\");\nconst EIGHT = BigInt(\"8\");\nconst TWOFIFTYSIX = BigInt(\"256\");\nfunction isSpecial(n) {\n    return Number.isNaN(n) || !Number.isFinite(n) || Object.is(n, -0);\n}\nfunction slowBigIntToBase64(value) {\n    if (value < ZERO) {\n        value -= MIN_INT64 + MIN_INT64;\n    }\n    let hex = value.toString(16);\n    if (hex.length % 2 === 1) hex = \"0\" + hex;\n    const bytes = new Uint8Array(new ArrayBuffer(8));\n    let i = 0;\n    for (const hexByte of hex.match(/.{2}/g).reverse()){\n        bytes.set([\n            parseInt(hexByte, 16)\n        ], i++);\n        value >>= EIGHT;\n    }\n    return _base64_js__WEBPACK_IMPORTED_MODULE_0__.fromByteArray(bytes);\n}\nfunction slowBase64ToBigInt(encoded) {\n    const integerBytes = _base64_js__WEBPACK_IMPORTED_MODULE_0__.toByteArray(encoded);\n    if (integerBytes.byteLength !== 8) {\n        throw new Error(`Received ${integerBytes.byteLength} bytes, expected 8 for $integer`);\n    }\n    let value = ZERO;\n    let power = ZERO;\n    for (const byte of integerBytes){\n        value += BigInt(byte) * TWOFIFTYSIX ** power;\n        power++;\n    }\n    if (value > MAX_INT64) {\n        value += MIN_INT64 + MIN_INT64;\n    }\n    return value;\n}\nfunction modernBigIntToBase64(value) {\n    if (value < MIN_INT64 || MAX_INT64 < value) {\n        throw new Error(`BigInt ${value} does not fit into a 64-bit signed integer.`);\n    }\n    const buffer = new ArrayBuffer(8);\n    new DataView(buffer).setBigInt64(0, value, true);\n    return _base64_js__WEBPACK_IMPORTED_MODULE_0__.fromByteArray(new Uint8Array(buffer));\n}\nfunction modernBase64ToBigInt(encoded) {\n    const integerBytes = _base64_js__WEBPACK_IMPORTED_MODULE_0__.toByteArray(encoded);\n    if (integerBytes.byteLength !== 8) {\n        throw new Error(`Received ${integerBytes.byteLength} bytes, expected 8 for $integer`);\n    }\n    const intBytesView = new DataView(integerBytes.buffer);\n    return intBytesView.getBigInt64(0, true);\n}\nconst bigIntToBase64 = DataView.prototype.setBigInt64 ? modernBigIntToBase64 : slowBigIntToBase64;\nconst base64ToBigInt = DataView.prototype.getBigInt64 ? modernBase64ToBigInt : slowBase64ToBigInt;\nconst MAX_IDENTIFIER_LEN = 1024;\nfunction validateObjectField(k) {\n    if (k.length === 0) {\n        throw new Error(\"Empty field names are disallowed.\");\n    }\n    if (k.length > MAX_IDENTIFIER_LEN) {\n        throw new Error(`Field name ${k} exceeds maximum field name length ${MAX_IDENTIFIER_LEN}.`);\n    }\n    if (k.startsWith(\"$\")) {\n        throw new Error(`Field name ${k} starts with a '$', which is reserved.`);\n    }\n    for(let i = 0; i < k.length; i += 1){\n        const charCode = k.charCodeAt(i);\n        if (charCode < 32 || charCode >= 127) {\n            throw new Error(`Field name ${k} has invalid character '${k[i]}': Field names can only contain non-control ASCII characters`);\n        }\n    }\n}\nfunction jsonToConvexInternal(value, allowMapsAndSets) {\n    if (value === null) {\n        return value;\n    }\n    if (typeof value === \"boolean\") {\n        return value;\n    }\n    if (typeof value === \"number\") {\n        return value;\n    }\n    if (typeof value === \"string\") {\n        return value;\n    }\n    if (Array.isArray(value)) {\n        return value.map((value2)=>jsonToConvexInternal(value2, allowMapsAndSets));\n    }\n    if (typeof value !== \"object\") {\n        throw new Error(`Unexpected type of ${value}`);\n    }\n    const entries = Object.entries(value);\n    if (entries.length === 1) {\n        const key = entries[0][0];\n        if (key === \"$bytes\") {\n            if (typeof value.$bytes !== \"string\") {\n                throw new Error(`Malformed $bytes field on ${value}`);\n            }\n            return _base64_js__WEBPACK_IMPORTED_MODULE_0__.toByteArray(value.$bytes).buffer;\n        }\n        if (key === \"$integer\") {\n            if (typeof value.$integer !== \"string\") {\n                throw new Error(`Malformed $integer field on ${value}`);\n            }\n            return base64ToBigInt(value.$integer);\n        }\n        if (key === \"$float\") {\n            if (typeof value.$float !== \"string\") {\n                throw new Error(`Malformed $float field on ${value}`);\n            }\n            const floatBytes = _base64_js__WEBPACK_IMPORTED_MODULE_0__.toByteArray(value.$float);\n            if (floatBytes.byteLength !== 8) {\n                throw new Error(`Received ${floatBytes.byteLength} bytes, expected 8 for $float`);\n            }\n            const floatBytesView = new DataView(floatBytes.buffer);\n            const float = floatBytesView.getFloat64(0, LITTLE_ENDIAN);\n            if (!isSpecial(float)) {\n                throw new Error(`Float ${float} should be encoded as a number`);\n            }\n            return float;\n        }\n        if (key === \"$set\") {\n            if (!Array.isArray(value.$set)) {\n                throw new Error(`Malformed $set field on ${value}`);\n            }\n            if (!allowMapsAndSets) {\n                throw new Error(`Received a Set which is no longer supported as a Convex type, with values: ${value.$set.join(\", \")}.`);\n            }\n            return new Set(value.$set.map((value2)=>jsonToConvexInternal(value2, allowMapsAndSets)));\n        }\n        if (key === \"$map\") {\n            if (!Array.isArray(value.$map)) {\n                throw new Error(`Malformed $map field on ${value}`);\n            }\n            if (!allowMapsAndSets) {\n                throw new Error(`Received a Map which is no longer supported as a Convex type, with entries: ${value.$map.join(\", \")}.`);\n            }\n            const map = /* @__PURE__ */ new Map();\n            for (const pair of value.$map){\n                if (!Array.isArray(pair) || pair.length !== 2) {\n                    throw new Error(`Malformed pair in $map ${value}`);\n                }\n                const k = jsonToConvexInternal(pair[0], allowMapsAndSets);\n                const v = jsonToConvexInternal(pair[1], allowMapsAndSets);\n                map.set(k, v);\n            }\n            return map;\n        }\n    }\n    const out = {};\n    for (const [k, v] of Object.entries(value)){\n        validateObjectField(k);\n        out[k] = jsonToConvexInternal(v, allowMapsAndSets);\n    }\n    return out;\n}\nfunction jsonToConvex(value, allowMapsAndSets = false) {\n    return jsonToConvexInternal(value, allowMapsAndSets);\n}\nfunction stringifyValueForError(value) {\n    return JSON.stringify(value, (_key, value2)=>{\n        if (value2 === void 0) {\n            return \"undefined\";\n        }\n        if (typeof value2 === \"bigint\") {\n            return `${value2.toString()}n`;\n        }\n        return value2;\n    });\n}\nfunction convexToJsonInternal(value, originalValue, context, includeTopLevelUndefined, allowMapsAndSets) {\n    if (value === void 0) {\n        const contextText = context && ` (present at path ${context} in original object ${stringifyValueForError(originalValue)})`;\n        throw new Error(`undefined is not a valid Convex value${contextText}. To learn about Convex's supported types, see https://docs.convex.dev/using/types.`);\n    }\n    if (value === null) {\n        return value;\n    }\n    if (typeof value === \"bigint\") {\n        if (value < MIN_INT64 || MAX_INT64 < value) {\n            throw new Error(`BigInt ${value} does not fit into a 64-bit signed integer.`);\n        }\n        return {\n            $integer: bigIntToBase64(value)\n        };\n    }\n    if (typeof value === \"number\") {\n        if (isSpecial(value)) {\n            const buffer = new ArrayBuffer(8);\n            new DataView(buffer).setFloat64(0, value, LITTLE_ENDIAN);\n            return {\n                $float: _base64_js__WEBPACK_IMPORTED_MODULE_0__.fromByteArray(new Uint8Array(buffer))\n            };\n        } else {\n            return value;\n        }\n    }\n    if (typeof value === \"boolean\") {\n        return value;\n    }\n    if (typeof value === \"string\") {\n        return value;\n    }\n    if (value instanceof ArrayBuffer) {\n        return {\n            $bytes: _base64_js__WEBPACK_IMPORTED_MODULE_0__.fromByteArray(new Uint8Array(value))\n        };\n    }\n    if (Array.isArray(value)) {\n        return value.map((value2, i)=>convexToJsonInternal(value2, originalValue, context + `[${i}]`, false, allowMapsAndSets));\n    }\n    if (value instanceof Set) {\n        if (!allowMapsAndSets) {\n            throw new Error(errorMessageForUnsupportedType(context, \"Set\", [\n                ...value\n            ], originalValue));\n        }\n        return {\n            $set: [\n                ...value\n            ].map((value2, i)=>convexToJsonInternal(value2, originalValue, context + `.keys()[${i}]`, false, allowMapsAndSets))\n        };\n    }\n    if (value instanceof Map) {\n        if (!allowMapsAndSets) {\n            throw new Error(errorMessageForUnsupportedType(context, \"Map\", [\n                ...value\n            ], originalValue));\n        }\n        return {\n            $map: [\n                ...value\n            ].map(([k, v], i)=>{\n                const jsonKey = convexToJsonInternal(k, originalValue, context + `.keys()[${i}]`, false, allowMapsAndSets);\n                const jsonValue = convexToJsonInternal(v, originalValue, context + `.values()[${i}]`, false, allowMapsAndSets);\n                return [\n                    jsonKey,\n                    jsonValue\n                ];\n            })\n        };\n    }\n    if (!(0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.isSimpleObject)(value)) {\n        const theType = value?.constructor?.name;\n        const typeName = theType ? `${theType} ` : \"\";\n        throw new Error(errorMessageForUnsupportedType(context, typeName, value, originalValue));\n    }\n    const out = {};\n    const entries = Object.entries(value);\n    entries.sort(([k1, _v1], [k2, _v2])=>k1 === k2 ? 0 : k1 < k2 ? -1 : 1);\n    for (const [k, v] of entries){\n        if (v !== void 0) {\n            validateObjectField(k);\n            out[k] = convexToJsonInternal(v, originalValue, context + `.${k}`, false, allowMapsAndSets);\n        } else if (includeTopLevelUndefined) {\n            validateObjectField(k);\n            out[k] = convexOrUndefinedToJsonInternal(v, originalValue, context + `.${k}`);\n        }\n    }\n    return out;\n}\nfunction errorMessageForUnsupportedType(context, typeName, value, originalValue) {\n    if (context) {\n        return `${typeName}${stringifyValueForError(value)} is not a supported Convex type (present at path ${context} in original object ${stringifyValueForError(originalValue)}). To learn about Convex's supported types, see https://docs.convex.dev/using/types.`;\n    } else {\n        return `${typeName}${stringifyValueForError(value)} is not a supported Convex type.`;\n    }\n}\nfunction convexOrUndefinedToJsonInternal(value, originalValue, context) {\n    if (value === void 0) {\n        return {\n            $undefined: null\n        };\n    } else {\n        if (originalValue === void 0) {\n            throw new Error(`Programming error. Current value is ${stringifyValueForError(value)} but original value is undefined`);\n        }\n        return convexToJsonInternal(value, originalValue, context, false, false);\n    }\n}\nfunction convexToJson(value, allowMapsAndSets = false) {\n    return convexToJsonInternal(value, value, \"\", false, allowMapsAndSets);\n}\nfunction convexOrUndefinedToJson(value) {\n    return convexOrUndefinedToJsonInternal(value, value, \"\");\n}\nfunction patchValueToJson(value) {\n    return convexToJsonInternal(value, value, \"\", true, false);\n} //# sourceMappingURL=value.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3ZhbHVlcy92YWx1ZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQWE7QUFDeUI7QUFDYztBQUNwRCxNQUFNRSxnQkFBZ0I7QUFDdEIsTUFBTUMsWUFBWUMsT0FBTztBQUN6QixNQUFNQyxZQUFZRCxPQUFPO0FBQ3pCLE1BQU1FLE9BQU9GLE9BQU87QUFDcEIsTUFBTUcsUUFBUUgsT0FBTztBQUNyQixNQUFNSSxjQUFjSixPQUFPO0FBQzNCLFNBQVNLLFVBQVVDLENBQUM7SUFDbEIsT0FBT0MsT0FBT0MsS0FBSyxDQUFDRixNQUFNLENBQUNDLE9BQU9FLFFBQVEsQ0FBQ0gsTUFBTUksT0FBT0MsRUFBRSxDQUFDTCxHQUFHLENBQUM7QUFDakU7QUFDTyxTQUFTTSxtQkFBbUJDLEtBQUs7SUFDdEMsSUFBSUEsUUFBUVgsTUFBTTtRQUNoQlcsU0FBU2QsWUFBWUE7SUFDdkI7SUFDQSxJQUFJZSxNQUFNRCxNQUFNRSxRQUFRLENBQUM7SUFDekIsSUFBSUQsSUFBSUUsTUFBTSxHQUFHLE1BQU0sR0FDckJGLE1BQU0sTUFBTUE7SUFDZCxNQUFNRyxRQUFRLElBQUlDLFdBQVcsSUFBSUMsWUFBWTtJQUM3QyxJQUFJQyxJQUFJO0lBQ1IsS0FBSyxNQUFNQyxXQUFXUCxJQUFJUSxLQUFLLENBQUMsU0FBU0MsT0FBTyxHQUFJO1FBQ2xETixNQUFNTyxHQUFHLENBQUM7WUFBQ0MsU0FBU0osU0FBUztTQUFJLEVBQUVEO1FBQ25DUCxVQUFVVjtJQUNaO0lBQ0EsT0FBT1AscURBQW9CLENBQUNxQjtBQUM5QjtBQUNPLFNBQVNVLG1CQUFtQkMsT0FBTztJQUN4QyxNQUFNQyxlQUFlakMsbURBQWtCLENBQUNnQztJQUN4QyxJQUFJQyxhQUFhRSxVQUFVLEtBQUssR0FBRztRQUNqQyxNQUFNLElBQUlDLE1BQ1IsQ0FBQyxTQUFTLEVBQUVILGFBQWFFLFVBQVUsQ0FBQywrQkFBK0IsQ0FBQztJQUV4RTtJQUNBLElBQUlsQixRQUFRWDtJQUNaLElBQUkrQixRQUFRL0I7SUFDWixLQUFLLE1BQU1nQyxRQUFRTCxhQUFjO1FBQy9CaEIsU0FBU2IsT0FBT2tDLFFBQVE5QixlQUFlNkI7UUFDdkNBO0lBQ0Y7SUFDQSxJQUFJcEIsUUFBUVosV0FBVztRQUNyQlksU0FBU2QsWUFBWUE7SUFDdkI7SUFDQSxPQUFPYztBQUNUO0FBQ08sU0FBU3NCLHFCQUFxQnRCLEtBQUs7SUFDeEMsSUFBSUEsUUFBUWQsYUFBYUUsWUFBWVksT0FBTztRQUMxQyxNQUFNLElBQUltQixNQUNSLENBQUMsT0FBTyxFQUFFbkIsTUFBTSwyQ0FBMkMsQ0FBQztJQUVoRTtJQUNBLE1BQU11QixTQUFTLElBQUlqQixZQUFZO0lBQy9CLElBQUlrQixTQUFTRCxRQUFRRSxXQUFXLENBQUMsR0FBR3pCLE9BQU87SUFDM0MsT0FBT2pCLHFEQUFvQixDQUFDLElBQUlzQixXQUFXa0I7QUFDN0M7QUFDTyxTQUFTRyxxQkFBcUJYLE9BQU87SUFDMUMsTUFBTUMsZUFBZWpDLG1EQUFrQixDQUFDZ0M7SUFDeEMsSUFBSUMsYUFBYUUsVUFBVSxLQUFLLEdBQUc7UUFDakMsTUFBTSxJQUFJQyxNQUNSLENBQUMsU0FBUyxFQUFFSCxhQUFhRSxVQUFVLENBQUMsK0JBQStCLENBQUM7SUFFeEU7SUFDQSxNQUFNUyxlQUFlLElBQUlILFNBQVNSLGFBQWFPLE1BQU07SUFDckQsT0FBT0ksYUFBYUMsV0FBVyxDQUFDLEdBQUc7QUFDckM7QUFDTyxNQUFNQyxpQkFBaUJMLFNBQVNNLFNBQVMsQ0FBQ0wsV0FBVyxHQUFHSCx1QkFBdUJ2QixtQkFBbUI7QUFDbEcsTUFBTWdDLGlCQUFpQlAsU0FBU00sU0FBUyxDQUFDRixXQUFXLEdBQUdGLHVCQUF1QlosbUJBQW1CO0FBQ3pHLE1BQU1rQixxQkFBcUI7QUFDM0IsU0FBU0Msb0JBQW9CQyxDQUFDO0lBQzVCLElBQUlBLEVBQUUvQixNQUFNLEtBQUssR0FBRztRQUNsQixNQUFNLElBQUlnQixNQUFNO0lBQ2xCO0lBQ0EsSUFBSWUsRUFBRS9CLE1BQU0sR0FBRzZCLG9CQUFvQjtRQUNqQyxNQUFNLElBQUliLE1BQ1IsQ0FBQyxXQUFXLEVBQUVlLEVBQUUsbUNBQW1DLEVBQUVGLG1CQUFtQixDQUFDLENBQUM7SUFFOUU7SUFDQSxJQUFJRSxFQUFFQyxVQUFVLENBQUMsTUFBTTtRQUNyQixNQUFNLElBQUloQixNQUFNLENBQUMsV0FBVyxFQUFFZSxFQUFFLHNDQUFzQyxDQUFDO0lBQ3pFO0lBQ0EsSUFBSyxJQUFJM0IsSUFBSSxHQUFHQSxJQUFJMkIsRUFBRS9CLE1BQU0sRUFBRUksS0FBSyxFQUFHO1FBQ3BDLE1BQU02QixXQUFXRixFQUFFRyxVQUFVLENBQUM5QjtRQUM5QixJQUFJNkIsV0FBVyxNQUFNQSxZQUFZLEtBQUs7WUFDcEMsTUFBTSxJQUFJakIsTUFDUixDQUFDLFdBQVcsRUFBRWUsRUFBRSx3QkFBd0IsRUFBRUEsQ0FBQyxDQUFDM0IsRUFBRSxDQUFDLDREQUE0RCxDQUFDO1FBRWhIO0lBQ0Y7QUFDRjtBQUNBLFNBQVMrQixxQkFBcUJ0QyxLQUFLLEVBQUV1QyxnQkFBZ0I7SUFDbkQsSUFBSXZDLFVBQVUsTUFBTTtRQUNsQixPQUFPQTtJQUNUO0lBQ0EsSUFBSSxPQUFPQSxVQUFVLFdBQVc7UUFDOUIsT0FBT0E7SUFDVDtJQUNBLElBQUksT0FBT0EsVUFBVSxVQUFVO1FBQzdCLE9BQU9BO0lBQ1Q7SUFDQSxJQUFJLE9BQU9BLFVBQVUsVUFBVTtRQUM3QixPQUFPQTtJQUNUO0lBQ0EsSUFBSXdDLE1BQU1DLE9BQU8sQ0FBQ3pDLFFBQVE7UUFDeEIsT0FBT0EsTUFBTTBDLEdBQUcsQ0FBQyxDQUFDQyxTQUFXTCxxQkFBcUJLLFFBQVFKO0lBQzVEO0lBQ0EsSUFBSSxPQUFPdkMsVUFBVSxVQUFVO1FBQzdCLE1BQU0sSUFBSW1CLE1BQU0sQ0FBQyxtQkFBbUIsRUFBRW5CLE1BQU0sQ0FBQztJQUMvQztJQUNBLE1BQU00QyxVQUFVL0MsT0FBTytDLE9BQU8sQ0FBQzVDO0lBQy9CLElBQUk0QyxRQUFRekMsTUFBTSxLQUFLLEdBQUc7UUFDeEIsTUFBTTBDLE1BQU1ELE9BQU8sQ0FBQyxFQUFFLENBQUMsRUFBRTtRQUN6QixJQUFJQyxRQUFRLFVBQVU7WUFDcEIsSUFBSSxPQUFPN0MsTUFBTThDLE1BQU0sS0FBSyxVQUFVO2dCQUNwQyxNQUFNLElBQUkzQixNQUFNLENBQUMsMEJBQTBCLEVBQUVuQixNQUFNLENBQUM7WUFDdEQ7WUFDQSxPQUFPakIsbURBQWtCLENBQUNpQixNQUFNOEMsTUFBTSxFQUFFdkIsTUFBTTtRQUNoRDtRQUNBLElBQUlzQixRQUFRLFlBQVk7WUFDdEIsSUFBSSxPQUFPN0MsTUFBTStDLFFBQVEsS0FBSyxVQUFVO2dCQUN0QyxNQUFNLElBQUk1QixNQUFNLENBQUMsNEJBQTRCLEVBQUVuQixNQUFNLENBQUM7WUFDeEQ7WUFDQSxPQUFPK0IsZUFBZS9CLE1BQU0rQyxRQUFRO1FBQ3RDO1FBQ0EsSUFBSUYsUUFBUSxVQUFVO1lBQ3BCLElBQUksT0FBTzdDLE1BQU1nRCxNQUFNLEtBQUssVUFBVTtnQkFDcEMsTUFBTSxJQUFJN0IsTUFBTSxDQUFDLDBCQUEwQixFQUFFbkIsTUFBTSxDQUFDO1lBQ3REO1lBQ0EsTUFBTWlELGFBQWFsRSxtREFBa0IsQ0FBQ2lCLE1BQU1nRCxNQUFNO1lBQ2xELElBQUlDLFdBQVcvQixVQUFVLEtBQUssR0FBRztnQkFDL0IsTUFBTSxJQUFJQyxNQUNSLENBQUMsU0FBUyxFQUFFOEIsV0FBVy9CLFVBQVUsQ0FBQyw2QkFBNkIsQ0FBQztZQUVwRTtZQUNBLE1BQU1nQyxpQkFBaUIsSUFBSTFCLFNBQVN5QixXQUFXMUIsTUFBTTtZQUNyRCxNQUFNNEIsUUFBUUQsZUFBZUUsVUFBVSxDQUFDLEdBQUduRTtZQUMzQyxJQUFJLENBQUNPLFVBQVUyRCxRQUFRO2dCQUNyQixNQUFNLElBQUloQyxNQUFNLENBQUMsTUFBTSxFQUFFZ0MsTUFBTSw4QkFBOEIsQ0FBQztZQUNoRTtZQUNBLE9BQU9BO1FBQ1Q7UUFDQSxJQUFJTixRQUFRLFFBQVE7WUFDbEIsSUFBSSxDQUFDTCxNQUFNQyxPQUFPLENBQUN6QyxNQUFNcUQsSUFBSSxHQUFHO2dCQUM5QixNQUFNLElBQUlsQyxNQUFNLENBQUMsd0JBQXdCLEVBQUVuQixNQUFNLENBQUM7WUFDcEQ7WUFDQSxJQUFJLENBQUN1QyxrQkFBa0I7Z0JBQ3JCLE1BQU0sSUFBSXBCLE1BQ1IsQ0FBQywyRUFBMkUsRUFBRW5CLE1BQU1xRCxJQUFJLENBQUNDLElBQUksQ0FDM0YsTUFDQSxDQUFDLENBQUM7WUFFUjtZQUNBLE9BQU8sSUFBSUMsSUFDVHZELE1BQU1xRCxJQUFJLENBQUNYLEdBQUcsQ0FBQyxDQUFDQyxTQUFXTCxxQkFBcUJLLFFBQVFKO1FBRTVEO1FBQ0EsSUFBSU0sUUFBUSxRQUFRO1lBQ2xCLElBQUksQ0FBQ0wsTUFBTUMsT0FBTyxDQUFDekMsTUFBTXdELElBQUksR0FBRztnQkFDOUIsTUFBTSxJQUFJckMsTUFBTSxDQUFDLHdCQUF3QixFQUFFbkIsTUFBTSxDQUFDO1lBQ3BEO1lBQ0EsSUFBSSxDQUFDdUMsa0JBQWtCO2dCQUNyQixNQUFNLElBQUlwQixNQUNSLENBQUMsNEVBQTRFLEVBQUVuQixNQUFNd0QsSUFBSSxDQUFDRixJQUFJLENBQzVGLE1BQ0EsQ0FBQyxDQUFDO1lBRVI7WUFDQSxNQUFNWixNQUFNLGFBQWEsR0FBRyxJQUFJZTtZQUNoQyxLQUFLLE1BQU1DLFFBQVExRCxNQUFNd0QsSUFBSSxDQUFFO2dCQUM3QixJQUFJLENBQUNoQixNQUFNQyxPQUFPLENBQUNpQixTQUFTQSxLQUFLdkQsTUFBTSxLQUFLLEdBQUc7b0JBQzdDLE1BQU0sSUFBSWdCLE1BQU0sQ0FBQyx1QkFBdUIsRUFBRW5CLE1BQU0sQ0FBQztnQkFDbkQ7Z0JBQ0EsTUFBTWtDLElBQUlJLHFCQUFxQm9CLElBQUksQ0FBQyxFQUFFLEVBQUVuQjtnQkFDeEMsTUFBTW9CLElBQUlyQixxQkFBcUJvQixJQUFJLENBQUMsRUFBRSxFQUFFbkI7Z0JBQ3hDRyxJQUFJL0IsR0FBRyxDQUFDdUIsR0FBR3lCO1lBQ2I7WUFDQSxPQUFPakI7UUFDVDtJQUNGO0lBQ0EsTUFBTWtCLE1BQU0sQ0FBQztJQUNiLEtBQUssTUFBTSxDQUFDMUIsR0FBR3lCLEVBQUUsSUFBSTlELE9BQU8rQyxPQUFPLENBQUM1QyxPQUFRO1FBQzFDaUMsb0JBQW9CQztRQUNwQjBCLEdBQUcsQ0FBQzFCLEVBQUUsR0FBR0kscUJBQXFCcUIsR0FBR3BCO0lBQ25DO0lBQ0EsT0FBT3FCO0FBQ1Q7QUFDTyxTQUFTQyxhQUFhN0QsS0FBSyxFQUFFdUMsbUJBQW1CLEtBQUs7SUFDMUQsT0FBT0QscUJBQXFCdEMsT0FBT3VDO0FBQ3JDO0FBQ08sU0FBU3VCLHVCQUF1QjlELEtBQUs7SUFDMUMsT0FBTytELEtBQUtDLFNBQVMsQ0FBQ2hFLE9BQU8sQ0FBQ2lFLE1BQU10QjtRQUNsQyxJQUFJQSxXQUFXLEtBQUssR0FBRztZQUNyQixPQUFPO1FBQ1Q7UUFDQSxJQUFJLE9BQU9BLFdBQVcsVUFBVTtZQUM5QixPQUFPLENBQUMsRUFBRUEsT0FBT3pDLFFBQVEsR0FBRyxDQUFDLENBQUM7UUFDaEM7UUFDQSxPQUFPeUM7SUFDVDtBQUNGO0FBQ0EsU0FBU3VCLHFCQUFxQmxFLEtBQUssRUFBRW1FLGFBQWEsRUFBRUMsT0FBTyxFQUFFQyx3QkFBd0IsRUFBRTlCLGdCQUFnQjtJQUNyRyxJQUFJdkMsVUFBVSxLQUFLLEdBQUc7UUFDcEIsTUFBTXNFLGNBQWNGLFdBQVcsQ0FBQyxrQkFBa0IsRUFBRUEsUUFBUSxvQkFBb0IsRUFBRU4sdUJBQ2hGSyxlQUNBLENBQUMsQ0FBQztRQUNKLE1BQU0sSUFBSWhELE1BQ1IsQ0FBQyxxQ0FBcUMsRUFBRW1ELFlBQVksbUZBQW1GLENBQUM7SUFFNUk7SUFDQSxJQUFJdEUsVUFBVSxNQUFNO1FBQ2xCLE9BQU9BO0lBQ1Q7SUFDQSxJQUFJLE9BQU9BLFVBQVUsVUFBVTtRQUM3QixJQUFJQSxRQUFRZCxhQUFhRSxZQUFZWSxPQUFPO1lBQzFDLE1BQU0sSUFBSW1CLE1BQ1IsQ0FBQyxPQUFPLEVBQUVuQixNQUFNLDJDQUEyQyxDQUFDO1FBRWhFO1FBQ0EsT0FBTztZQUFFK0MsVUFBVWxCLGVBQWU3QjtRQUFPO0lBQzNDO0lBQ0EsSUFBSSxPQUFPQSxVQUFVLFVBQVU7UUFDN0IsSUFBSVIsVUFBVVEsUUFBUTtZQUNwQixNQUFNdUIsU0FBUyxJQUFJakIsWUFBWTtZQUMvQixJQUFJa0IsU0FBU0QsUUFBUWdELFVBQVUsQ0FBQyxHQUFHdkUsT0FBT2Y7WUFDMUMsT0FBTztnQkFBRStELFFBQVFqRSxxREFBb0IsQ0FBQyxJQUFJc0IsV0FBV2tCO1lBQVM7UUFDaEUsT0FBTztZQUNMLE9BQU92QjtRQUNUO0lBQ0Y7SUFDQSxJQUFJLE9BQU9BLFVBQVUsV0FBVztRQUM5QixPQUFPQTtJQUNUO0lBQ0EsSUFBSSxPQUFPQSxVQUFVLFVBQVU7UUFDN0IsT0FBT0E7SUFDVDtJQUNBLElBQUlBLGlCQUFpQk0sYUFBYTtRQUNoQyxPQUFPO1lBQUV3QyxRQUFRL0QscURBQW9CLENBQUMsSUFBSXNCLFdBQVdMO1FBQVE7SUFDL0Q7SUFDQSxJQUFJd0MsTUFBTUMsT0FBTyxDQUFDekMsUUFBUTtRQUN4QixPQUFPQSxNQUFNMEMsR0FBRyxDQUNkLENBQUNDLFFBQVFwQyxJQUFNMkQscUJBQ2J2QixRQUNBd0IsZUFDQUMsVUFBVSxDQUFDLENBQUMsRUFBRTdELEVBQUUsQ0FBQyxDQUFDLEVBQ2xCLE9BQ0FnQztJQUdOO0lBQ0EsSUFBSXZDLGlCQUFpQnVELEtBQUs7UUFDeEIsSUFBSSxDQUFDaEIsa0JBQWtCO1lBQ3JCLE1BQU0sSUFBSXBCLE1BQ1JxRCwrQkFDRUosU0FDQSxPQUNBO21CQUFJcEU7YUFBTSxFQUNWbUU7UUFHTjtRQUNBLE9BQU87WUFDTGQsTUFBTTttQkFBSXJEO2FBQU0sQ0FBQzBDLEdBQUcsQ0FDbEIsQ0FBQ0MsUUFBUXBDLElBQU0yRCxxQkFDYnZCLFFBQ0F3QixlQUNBQyxVQUFVLENBQUMsUUFBUSxFQUFFN0QsRUFBRSxDQUFDLENBQUMsRUFDekIsT0FDQWdDO1FBR047SUFDRjtJQUNBLElBQUl2QyxpQkFBaUJ5RCxLQUFLO1FBQ3hCLElBQUksQ0FBQ2xCLGtCQUFrQjtZQUNyQixNQUFNLElBQUlwQixNQUNScUQsK0JBQ0VKLFNBQ0EsT0FDQTttQkFBSXBFO2FBQU0sRUFDVm1FO1FBR047UUFDQSxPQUFPO1lBQ0xYLE1BQU07bUJBQUl4RDthQUFNLENBQUMwQyxHQUFHLENBQUMsQ0FBQyxDQUFDUixHQUFHeUIsRUFBRSxFQUFFcEQ7Z0JBQzVCLE1BQU1rRSxVQUFVUCxxQkFDZGhDLEdBQ0FpQyxlQUNBQyxVQUFVLENBQUMsUUFBUSxFQUFFN0QsRUFBRSxDQUFDLENBQUMsRUFDekIsT0FDQWdDO2dCQUVGLE1BQU1tQyxZQUFZUixxQkFDaEJQLEdBQ0FRLGVBQ0FDLFVBQVUsQ0FBQyxVQUFVLEVBQUU3RCxFQUFFLENBQUMsQ0FBQyxFQUMzQixPQUNBZ0M7Z0JBRUYsT0FBTztvQkFBQ2tDO29CQUFTQztpQkFBVTtZQUM3QjtRQUNGO0lBQ0Y7SUFDQSxJQUFJLENBQUMxRixnRUFBY0EsQ0FBQ2dCLFFBQVE7UUFDMUIsTUFBTTJFLFVBQVUzRSxPQUFPNEUsYUFBYUM7UUFDcEMsTUFBTUMsV0FBV0gsVUFBVSxDQUFDLEVBQUVBLFFBQVEsQ0FBQyxDQUFDLEdBQUc7UUFDM0MsTUFBTSxJQUFJeEQsTUFDUnFELCtCQUErQkosU0FBU1UsVUFBVTlFLE9BQU9tRTtJQUU3RDtJQUNBLE1BQU1QLE1BQU0sQ0FBQztJQUNiLE1BQU1oQixVQUFVL0MsT0FBTytDLE9BQU8sQ0FBQzVDO0lBQy9CNEMsUUFBUW1DLElBQUksQ0FBQyxDQUFDLENBQUNDLElBQUlDLElBQUksRUFBRSxDQUFDQyxJQUFJQyxJQUFJLEdBQUtILE9BQU9FLEtBQUssSUFBSUYsS0FBS0UsS0FBSyxDQUFDLElBQUk7SUFDdEUsS0FBSyxNQUFNLENBQUNoRCxHQUFHeUIsRUFBRSxJQUFJZixRQUFTO1FBQzVCLElBQUllLE1BQU0sS0FBSyxHQUFHO1lBQ2hCMUIsb0JBQW9CQztZQUNwQjBCLEdBQUcsQ0FBQzFCLEVBQUUsR0FBR2dDLHFCQUNQUCxHQUNBUSxlQUNBQyxVQUFVLENBQUMsQ0FBQyxFQUFFbEMsRUFBRSxDQUFDLEVBQ2pCLE9BQ0FLO1FBRUosT0FBTyxJQUFJOEIsMEJBQTBCO1lBQ25DcEMsb0JBQW9CQztZQUNwQjBCLEdBQUcsQ0FBQzFCLEVBQUUsR0FBR2tELGdDQUNQekIsR0FDQVEsZUFDQUMsVUFBVSxDQUFDLENBQUMsRUFBRWxDLEVBQUUsQ0FBQztRQUVyQjtJQUNGO0lBQ0EsT0FBTzBCO0FBQ1Q7QUFDQSxTQUFTWSwrQkFBK0JKLE9BQU8sRUFBRVUsUUFBUSxFQUFFOUUsS0FBSyxFQUFFbUUsYUFBYTtJQUM3RSxJQUFJQyxTQUFTO1FBQ1gsT0FBTyxDQUFDLEVBQUVVLFNBQVMsRUFBRWhCLHVCQUNuQjlELE9BQ0EsaURBQWlELEVBQUVvRSxRQUFRLG9CQUFvQixFQUFFTix1QkFDakZLLGVBQ0Esb0ZBQW9GLENBQUM7SUFDekYsT0FBTztRQUNMLE9BQU8sQ0FBQyxFQUFFVyxTQUFTLEVBQUVoQix1QkFDbkI5RCxPQUNBLGdDQUFnQyxDQUFDO0lBQ3JDO0FBQ0Y7QUFDQSxTQUFTb0YsZ0NBQWdDcEYsS0FBSyxFQUFFbUUsYUFBYSxFQUFFQyxPQUFPO0lBQ3BFLElBQUlwRSxVQUFVLEtBQUssR0FBRztRQUNwQixPQUFPO1lBQUVxRixZQUFZO1FBQUs7SUFDNUIsT0FBTztRQUNMLElBQUlsQixrQkFBa0IsS0FBSyxHQUFHO1lBQzVCLE1BQU0sSUFBSWhELE1BQ1IsQ0FBQyxvQ0FBb0MsRUFBRTJDLHVCQUNyQzlELE9BQ0EsZ0NBQWdDLENBQUM7UUFFdkM7UUFDQSxPQUFPa0UscUJBQXFCbEUsT0FBT21FLGVBQWVDLFNBQVMsT0FBTztJQUNwRTtBQUNGO0FBQ08sU0FBU2tCLGFBQWF0RixLQUFLLEVBQUV1QyxtQkFBbUIsS0FBSztJQUMxRCxPQUFPMkIscUJBQXFCbEUsT0FBT0EsT0FBTyxJQUFJLE9BQU91QztBQUN2RDtBQUNPLFNBQVNnRCx3QkFBd0J2RixLQUFLO0lBQzNDLE9BQU9vRixnQ0FBZ0NwRixPQUFPQSxPQUFPO0FBQ3ZEO0FBQ08sU0FBU3dGLGlCQUFpQnhGLEtBQUs7SUFDcEMsT0FBT2tFLHFCQUFxQmxFLE9BQU9BLE9BQU8sSUFBSSxNQUFNO0FBQ3RELEVBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXJhc29yX2Nsb25lLy4vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS92YWx1ZXMvdmFsdWUuanM/MTViMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmltcG9ydCAqIGFzIEJhc2U2NCBmcm9tIFwiLi9iYXNlNjQuanNcIjtcbmltcG9ydCB7IGlzU2ltcGxlT2JqZWN0IH0gZnJvbSBcIi4uL2NvbW1vbi9pbmRleC5qc1wiO1xuY29uc3QgTElUVExFX0VORElBTiA9IHRydWU7XG5jb25zdCBNSU5fSU5UNjQgPSBCaWdJbnQoXCItOTIyMzM3MjAzNjg1NDc3NTgwOFwiKTtcbmNvbnN0IE1BWF9JTlQ2NCA9IEJpZ0ludChcIjkyMjMzNzIwMzY4NTQ3NzU4MDdcIik7XG5jb25zdCBaRVJPID0gQmlnSW50KFwiMFwiKTtcbmNvbnN0IEVJR0hUID0gQmlnSW50KFwiOFwiKTtcbmNvbnN0IFRXT0ZJRlRZU0lYID0gQmlnSW50KFwiMjU2XCIpO1xuZnVuY3Rpb24gaXNTcGVjaWFsKG4pIHtcbiAgcmV0dXJuIE51bWJlci5pc05hTihuKSB8fCAhTnVtYmVyLmlzRmluaXRlKG4pIHx8IE9iamVjdC5pcyhuLCAtMCk7XG59XG5leHBvcnQgZnVuY3Rpb24gc2xvd0JpZ0ludFRvQmFzZTY0KHZhbHVlKSB7XG4gIGlmICh2YWx1ZSA8IFpFUk8pIHtcbiAgICB2YWx1ZSAtPSBNSU5fSU5UNjQgKyBNSU5fSU5UNjQ7XG4gIH1cbiAgbGV0IGhleCA9IHZhbHVlLnRvU3RyaW5nKDE2KTtcbiAgaWYgKGhleC5sZW5ndGggJSAyID09PSAxKVxuICAgIGhleCA9IFwiMFwiICsgaGV4O1xuICBjb25zdCBieXRlcyA9IG5ldyBVaW50OEFycmF5KG5ldyBBcnJheUJ1ZmZlcig4KSk7XG4gIGxldCBpID0gMDtcbiAgZm9yIChjb25zdCBoZXhCeXRlIG9mIGhleC5tYXRjaCgvLnsyfS9nKS5yZXZlcnNlKCkpIHtcbiAgICBieXRlcy5zZXQoW3BhcnNlSW50KGhleEJ5dGUsIDE2KV0sIGkrKyk7XG4gICAgdmFsdWUgPj49IEVJR0hUO1xuICB9XG4gIHJldHVybiBCYXNlNjQuZnJvbUJ5dGVBcnJheShieXRlcyk7XG59XG5leHBvcnQgZnVuY3Rpb24gc2xvd0Jhc2U2NFRvQmlnSW50KGVuY29kZWQpIHtcbiAgY29uc3QgaW50ZWdlckJ5dGVzID0gQmFzZTY0LnRvQnl0ZUFycmF5KGVuY29kZWQpO1xuICBpZiAoaW50ZWdlckJ5dGVzLmJ5dGVMZW5ndGggIT09IDgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBgUmVjZWl2ZWQgJHtpbnRlZ2VyQnl0ZXMuYnl0ZUxlbmd0aH0gYnl0ZXMsIGV4cGVjdGVkIDggZm9yICRpbnRlZ2VyYFxuICAgICk7XG4gIH1cbiAgbGV0IHZhbHVlID0gWkVSTztcbiAgbGV0IHBvd2VyID0gWkVSTztcbiAgZm9yIChjb25zdCBieXRlIG9mIGludGVnZXJCeXRlcykge1xuICAgIHZhbHVlICs9IEJpZ0ludChieXRlKSAqIFRXT0ZJRlRZU0lYICoqIHBvd2VyO1xuICAgIHBvd2VyKys7XG4gIH1cbiAgaWYgKHZhbHVlID4gTUFYX0lOVDY0KSB7XG4gICAgdmFsdWUgKz0gTUlOX0lOVDY0ICsgTUlOX0lOVDY0O1xuICB9XG4gIHJldHVybiB2YWx1ZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBtb2Rlcm5CaWdJbnRUb0Jhc2U2NCh2YWx1ZSkge1xuICBpZiAodmFsdWUgPCBNSU5fSU5UNjQgfHwgTUFYX0lOVDY0IDwgdmFsdWUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBgQmlnSW50ICR7dmFsdWV9IGRvZXMgbm90IGZpdCBpbnRvIGEgNjQtYml0IHNpZ25lZCBpbnRlZ2VyLmBcbiAgICApO1xuICB9XG4gIGNvbnN0IGJ1ZmZlciA9IG5ldyBBcnJheUJ1ZmZlcig4KTtcbiAgbmV3IERhdGFWaWV3KGJ1ZmZlcikuc2V0QmlnSW50NjQoMCwgdmFsdWUsIHRydWUpO1xuICByZXR1cm4gQmFzZTY0LmZyb21CeXRlQXJyYXkobmV3IFVpbnQ4QXJyYXkoYnVmZmVyKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gbW9kZXJuQmFzZTY0VG9CaWdJbnQoZW5jb2RlZCkge1xuICBjb25zdCBpbnRlZ2VyQnl0ZXMgPSBCYXNlNjQudG9CeXRlQXJyYXkoZW5jb2RlZCk7XG4gIGlmIChpbnRlZ2VyQnl0ZXMuYnl0ZUxlbmd0aCAhPT0gOCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGBSZWNlaXZlZCAke2ludGVnZXJCeXRlcy5ieXRlTGVuZ3RofSBieXRlcywgZXhwZWN0ZWQgOCBmb3IgJGludGVnZXJgXG4gICAgKTtcbiAgfVxuICBjb25zdCBpbnRCeXRlc1ZpZXcgPSBuZXcgRGF0YVZpZXcoaW50ZWdlckJ5dGVzLmJ1ZmZlcik7XG4gIHJldHVybiBpbnRCeXRlc1ZpZXcuZ2V0QmlnSW50NjQoMCwgdHJ1ZSk7XG59XG5leHBvcnQgY29uc3QgYmlnSW50VG9CYXNlNjQgPSBEYXRhVmlldy5wcm90b3R5cGUuc2V0QmlnSW50NjQgPyBtb2Rlcm5CaWdJbnRUb0Jhc2U2NCA6IHNsb3dCaWdJbnRUb0Jhc2U2NDtcbmV4cG9ydCBjb25zdCBiYXNlNjRUb0JpZ0ludCA9IERhdGFWaWV3LnByb3RvdHlwZS5nZXRCaWdJbnQ2NCA/IG1vZGVybkJhc2U2NFRvQmlnSW50IDogc2xvd0Jhc2U2NFRvQmlnSW50O1xuY29uc3QgTUFYX0lERU5USUZJRVJfTEVOID0gMTAyNDtcbmZ1bmN0aW9uIHZhbGlkYXRlT2JqZWN0RmllbGQoaykge1xuICBpZiAoay5sZW5ndGggPT09IDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJFbXB0eSBmaWVsZCBuYW1lcyBhcmUgZGlzYWxsb3dlZC5cIik7XG4gIH1cbiAgaWYgKGsubGVuZ3RoID4gTUFYX0lERU5USUZJRVJfTEVOKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgYEZpZWxkIG5hbWUgJHtrfSBleGNlZWRzIG1heGltdW0gZmllbGQgbmFtZSBsZW5ndGggJHtNQVhfSURFTlRJRklFUl9MRU59LmBcbiAgICApO1xuICB9XG4gIGlmIChrLnN0YXJ0c1dpdGgoXCIkXCIpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBGaWVsZCBuYW1lICR7a30gc3RhcnRzIHdpdGggYSAnJCcsIHdoaWNoIGlzIHJlc2VydmVkLmApO1xuICB9XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgay5sZW5ndGg7IGkgKz0gMSkge1xuICAgIGNvbnN0IGNoYXJDb2RlID0gay5jaGFyQ29kZUF0KGkpO1xuICAgIGlmIChjaGFyQ29kZSA8IDMyIHx8IGNoYXJDb2RlID49IDEyNykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBgRmllbGQgbmFtZSAke2t9IGhhcyBpbnZhbGlkIGNoYXJhY3RlciAnJHtrW2ldfSc6IEZpZWxkIG5hbWVzIGNhbiBvbmx5IGNvbnRhaW4gbm9uLWNvbnRyb2wgQVNDSUkgY2hhcmFjdGVyc2BcbiAgICAgICk7XG4gICAgfVxuICB9XG59XG5mdW5jdGlvbiBqc29uVG9Db252ZXhJbnRlcm5hbCh2YWx1ZSwgYWxsb3dNYXBzQW5kU2V0cykge1xuICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJib29sZWFuXCIpIHtcbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJudW1iZXJcIikge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuICBpZiAodHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG4gIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgIHJldHVybiB2YWx1ZS5tYXAoKHZhbHVlMikgPT4ganNvblRvQ29udmV4SW50ZXJuYWwodmFsdWUyLCBhbGxvd01hcHNBbmRTZXRzKSk7XG4gIH1cbiAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gXCJvYmplY3RcIikge1xuICAgIHRocm93IG5ldyBFcnJvcihgVW5leHBlY3RlZCB0eXBlIG9mICR7dmFsdWV9YCk7XG4gIH1cbiAgY29uc3QgZW50cmllcyA9IE9iamVjdC5lbnRyaWVzKHZhbHVlKTtcbiAgaWYgKGVudHJpZXMubGVuZ3RoID09PSAxKSB7XG4gICAgY29uc3Qga2V5ID0gZW50cmllc1swXVswXTtcbiAgICBpZiAoa2V5ID09PSBcIiRieXRlc1wiKSB7XG4gICAgICBpZiAodHlwZW9mIHZhbHVlLiRieXRlcyAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYE1hbGZvcm1lZCAkYnl0ZXMgZmllbGQgb24gJHt2YWx1ZX1gKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBCYXNlNjQudG9CeXRlQXJyYXkodmFsdWUuJGJ5dGVzKS5idWZmZXI7XG4gICAgfVxuICAgIGlmIChrZXkgPT09IFwiJGludGVnZXJcIikge1xuICAgICAgaWYgKHR5cGVvZiB2YWx1ZS4kaW50ZWdlciAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYE1hbGZvcm1lZCAkaW50ZWdlciBmaWVsZCBvbiAke3ZhbHVlfWApO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGJhc2U2NFRvQmlnSW50KHZhbHVlLiRpbnRlZ2VyKTtcbiAgICB9XG4gICAgaWYgKGtleSA9PT0gXCIkZmxvYXRcIikge1xuICAgICAgaWYgKHR5cGVvZiB2YWx1ZS4kZmxvYXQgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBNYWxmb3JtZWQgJGZsb2F0IGZpZWxkIG9uICR7dmFsdWV9YCk7XG4gICAgICB9XG4gICAgICBjb25zdCBmbG9hdEJ5dGVzID0gQmFzZTY0LnRvQnl0ZUFycmF5KHZhbHVlLiRmbG9hdCk7XG4gICAgICBpZiAoZmxvYXRCeXRlcy5ieXRlTGVuZ3RoICE9PSA4KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICBgUmVjZWl2ZWQgJHtmbG9hdEJ5dGVzLmJ5dGVMZW5ndGh9IGJ5dGVzLCBleHBlY3RlZCA4IGZvciAkZmxvYXRgXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgICBjb25zdCBmbG9hdEJ5dGVzVmlldyA9IG5ldyBEYXRhVmlldyhmbG9hdEJ5dGVzLmJ1ZmZlcik7XG4gICAgICBjb25zdCBmbG9hdCA9IGZsb2F0Qnl0ZXNWaWV3LmdldEZsb2F0NjQoMCwgTElUVExFX0VORElBTik7XG4gICAgICBpZiAoIWlzU3BlY2lhbChmbG9hdCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBGbG9hdCAke2Zsb2F0fSBzaG91bGQgYmUgZW5jb2RlZCBhcyBhIG51bWJlcmApO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGZsb2F0O1xuICAgIH1cbiAgICBpZiAoa2V5ID09PSBcIiRzZXRcIikge1xuICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHZhbHVlLiRzZXQpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgTWFsZm9ybWVkICRzZXQgZmllbGQgb24gJHt2YWx1ZX1gKTtcbiAgICAgIH1cbiAgICAgIGlmICghYWxsb3dNYXBzQW5kU2V0cykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgYFJlY2VpdmVkIGEgU2V0IHdoaWNoIGlzIG5vIGxvbmdlciBzdXBwb3J0ZWQgYXMgYSBDb252ZXggdHlwZSwgd2l0aCB2YWx1ZXM6ICR7dmFsdWUuJHNldC5qb2luKFxuICAgICAgICAgICAgXCIsIFwiXG4gICAgICAgICAgKX0uYFxuICAgICAgICApO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG5ldyBTZXQoXG4gICAgICAgIHZhbHVlLiRzZXQubWFwKCh2YWx1ZTIpID0+IGpzb25Ub0NvbnZleEludGVybmFsKHZhbHVlMiwgYWxsb3dNYXBzQW5kU2V0cykpXG4gICAgICApO1xuICAgIH1cbiAgICBpZiAoa2V5ID09PSBcIiRtYXBcIikge1xuICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHZhbHVlLiRtYXApKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgTWFsZm9ybWVkICRtYXAgZmllbGQgb24gJHt2YWx1ZX1gKTtcbiAgICAgIH1cbiAgICAgIGlmICghYWxsb3dNYXBzQW5kU2V0cykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgYFJlY2VpdmVkIGEgTWFwIHdoaWNoIGlzIG5vIGxvbmdlciBzdXBwb3J0ZWQgYXMgYSBDb252ZXggdHlwZSwgd2l0aCBlbnRyaWVzOiAke3ZhbHVlLiRtYXAuam9pbihcbiAgICAgICAgICAgIFwiLCBcIlxuICAgICAgICAgICl9LmBcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IG1hcCA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7XG4gICAgICBmb3IgKGNvbnN0IHBhaXIgb2YgdmFsdWUuJG1hcCkge1xuICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkocGFpcikgfHwgcGFpci5sZW5ndGggIT09IDIpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYE1hbGZvcm1lZCBwYWlyIGluICRtYXAgJHt2YWx1ZX1gKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBrID0ganNvblRvQ29udmV4SW50ZXJuYWwocGFpclswXSwgYWxsb3dNYXBzQW5kU2V0cyk7XG4gICAgICAgIGNvbnN0IHYgPSBqc29uVG9Db252ZXhJbnRlcm5hbChwYWlyWzFdLCBhbGxvd01hcHNBbmRTZXRzKTtcbiAgICAgICAgbWFwLnNldChrLCB2KTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBtYXA7XG4gICAgfVxuICB9XG4gIGNvbnN0IG91dCA9IHt9O1xuICBmb3IgKGNvbnN0IFtrLCB2XSBvZiBPYmplY3QuZW50cmllcyh2YWx1ZSkpIHtcbiAgICB2YWxpZGF0ZU9iamVjdEZpZWxkKGspO1xuICAgIG91dFtrXSA9IGpzb25Ub0NvbnZleEludGVybmFsKHYsIGFsbG93TWFwc0FuZFNldHMpO1xuICB9XG4gIHJldHVybiBvdXQ7XG59XG5leHBvcnQgZnVuY3Rpb24ganNvblRvQ29udmV4KHZhbHVlLCBhbGxvd01hcHNBbmRTZXRzID0gZmFsc2UpIHtcbiAgcmV0dXJuIGpzb25Ub0NvbnZleEludGVybmFsKHZhbHVlLCBhbGxvd01hcHNBbmRTZXRzKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBzdHJpbmdpZnlWYWx1ZUZvckVycm9yKHZhbHVlKSB7XG4gIHJldHVybiBKU09OLnN0cmluZ2lmeSh2YWx1ZSwgKF9rZXksIHZhbHVlMikgPT4ge1xuICAgIGlmICh2YWx1ZTIgPT09IHZvaWQgMCkge1xuICAgICAgcmV0dXJuIFwidW5kZWZpbmVkXCI7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgdmFsdWUyID09PSBcImJpZ2ludFwiKSB7XG4gICAgICByZXR1cm4gYCR7dmFsdWUyLnRvU3RyaW5nKCl9bmA7XG4gICAgfVxuICAgIHJldHVybiB2YWx1ZTI7XG4gIH0pO1xufVxuZnVuY3Rpb24gY29udmV4VG9Kc29uSW50ZXJuYWwodmFsdWUsIG9yaWdpbmFsVmFsdWUsIGNvbnRleHQsIGluY2x1ZGVUb3BMZXZlbFVuZGVmaW5lZCwgYWxsb3dNYXBzQW5kU2V0cykge1xuICBpZiAodmFsdWUgPT09IHZvaWQgMCkge1xuICAgIGNvbnN0IGNvbnRleHRUZXh0ID0gY29udGV4dCAmJiBgIChwcmVzZW50IGF0IHBhdGggJHtjb250ZXh0fSBpbiBvcmlnaW5hbCBvYmplY3QgJHtzdHJpbmdpZnlWYWx1ZUZvckVycm9yKFxuICAgICAgb3JpZ2luYWxWYWx1ZVxuICAgICl9KWA7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgYHVuZGVmaW5lZCBpcyBub3QgYSB2YWxpZCBDb252ZXggdmFsdWUke2NvbnRleHRUZXh0fS4gVG8gbGVhcm4gYWJvdXQgQ29udmV4J3Mgc3VwcG9ydGVkIHR5cGVzLCBzZWUgaHR0cHM6Ly9kb2NzLmNvbnZleC5kZXYvdXNpbmcvdHlwZXMuYFxuICAgICk7XG4gIH1cbiAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG4gIGlmICh0eXBlb2YgdmFsdWUgPT09IFwiYmlnaW50XCIpIHtcbiAgICBpZiAodmFsdWUgPCBNSU5fSU5UNjQgfHwgTUFYX0lOVDY0IDwgdmFsdWUpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgYEJpZ0ludCAke3ZhbHVlfSBkb2VzIG5vdCBmaXQgaW50byBhIDY0LWJpdCBzaWduZWQgaW50ZWdlci5gXG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm4geyAkaW50ZWdlcjogYmlnSW50VG9CYXNlNjQodmFsdWUpIH07XG4gIH1cbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJudW1iZXJcIikge1xuICAgIGlmIChpc1NwZWNpYWwodmFsdWUpKSB7XG4gICAgICBjb25zdCBidWZmZXIgPSBuZXcgQXJyYXlCdWZmZXIoOCk7XG4gICAgICBuZXcgRGF0YVZpZXcoYnVmZmVyKS5zZXRGbG9hdDY0KDAsIHZhbHVlLCBMSVRUTEVfRU5ESUFOKTtcbiAgICAgIHJldHVybiB7ICRmbG9hdDogQmFzZTY0LmZyb21CeXRlQXJyYXkobmV3IFVpbnQ4QXJyYXkoYnVmZmVyKSkgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgfVxuICBpZiAodHlwZW9mIHZhbHVlID09PSBcImJvb2xlYW5cIikge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuICBpZiAodHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG4gIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKSB7XG4gICAgcmV0dXJuIHsgJGJ5dGVzOiBCYXNlNjQuZnJvbUJ5dGVBcnJheShuZXcgVWludDhBcnJheSh2YWx1ZSkpIH07XG4gIH1cbiAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgcmV0dXJuIHZhbHVlLm1hcChcbiAgICAgICh2YWx1ZTIsIGkpID0+IGNvbnZleFRvSnNvbkludGVybmFsKFxuICAgICAgICB2YWx1ZTIsXG4gICAgICAgIG9yaWdpbmFsVmFsdWUsXG4gICAgICAgIGNvbnRleHQgKyBgWyR7aX1dYCxcbiAgICAgICAgZmFsc2UsXG4gICAgICAgIGFsbG93TWFwc0FuZFNldHNcbiAgICAgIClcbiAgICApO1xuICB9XG4gIGlmICh2YWx1ZSBpbnN0YW5jZW9mIFNldCkge1xuICAgIGlmICghYWxsb3dNYXBzQW5kU2V0cykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBlcnJvck1lc3NhZ2VGb3JVbnN1cHBvcnRlZFR5cGUoXG4gICAgICAgICAgY29udGV4dCxcbiAgICAgICAgICBcIlNldFwiLFxuICAgICAgICAgIFsuLi52YWx1ZV0sXG4gICAgICAgICAgb3JpZ2luYWxWYWx1ZVxuICAgICAgICApXG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgJHNldDogWy4uLnZhbHVlXS5tYXAoXG4gICAgICAgICh2YWx1ZTIsIGkpID0+IGNvbnZleFRvSnNvbkludGVybmFsKFxuICAgICAgICAgIHZhbHVlMixcbiAgICAgICAgICBvcmlnaW5hbFZhbHVlLFxuICAgICAgICAgIGNvbnRleHQgKyBgLmtleXMoKVske2l9XWAsXG4gICAgICAgICAgZmFsc2UsXG4gICAgICAgICAgYWxsb3dNYXBzQW5kU2V0c1xuICAgICAgICApXG4gICAgICApXG4gICAgfTtcbiAgfVxuICBpZiAodmFsdWUgaW5zdGFuY2VvZiBNYXApIHtcbiAgICBpZiAoIWFsbG93TWFwc0FuZFNldHMpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgZXJyb3JNZXNzYWdlRm9yVW5zdXBwb3J0ZWRUeXBlKFxuICAgICAgICAgIGNvbnRleHQsXG4gICAgICAgICAgXCJNYXBcIixcbiAgICAgICAgICBbLi4udmFsdWVdLFxuICAgICAgICAgIG9yaWdpbmFsVmFsdWVcbiAgICAgICAgKVxuICAgICAgKTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICRtYXA6IFsuLi52YWx1ZV0ubWFwKChbaywgdl0sIGkpID0+IHtcbiAgICAgICAgY29uc3QganNvbktleSA9IGNvbnZleFRvSnNvbkludGVybmFsKFxuICAgICAgICAgIGssXG4gICAgICAgICAgb3JpZ2luYWxWYWx1ZSxcbiAgICAgICAgICBjb250ZXh0ICsgYC5rZXlzKClbJHtpfV1gLFxuICAgICAgICAgIGZhbHNlLFxuICAgICAgICAgIGFsbG93TWFwc0FuZFNldHNcbiAgICAgICAgKTtcbiAgICAgICAgY29uc3QganNvblZhbHVlID0gY29udmV4VG9Kc29uSW50ZXJuYWwoXG4gICAgICAgICAgdixcbiAgICAgICAgICBvcmlnaW5hbFZhbHVlLFxuICAgICAgICAgIGNvbnRleHQgKyBgLnZhbHVlcygpWyR7aX1dYCxcbiAgICAgICAgICBmYWxzZSxcbiAgICAgICAgICBhbGxvd01hcHNBbmRTZXRzXG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiBbanNvbktleSwganNvblZhbHVlXTtcbiAgICAgIH0pXG4gICAgfTtcbiAgfVxuICBpZiAoIWlzU2ltcGxlT2JqZWN0KHZhbHVlKSkge1xuICAgIGNvbnN0IHRoZVR5cGUgPSB2YWx1ZT8uY29uc3RydWN0b3I/Lm5hbWU7XG4gICAgY29uc3QgdHlwZU5hbWUgPSB0aGVUeXBlID8gYCR7dGhlVHlwZX0gYCA6IFwiXCI7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgZXJyb3JNZXNzYWdlRm9yVW5zdXBwb3J0ZWRUeXBlKGNvbnRleHQsIHR5cGVOYW1lLCB2YWx1ZSwgb3JpZ2luYWxWYWx1ZSlcbiAgICApO1xuICB9XG4gIGNvbnN0IG91dCA9IHt9O1xuICBjb25zdCBlbnRyaWVzID0gT2JqZWN0LmVudHJpZXModmFsdWUpO1xuICBlbnRyaWVzLnNvcnQoKFtrMSwgX3YxXSwgW2syLCBfdjJdKSA9PiBrMSA9PT0gazIgPyAwIDogazEgPCBrMiA/IC0xIDogMSk7XG4gIGZvciAoY29uc3QgW2ssIHZdIG9mIGVudHJpZXMpIHtcbiAgICBpZiAodiAhPT0gdm9pZCAwKSB7XG4gICAgICB2YWxpZGF0ZU9iamVjdEZpZWxkKGspO1xuICAgICAgb3V0W2tdID0gY29udmV4VG9Kc29uSW50ZXJuYWwoXG4gICAgICAgIHYsXG4gICAgICAgIG9yaWdpbmFsVmFsdWUsXG4gICAgICAgIGNvbnRleHQgKyBgLiR7a31gLFxuICAgICAgICBmYWxzZSxcbiAgICAgICAgYWxsb3dNYXBzQW5kU2V0c1xuICAgICAgKTtcbiAgICB9IGVsc2UgaWYgKGluY2x1ZGVUb3BMZXZlbFVuZGVmaW5lZCkge1xuICAgICAgdmFsaWRhdGVPYmplY3RGaWVsZChrKTtcbiAgICAgIG91dFtrXSA9IGNvbnZleE9yVW5kZWZpbmVkVG9Kc29uSW50ZXJuYWwoXG4gICAgICAgIHYsXG4gICAgICAgIG9yaWdpbmFsVmFsdWUsXG4gICAgICAgIGNvbnRleHQgKyBgLiR7a31gXG4gICAgICApO1xuICAgIH1cbiAgfVxuICByZXR1cm4gb3V0O1xufVxuZnVuY3Rpb24gZXJyb3JNZXNzYWdlRm9yVW5zdXBwb3J0ZWRUeXBlKGNvbnRleHQsIHR5cGVOYW1lLCB2YWx1ZSwgb3JpZ2luYWxWYWx1ZSkge1xuICBpZiAoY29udGV4dCkge1xuICAgIHJldHVybiBgJHt0eXBlTmFtZX0ke3N0cmluZ2lmeVZhbHVlRm9yRXJyb3IoXG4gICAgICB2YWx1ZVxuICAgICl9IGlzIG5vdCBhIHN1cHBvcnRlZCBDb252ZXggdHlwZSAocHJlc2VudCBhdCBwYXRoICR7Y29udGV4dH0gaW4gb3JpZ2luYWwgb2JqZWN0ICR7c3RyaW5naWZ5VmFsdWVGb3JFcnJvcihcbiAgICAgIG9yaWdpbmFsVmFsdWVcbiAgICApfSkuIFRvIGxlYXJuIGFib3V0IENvbnZleCdzIHN1cHBvcnRlZCB0eXBlcywgc2VlIGh0dHBzOi8vZG9jcy5jb252ZXguZGV2L3VzaW5nL3R5cGVzLmA7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGAke3R5cGVOYW1lfSR7c3RyaW5naWZ5VmFsdWVGb3JFcnJvcihcbiAgICAgIHZhbHVlXG4gICAgKX0gaXMgbm90IGEgc3VwcG9ydGVkIENvbnZleCB0eXBlLmA7XG4gIH1cbn1cbmZ1bmN0aW9uIGNvbnZleE9yVW5kZWZpbmVkVG9Kc29uSW50ZXJuYWwodmFsdWUsIG9yaWdpbmFsVmFsdWUsIGNvbnRleHQpIHtcbiAgaWYgKHZhbHVlID09PSB2b2lkIDApIHtcbiAgICByZXR1cm4geyAkdW5kZWZpbmVkOiBudWxsIH07XG4gIH0gZWxzZSB7XG4gICAgaWYgKG9yaWdpbmFsVmFsdWUgPT09IHZvaWQgMCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBgUHJvZ3JhbW1pbmcgZXJyb3IuIEN1cnJlbnQgdmFsdWUgaXMgJHtzdHJpbmdpZnlWYWx1ZUZvckVycm9yKFxuICAgICAgICAgIHZhbHVlXG4gICAgICAgICl9IGJ1dCBvcmlnaW5hbCB2YWx1ZSBpcyB1bmRlZmluZWRgXG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm4gY29udmV4VG9Kc29uSW50ZXJuYWwodmFsdWUsIG9yaWdpbmFsVmFsdWUsIGNvbnRleHQsIGZhbHNlLCBmYWxzZSk7XG4gIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBjb252ZXhUb0pzb24odmFsdWUsIGFsbG93TWFwc0FuZFNldHMgPSBmYWxzZSkge1xuICByZXR1cm4gY29udmV4VG9Kc29uSW50ZXJuYWwodmFsdWUsIHZhbHVlLCBcIlwiLCBmYWxzZSwgYWxsb3dNYXBzQW5kU2V0cyk7XG59XG5leHBvcnQgZnVuY3Rpb24gY29udmV4T3JVbmRlZmluZWRUb0pzb24odmFsdWUpIHtcbiAgcmV0dXJuIGNvbnZleE9yVW5kZWZpbmVkVG9Kc29uSW50ZXJuYWwodmFsdWUsIHZhbHVlLCBcIlwiKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwYXRjaFZhbHVlVG9Kc29uKHZhbHVlKSB7XG4gIHJldHVybiBjb252ZXhUb0pzb25JbnRlcm5hbCh2YWx1ZSwgdmFsdWUsIFwiXCIsIHRydWUsIGZhbHNlKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZhbHVlLmpzLm1hcFxuIl0sIm5hbWVzIjpbIkJhc2U2NCIsImlzU2ltcGxlT2JqZWN0IiwiTElUVExFX0VORElBTiIsIk1JTl9JTlQ2NCIsIkJpZ0ludCIsIk1BWF9JTlQ2NCIsIlpFUk8iLCJFSUdIVCIsIlRXT0ZJRlRZU0lYIiwiaXNTcGVjaWFsIiwibiIsIk51bWJlciIsImlzTmFOIiwiaXNGaW5pdGUiLCJPYmplY3QiLCJpcyIsInNsb3dCaWdJbnRUb0Jhc2U2NCIsInZhbHVlIiwiaGV4IiwidG9TdHJpbmciLCJsZW5ndGgiLCJieXRlcyIsIlVpbnQ4QXJyYXkiLCJBcnJheUJ1ZmZlciIsImkiLCJoZXhCeXRlIiwibWF0Y2giLCJyZXZlcnNlIiwic2V0IiwicGFyc2VJbnQiLCJmcm9tQnl0ZUFycmF5Iiwic2xvd0Jhc2U2NFRvQmlnSW50IiwiZW5jb2RlZCIsImludGVnZXJCeXRlcyIsInRvQnl0ZUFycmF5IiwiYnl0ZUxlbmd0aCIsIkVycm9yIiwicG93ZXIiLCJieXRlIiwibW9kZXJuQmlnSW50VG9CYXNlNjQiLCJidWZmZXIiLCJEYXRhVmlldyIsInNldEJpZ0ludDY0IiwibW9kZXJuQmFzZTY0VG9CaWdJbnQiLCJpbnRCeXRlc1ZpZXciLCJnZXRCaWdJbnQ2NCIsImJpZ0ludFRvQmFzZTY0IiwicHJvdG90eXBlIiwiYmFzZTY0VG9CaWdJbnQiLCJNQVhfSURFTlRJRklFUl9MRU4iLCJ2YWxpZGF0ZU9iamVjdEZpZWxkIiwiayIsInN0YXJ0c1dpdGgiLCJjaGFyQ29kZSIsImNoYXJDb2RlQXQiLCJqc29uVG9Db252ZXhJbnRlcm5hbCIsImFsbG93TWFwc0FuZFNldHMiLCJBcnJheSIsImlzQXJyYXkiLCJtYXAiLCJ2YWx1ZTIiLCJlbnRyaWVzIiwia2V5IiwiJGJ5dGVzIiwiJGludGVnZXIiLCIkZmxvYXQiLCJmbG9hdEJ5dGVzIiwiZmxvYXRCeXRlc1ZpZXciLCJmbG9hdCIsImdldEZsb2F0NjQiLCIkc2V0Iiwiam9pbiIsIlNldCIsIiRtYXAiLCJNYXAiLCJwYWlyIiwidiIsIm91dCIsImpzb25Ub0NvbnZleCIsInN0cmluZ2lmeVZhbHVlRm9yRXJyb3IiLCJKU09OIiwic3RyaW5naWZ5IiwiX2tleSIsImNvbnZleFRvSnNvbkludGVybmFsIiwib3JpZ2luYWxWYWx1ZSIsImNvbnRleHQiLCJpbmNsdWRlVG9wTGV2ZWxVbmRlZmluZWQiLCJjb250ZXh0VGV4dCIsInNldEZsb2F0NjQiLCJlcnJvck1lc3NhZ2VGb3JVbnN1cHBvcnRlZFR5cGUiLCJqc29uS2V5IiwianNvblZhbHVlIiwidGhlVHlwZSIsImNvbnN0cnVjdG9yIiwibmFtZSIsInR5cGVOYW1lIiwic29ydCIsImsxIiwiX3YxIiwiazIiLCJfdjIiLCJjb252ZXhPclVuZGVmaW5lZFRvSnNvbkludGVybmFsIiwiJHVuZGVmaW5lZCIsImNvbnZleFRvSnNvbiIsImNvbnZleE9yVW5kZWZpbmVkVG9Kc29uIiwicGF0Y2hWYWx1ZVRvSnNvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/values/value.js\n");

/***/ })

};
;