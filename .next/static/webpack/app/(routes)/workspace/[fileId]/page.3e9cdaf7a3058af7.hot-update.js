"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(routes)/workspace/[fileId]/page",{

/***/ "(app-pages-browser)/./app/(routes)/workspace/_components/Canvas.tsx":
/*!*******************************************************!*\
  !*** ./app/(routes)/workspace/_components/Canvas.tsx ***!
  \*******************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_dnd__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-dnd */ \"(app-pages-browser)/./node_modules/react-dnd/dist/hooks/useDrop/useDrop.js\");\n// import React, { useEffect, useState, useCallback } from 'react';\n// import { Excalidraw, MainMenu, WelcomeScreen } from \"@excalidraw/excalidraw\";\n// import type { ExcalidrawElement } from \"@excalidraw/excalidraw/types/element/types\";\n// import { FILE } from '../../dashboard/_components/FileList';\n// import { useMutation } from 'convex/react';\n// import { api } from '@/convex/_generated/api';\n// interface CanvasProps {\n//     onSaveTrigger: boolean;\n//     fileId: string;\n//     fileData: FILE | null;\n//     onComponentAdd: (component: any) => void;\n// }\n// function Canvas({ onSaveTrigger, fileId, fileData, onComponentAdd }: CanvasProps) {\n//     const [elements, setElements] = useState<ExcalidrawElement[]>([]);\n//     const updateWhiteboard = useMutation(api.files.updateWhiteboard);\n//     // Initialize elements from fileData\n//     useEffect(() => {\n//         if (fileData?.whiteboard) {\n//             try {\n//                 const parsedElements = JSON.parse(fileData.whiteboard);\n//                 if (Array.isArray(parsedElements)) {\n//                     setElements(parsedElements);\n//                 }\n//             } catch (error) {\n//                 console.error(\"Error parsing whiteboard data:\", error);\n//             }\n//         }\n//     }, [fileData]);\n//     // Save whiteboard when triggered\n//     useEffect(() => {\n//         if (onSaveTrigger) {\n//             updateWhiteboard({\n//                 _id: fileId,\n//                 whiteboard: JSON.stringify(elements)\n//             }).catch(error => {\n//                 console.error(\"Error saving whiteboard:\", error);\n//             });\n//         }\n//     }, [onSaveTrigger, elements, fileId, updateWhiteboard]);\n//     const handleDrop = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n//         e.preventDefault();\n//         try {\n//             const data = e.dataTransfer.getData('application/json');\n//             if (!data) return;\n//             const item = JSON.parse(data);\n//             const rect = e.currentTarget.getBoundingClientRect();\n//             const x = e.clientX - rect.left;\n//             const y = e.clientY - rect.top;\n//             const newElement = {\n//                 type: \"image\",\n//                 x,\n//                 y,\n//                 width: 100,\n//                 height: 100,\n//                 angle: 0,\n//                 strokeColor: \"#000000\",\n//                 backgroundColor: \"transparent\",\n//                 fillStyle: \"solid\",\n//                 strokeWidth: 2,\n//                 strokeStyle: \"solid\",\n//                 roughness: 1,\n//                 opacity: 100,\n//                 id: `${item.id}-${Date.now()}`,\n//                 customData: {\n//                     componentType: item.type,\n//                     name: item.name,\n//                     svg: item.svg\n//                 }\n//             } as ExcalidrawElement;\n//             setElements(prev => [...prev, newElement]);\n//             onComponentAdd({\n//                 name: item.name,\n//                 price: getComponentPrice(item.type),\n//                 quantity: 1,\n//                 type: item.type\n//             });\n//         } catch (error) {\n//             console.error(\"Error handling drop:\", error);\n//         }\n//     }, [onComponentAdd]);\n//     const getComponentPrice = (type: string): number => ({\n//         'breaker': 3650,\n//         'switch': 2920,\n//     }[type] || 0);\n//     return (\n//         <div\n//             className=\"h-full w-full relative\"\n//             onDragOver={(e) => e.preventDefault()}\n//             onDrop={handleDrop}\n//         >\n//             {fileData && (\n//                 <Excalidraw\n//                     theme=\"light\"\n//                     initialData={{\n//                         elements: elements,\n//                         appState: { viewBackgroundColor: \"#ffffff\" }\n//                     }}\n//                     onChange={(excalidrawElements) => setElements(excalidrawElements)}\n//                     UIOptions={{\n//                         canvasActions: {\n//                             saveToActiveFile: false,\n//                             loadScene: false,\n//                             export: false,\n//                             toggleTheme: false\n//                         },\n//                         tools: {\n//                             image: true\n//                         }\n//                     }}\n//                 >\n//                     <MainMenu>\n//                         <MainMenu.DefaultItems.ClearCanvas />\n//                         <MainMenu.DefaultItems.SaveAsImage />\n//                         {/* <MainMenu.DefaultItems.ChangeCanvasBackground /> */}\n//                     </MainMenu>\n//                     <WelcomeScreen>\n//                         <WelcomeScreen.Hints.MenuHint />\n//                         <WelcomeScreen.Hints.ToolbarHint />\n//                         <WelcomeScreen.Center>\n//                             <WelcomeScreen.Center.MenuItemHelp />\n//                         </WelcomeScreen.Center>\n//                     </WelcomeScreen>\n//                 </Excalidraw>\n//             )}\n//         </div>\n//     );\n// }\n// export default Canvas;\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\nconst Canvas = ()=>{\n    _s();\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [droppedItems, setDroppedItems] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [, dropRef] = (0,react_dnd__WEBPACK_IMPORTED_MODULE_2__.useDrop)(()=>({\n            accept: \"COMPONENT\",\n            drop: (item, monitor)=>{\n                const offset = monitor.getClientOffset();\n                if (canvasRef.current && offset) {\n                    const canvasRect = canvasRef.current.getBoundingClientRect();\n                    const x = offset.x - canvasRect.left;\n                    const y = offset.y - canvasRect.top;\n                    setDroppedItems((prevItems)=>[\n                            ...prevItems,\n                            {\n                                ...item,\n                                x,\n                                y\n                            }\n                        ]);\n                }\n            }\n        }));\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const canvas = canvasRef.current;\n        if (canvas) {\n            const ctx = canvas.getContext(\"2d\");\n            if (ctx) {\n                // Clear the canvas\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\n                // Draw a custom teal background\n                ctx.fillStyle = \"#317873\";\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n                // Render all dropped items\n                droppedItems.forEach((item)=>{\n                    const img = new Image();\n                    img.src = item.svg;\n                    img.onload = ()=>{\n                        ctx.drawImage(img, item.x, item.y, 50, 50);\n                    };\n                });\n            }\n        }\n    }, [\n        droppedItems\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: dropRef,\n        className: \"bg-custom-beige h-screen border-l relative\",\n        style: {\n            position: \"relative\"\n        },\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n            ref: canvasRef,\n            width: 800,\n            height: 600,\n            className: \"w-full h-full\",\n            style: {\n                display: \"block\"\n            }\n        }, void 0, false, {\n            fileName: \"D:\\\\Projects\\\\jan1\\\\erasor_clone-main\\\\app\\\\(routes)\\\\workspace\\\\_components\\\\Canvas.tsx\",\n            lineNumber: 206,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"D:\\\\Projects\\\\jan1\\\\erasor_clone-main\\\\app\\\\(routes)\\\\workspace\\\\_components\\\\Canvas.tsx\",\n        lineNumber: 201,\n        columnNumber: 5\n    }, undefined);\n};\n_s(Canvas, \"nqntZznlNYZoP/3lQZ8ttwFoxj0=\", false, function() {\n    return [\n        react_dnd__WEBPACK_IMPORTED_MODULE_2__.useDrop\n    ];\n});\n_c = Canvas;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Canvas);\nvar _c;\n$RefreshReg$(_c, \"Canvas\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC8ocm91dGVzKS93b3Jrc3BhY2UvX2NvbXBvbmVudHMvQ2FudmFzLnRzeCIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLG1FQUFtRTtBQUNuRSxnRkFBZ0Y7QUFDaEYsdUZBQXVGO0FBQ3ZGLCtEQUErRDtBQUMvRCw4Q0FBOEM7QUFDOUMsaURBQWlEO0FBRWpELDBCQUEwQjtBQUMxQiw4QkFBOEI7QUFDOUIsc0JBQXNCO0FBQ3RCLDZCQUE2QjtBQUM3QixnREFBZ0Q7QUFDaEQsSUFBSTtBQUVKLHNGQUFzRjtBQUN0Rix5RUFBeUU7QUFDekUsd0VBQXdFO0FBRXhFLDJDQUEyQztBQUMzQyx3QkFBd0I7QUFDeEIsc0NBQXNDO0FBQ3RDLG9CQUFvQjtBQUNwQiwwRUFBMEU7QUFDMUUsdURBQXVEO0FBQ3ZELG1EQUFtRDtBQUNuRCxvQkFBb0I7QUFDcEIsZ0NBQWdDO0FBQ2hDLDBFQUEwRTtBQUMxRSxnQkFBZ0I7QUFDaEIsWUFBWTtBQUNaLHNCQUFzQjtBQUV0Qix3Q0FBd0M7QUFDeEMsd0JBQXdCO0FBQ3hCLCtCQUErQjtBQUMvQixpQ0FBaUM7QUFDakMsK0JBQStCO0FBQy9CLHVEQUF1RDtBQUN2RCxrQ0FBa0M7QUFDbEMsb0VBQW9FO0FBQ3BFLGtCQUFrQjtBQUNsQixZQUFZO0FBQ1osK0RBQStEO0FBRS9ELCtFQUErRTtBQUMvRSw4QkFBOEI7QUFDOUIsZ0JBQWdCO0FBQ2hCLHVFQUF1RTtBQUN2RSxpQ0FBaUM7QUFFakMsNkNBQTZDO0FBQzdDLG9FQUFvRTtBQUNwRSwrQ0FBK0M7QUFDL0MsOENBQThDO0FBRTlDLG1DQUFtQztBQUNuQyxpQ0FBaUM7QUFDakMscUJBQXFCO0FBQ3JCLHFCQUFxQjtBQUNyQiw4QkFBOEI7QUFDOUIsK0JBQStCO0FBQy9CLDRCQUE0QjtBQUM1QiwwQ0FBMEM7QUFDMUMsa0RBQWtEO0FBQ2xELHNDQUFzQztBQUN0QyxrQ0FBa0M7QUFDbEMsd0NBQXdDO0FBQ3hDLGdDQUFnQztBQUNoQyxnQ0FB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QixLQUFLTyxDQUFDLEVBQUVQLEtBQUtTLENBQUMsRUFBRSxJQUFJO29CQUN6QztnQkFDRjtZQUNGO1FBQ0Y7SUFDRixHQUFHO1FBQUNkO0tBQWE7SUFFakIscUJBQ0UsOERBQUNnQztRQUNDQyxLQUFLL0I7UUFDTGdDLFdBQVU7UUFDVkMsT0FBTztZQUFFQyxVQUFVO1FBQVc7a0JBRTlCLDRFQUFDbkI7WUFDQ2dCLEtBQUtsQztZQUNMc0IsT0FBTztZQUNQQyxRQUFRO1lBQ1JZLFdBQVU7WUFDVkMsT0FBTztnQkFBRUUsU0FBUztZQUFROzs7Ozs7Ozs7OztBQUlsQztHQTVETXZDOztRQUlnQkQsOENBQU9BOzs7S0FKdkJDO0FBOEROLCtEQUFlQSxNQUFNQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2FwcC8ocm91dGVzKS93b3Jrc3BhY2UvX2NvbXBvbmVudHMvQ2FudmFzLnRzeD9hNGVlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlLCB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0Jztcbi8vIGltcG9ydCB7IEV4Y2FsaWRyYXcsIE1haW5NZW51LCBXZWxjb21lU2NyZWVuIH0gZnJvbSBcIkBleGNhbGlkcmF3L2V4Y2FsaWRyYXdcIjtcbi8vIGltcG9ydCB0eXBlIHsgRXhjYWxpZHJhd0VsZW1lbnQgfSBmcm9tIFwiQGV4Y2FsaWRyYXcvZXhjYWxpZHJhdy90eXBlcy9lbGVtZW50L3R5cGVzXCI7XG4vLyBpbXBvcnQgeyBGSUxFIH0gZnJvbSAnLi4vLi4vZGFzaGJvYXJkL19jb21wb25lbnRzL0ZpbGVMaXN0Jztcbi8vIGltcG9ydCB7IHVzZU11dGF0aW9uIH0gZnJvbSAnY29udmV4L3JlYWN0Jztcbi8vIGltcG9ydCB7IGFwaSB9IGZyb20gJ0AvY29udmV4L19nZW5lcmF0ZWQvYXBpJztcblxuLy8gaW50ZXJmYWNlIENhbnZhc1Byb3BzIHtcbi8vICAgICBvblNhdmVUcmlnZ2VyOiBib29sZWFuO1xuLy8gICAgIGZpbGVJZDogc3RyaW5nO1xuLy8gICAgIGZpbGVEYXRhOiBGSUxFIHwgbnVsbDtcbi8vICAgICBvbkNvbXBvbmVudEFkZDogKGNvbXBvbmVudDogYW55KSA9PiB2b2lkO1xuLy8gfVxuXG4vLyBmdW5jdGlvbiBDYW52YXMoeyBvblNhdmVUcmlnZ2VyLCBmaWxlSWQsIGZpbGVEYXRhLCBvbkNvbXBvbmVudEFkZCB9OiBDYW52YXNQcm9wcykge1xuLy8gICAgIGNvbnN0IFtlbGVtZW50cywgc2V0RWxlbWVudHNdID0gdXNlU3RhdGU8RXhjYWxpZHJhd0VsZW1lbnRbXT4oW10pO1xuLy8gICAgIGNvbnN0IHVwZGF0ZVdoaXRlYm9hcmQgPSB1c2VNdXRhdGlvbihhcGkuZmlsZXMudXBkYXRlV2hpdGVib2FyZCk7XG5cbi8vICAgICAvLyBJbml0aWFsaXplIGVsZW1lbnRzIGZyb20gZmlsZURhdGFcbi8vICAgICB1c2VFZmZlY3QoKCkgPT4ge1xuLy8gICAgICAgICBpZiAoZmlsZURhdGE/LndoaXRlYm9hcmQpIHtcbi8vICAgICAgICAgICAgIHRyeSB7XG4vLyAgICAgICAgICAgICAgICAgY29uc3QgcGFyc2VkRWxlbWVudHMgPSBKU09OLnBhcnNlKGZpbGVEYXRhLndoaXRlYm9hcmQpO1xuLy8gICAgICAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KHBhcnNlZEVsZW1lbnRzKSkge1xuLy8gICAgICAgICAgICAgICAgICAgICBzZXRFbGVtZW50cyhwYXJzZWRFbGVtZW50cyk7XG4vLyAgICAgICAgICAgICAgICAgfVxuLy8gICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbi8vICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgcGFyc2luZyB3aGl0ZWJvYXJkIGRhdGE6XCIsIGVycm9yKTtcbi8vICAgICAgICAgICAgIH1cbi8vICAgICAgICAgfVxuLy8gICAgIH0sIFtmaWxlRGF0YV0pO1xuXG4vLyAgICAgLy8gU2F2ZSB3aGl0ZWJvYXJkIHdoZW4gdHJpZ2dlcmVkXG4vLyAgICAgdXNlRWZmZWN0KCgpID0+IHtcbi8vICAgICAgICAgaWYgKG9uU2F2ZVRyaWdnZXIpIHtcbi8vICAgICAgICAgICAgIHVwZGF0ZVdoaXRlYm9hcmQoe1xuLy8gICAgICAgICAgICAgICAgIF9pZDogZmlsZUlkLFxuLy8gICAgICAgICAgICAgICAgIHdoaXRlYm9hcmQ6IEpTT04uc3RyaW5naWZ5KGVsZW1lbnRzKVxuLy8gICAgICAgICAgICAgfSkuY2F0Y2goZXJyb3IgPT4ge1xuLy8gICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBzYXZpbmcgd2hpdGVib2FyZDpcIiwgZXJyb3IpO1xuLy8gICAgICAgICAgICAgfSk7XG4vLyAgICAgICAgIH1cbi8vICAgICB9LCBbb25TYXZlVHJpZ2dlciwgZWxlbWVudHMsIGZpbGVJZCwgdXBkYXRlV2hpdGVib2FyZF0pO1xuXG4vLyAgICAgY29uc3QgaGFuZGxlRHJvcCA9IHVzZUNhbGxiYWNrKChlOiBSZWFjdC5EcmFnRXZlbnQ8SFRNTERpdkVsZW1lbnQ+KSA9PiB7XG4vLyAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbi8vICAgICAgICAgdHJ5IHtcbi8vICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBlLmRhdGFUcmFuc2Zlci5nZXREYXRhKCdhcHBsaWNhdGlvbi9qc29uJyk7XG4vLyAgICAgICAgICAgICBpZiAoIWRhdGEpIHJldHVybjtcblxuLy8gICAgICAgICAgICAgY29uc3QgaXRlbSA9IEpTT04ucGFyc2UoZGF0YSk7XG4vLyAgICAgICAgICAgICBjb25zdCByZWN0ID0gZS5jdXJyZW50VGFyZ2V0LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuLy8gICAgICAgICAgICAgY29uc3QgeCA9IGUuY2xpZW50WCAtIHJlY3QubGVmdDtcbi8vICAgICAgICAgICAgIGNvbnN0IHkgPSBlLmNsaWVudFkgLSByZWN0LnRvcDtcblxuLy8gICAgICAgICAgICAgY29uc3QgbmV3RWxlbWVudCA9IHtcbi8vICAgICAgICAgICAgICAgICB0eXBlOiBcImltYWdlXCIsXG4vLyAgICAgICAgICAgICAgICAgeCxcbi8vICAgICAgICAgICAgICAgICB5LFxuLy8gICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAsXG4vLyAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAsXG4vLyAgICAgICAgICAgICAgICAgYW5nbGU6IDAsXG4vLyAgICAgICAgICAgICAgICAgc3Ryb2tlQ29sb3I6IFwiIzAwMDAwMFwiLFxuLy8gICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogXCJ0cmFuc3BhcmVudFwiLFxuLy8gICAgICAgICAgICAgICAgIGZpbGxTdHlsZTogXCJzb2xpZFwiLFxuLy8gICAgICAgICAgICAgICAgIHN0cm9rZVdpZHRoOiAyLFxuLy8gICAgICAgICAgICAgICAgIHN0cm9rZVN0eWxlOiBcInNvbGlkXCIsXG4vLyAgICAgICAgICAgICAgICAgcm91Z2huZXNzOiAxLFxuLy8gICAgICAgICAgICAgICAgIG9wYWNpdHk6IDEwMCxcbi8vICAgICAgICAgICAgICAgICBpZDogYCR7aXRlbS5pZH0tJHtEYXRlLm5vdygpfWAsXG4vLyAgICAgICAgICAgICAgICAgY3VzdG9tRGF0YToge1xuLy8gICAgICAgICAgICAgICAgICAgICBjb21wb25lbnRUeXBlOiBpdGVtLnR5cGUsXG4vLyAgICAgICAgICAgICAgICAgICAgIG5hbWU6IGl0ZW0ubmFtZSxcbi8vICAgICAgICAgICAgICAgICAgICAgc3ZnOiBpdGVtLnN2Z1xuLy8gICAgICAgICAgICAgICAgIH1cbi8vICAgICAgICAgICAgIH0gYXMgRXhjYWxpZHJhd0VsZW1lbnQ7XG5cbi8vICAgICAgICAgICAgIHNldEVsZW1lbnRzKHByZXYgPT4gWy4uLnByZXYsIG5ld0VsZW1lbnRdKTtcbi8vICAgICAgICAgICAgIG9uQ29tcG9uZW50QWRkKHtcbi8vICAgICAgICAgICAgICAgICBuYW1lOiBpdGVtLm5hbWUsXG4vLyAgICAgICAgICAgICAgICAgcHJpY2U6IGdldENvbXBvbmVudFByaWNlKGl0ZW0udHlwZSksXG4vLyAgICAgICAgICAgICAgICAgcXVhbnRpdHk6IDEsXG4vLyAgICAgICAgICAgICAgICAgdHlwZTogaXRlbS50eXBlXG4vLyAgICAgICAgICAgICB9KTtcbi8vICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbi8vICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBoYW5kbGluZyBkcm9wOlwiLCBlcnJvcik7XG4vLyAgICAgICAgIH1cbi8vICAgICB9LCBbb25Db21wb25lbnRBZGRdKTtcblxuLy8gICAgIGNvbnN0IGdldENvbXBvbmVudFByaWNlID0gKHR5cGU6IHN0cmluZyk6IG51bWJlciA9PiAoe1xuLy8gICAgICAgICAnYnJlYWtlcic6IDM2NTAsXG4vLyAgICAgICAgICdzd2l0Y2gnOiAyOTIwLFxuLy8gICAgIH1bdHlwZV0gfHwgMCk7XG5cbi8vICAgICByZXR1cm4gKFxuLy8gICAgICAgICA8ZGl2XG4vLyAgICAgICAgICAgICBjbGFzc05hbWU9XCJoLWZ1bGwgdy1mdWxsIHJlbGF0aXZlXCJcbi8vICAgICAgICAgICAgIG9uRHJhZ092ZXI9eyhlKSA9PiBlLnByZXZlbnREZWZhdWx0KCl9XG4vLyAgICAgICAgICAgICBvbkRyb3A9e2hhbmRsZURyb3B9XG4vLyAgICAgICAgID5cbi8vICAgICAgICAgICAgIHtmaWxlRGF0YSAmJiAoXG4vLyAgICAgICAgICAgICAgICAgPEV4Y2FsaWRyYXdcbi8vICAgICAgICAgICAgICAgICAgICAgdGhlbWU9XCJsaWdodFwiXG4vLyAgICAgICAgICAgICAgICAgICAgIGluaXRpYWxEYXRhPXt7XG4vLyAgICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50czogZWxlbWVudHMsXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICBhcHBTdGF0ZTogeyB2aWV3QmFja2dyb3VuZENvbG9yOiBcIiNmZmZmZmZcIiB9XG4vLyAgICAgICAgICAgICAgICAgICAgIH19XG4vLyAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZXhjYWxpZHJhd0VsZW1lbnRzKSA9PiBzZXRFbGVtZW50cyhleGNhbGlkcmF3RWxlbWVudHMpfVxuLy8gICAgICAgICAgICAgICAgICAgICBVSU9wdGlvbnM9e3tcbi8vICAgICAgICAgICAgICAgICAgICAgICAgIGNhbnZhc0FjdGlvbnM6IHtcbi8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzYXZlVG9BY3RpdmVGaWxlOiBmYWxzZSxcbi8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2FkU2NlbmU6IGZhbHNlLFxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cG9ydDogZmFsc2UsXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9nZ2xlVGhlbWU6IGZhbHNlXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgdG9vbHM6IHtcbi8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbWFnZTogdHJ1ZVxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgfVxuLy8gICAgICAgICAgICAgICAgICAgICB9fVxuLy8gICAgICAgICAgICAgICAgID5cbi8vICAgICAgICAgICAgICAgICAgICAgPE1haW5NZW51PlxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgPE1haW5NZW51LkRlZmF1bHRJdGVtcy5DbGVhckNhbnZhcyAvPlxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgPE1haW5NZW51LkRlZmF1bHRJdGVtcy5TYXZlQXNJbWFnZSAvPlxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgey8qIDxNYWluTWVudS5EZWZhdWx0SXRlbXMuQ2hhbmdlQ2FudmFzQmFja2dyb3VuZCAvPiAqL31cbi8vICAgICAgICAgICAgICAgICAgICAgPC9NYWluTWVudT5cbi8vICAgICAgICAgICAgICAgICAgICAgPFdlbGNvbWVTY3JlZW4+XG4vLyAgICAgICAgICAgICAgICAgICAgICAgICA8V2VsY29tZVNjcmVlbi5IaW50cy5NZW51SGludCAvPlxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgPFdlbGNvbWVTY3JlZW4uSGludHMuVG9vbGJhckhpbnQgLz5cbi8vICAgICAgICAgICAgICAgICAgICAgICAgIDxXZWxjb21lU2NyZWVuLkNlbnRlcj5cbi8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8V2VsY29tZVNjcmVlbi5DZW50ZXIuTWVudUl0ZW1IZWxwIC8+XG4vLyAgICAgICAgICAgICAgICAgICAgICAgICA8L1dlbGNvbWVTY3JlZW4uQ2VudGVyPlxuLy8gICAgICAgICAgICAgICAgICAgICA8L1dlbGNvbWVTY3JlZW4+XG4vLyAgICAgICAgICAgICAgICAgPC9FeGNhbGlkcmF3PlxuLy8gICAgICAgICAgICAgKX1cbi8vICAgICAgICAgPC9kaXY+XG4vLyAgICAgKTtcbi8vIH1cblxuLy8gZXhwb3J0IGRlZmF1bHQgQ2FudmFzO1xuXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCBSZWFjdCwgeyB1c2VSZWYsIHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZURyb3AgfSBmcm9tIFwicmVhY3QtZG5kXCI7XG5cbmludGVyZmFjZSBDYW52YXNQcm9wcyB7fVxuXG5pbnRlcmZhY2UgRHJvcHBlZEl0ZW0ge1xuICBpZDogc3RyaW5nO1xuICBuYW1lOiBzdHJpbmc7XG4gIHN2Zzogc3RyaW5nO1xuICB4OiBudW1iZXI7XG4gIHk6IG51bWJlcjtcbn1cblxuY29uc3QgQ2FudmFzOiBSZWFjdC5GQzxDYW52YXNQcm9wcz4gPSAoKSA9PiB7XG4gIGNvbnN0IGNhbnZhc1JlZiA9IHVzZVJlZjxIVE1MQ2FudmFzRWxlbWVudCB8IG51bGw+KG51bGwpO1xuICBjb25zdCBbZHJvcHBlZEl0ZW1zLCBzZXREcm9wcGVkSXRlbXNdID0gdXNlU3RhdGU8RHJvcHBlZEl0ZW1bXT4oW10pO1xuXG4gIGNvbnN0IFssIGRyb3BSZWZdID0gdXNlRHJvcCgoKSA9PiAoe1xuICAgIGFjY2VwdDogXCJDT01QT05FTlRcIixcbiAgICBkcm9wOiAoaXRlbTogeyBpZDogc3RyaW5nOyBuYW1lOiBzdHJpbmc7IHN2Zzogc3RyaW5nIH0sIG1vbml0b3IpID0+IHtcbiAgICAgIGNvbnN0IG9mZnNldCA9IG1vbml0b3IuZ2V0Q2xpZW50T2Zmc2V0KCk7XG4gICAgICBpZiAoY2FudmFzUmVmLmN1cnJlbnQgJiYgb2Zmc2V0KSB7XG4gICAgICAgIGNvbnN0IGNhbnZhc1JlY3QgPSBjYW52YXNSZWYuY3VycmVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgY29uc3QgeCA9IG9mZnNldC54IC0gY2FudmFzUmVjdC5sZWZ0O1xuICAgICAgICBjb25zdCB5ID0gb2Zmc2V0LnkgLSBjYW52YXNSZWN0LnRvcDtcblxuICAgICAgICBzZXREcm9wcGVkSXRlbXMoKHByZXZJdGVtcykgPT4gW1xuICAgICAgICAgIC4uLnByZXZJdGVtcyxcbiAgICAgICAgICB7IC4uLml0ZW0sIHgsIHkgfSxcbiAgICAgICAgXSk7XG4gICAgICB9XG4gICAgfSxcbiAgfSkpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgY2FudmFzID0gY2FudmFzUmVmLmN1cnJlbnQ7XG4gICAgaWYgKGNhbnZhcykge1xuICAgICAgY29uc3QgY3R4ID0gY2FudmFzLmdldENvbnRleHQoXCIyZFwiKTtcbiAgICAgIGlmIChjdHgpIHtcbiAgICAgICAgLy8gQ2xlYXIgdGhlIGNhbnZhc1xuICAgICAgICBjdHguY2xlYXJSZWN0KDAsIDAsIGNhbnZhcy53aWR0aCwgY2FudmFzLmhlaWdodCk7XG5cbiAgICAgICAgLy8gRHJhdyBhIGN1c3RvbSB0ZWFsIGJhY2tncm91bmRcbiAgICAgICAgY3R4LmZpbGxTdHlsZSA9IFwiIzMxNzg3M1wiO1xuICAgICAgICBjdHguZmlsbFJlY3QoMCwgMCwgY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KTtcblxuICAgICAgICAvLyBSZW5kZXIgYWxsIGRyb3BwZWQgaXRlbXNcbiAgICAgICAgZHJvcHBlZEl0ZW1zLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgICAgICBjb25zdCBpbWcgPSBuZXcgSW1hZ2UoKTtcbiAgICAgICAgICBpbWcuc3JjID0gaXRlbS5zdmc7XG4gICAgICAgICAgaW1nLm9ubG9hZCA9ICgpID0+IHtcbiAgICAgICAgICAgIGN0eC5kcmF3SW1hZ2UoaW1nLCBpdGVtLngsIGl0ZW0ueSwgNTAsIDUwKTtcbiAgICAgICAgICB9O1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIFtkcm9wcGVkSXRlbXNdKTtcblxuICByZXR1cm4gKFxuICAgIDxkaXZcbiAgICAgIHJlZj17ZHJvcFJlZn1cbiAgICAgIGNsYXNzTmFtZT1cImJnLWN1c3RvbS1iZWlnZSBoLXNjcmVlbiBib3JkZXItbCByZWxhdGl2ZVwiXG4gICAgICBzdHlsZT17eyBwb3NpdGlvbjogXCJyZWxhdGl2ZVwiIH19XG4gICAgPlxuICAgICAgPGNhbnZhc1xuICAgICAgICByZWY9e2NhbnZhc1JlZn1cbiAgICAgICAgd2lkdGg9ezgwMH1cbiAgICAgICAgaGVpZ2h0PXs2MDB9XG4gICAgICAgIGNsYXNzTmFtZT1cInctZnVsbCBoLWZ1bGxcIlxuICAgICAgICBzdHlsZT17eyBkaXNwbGF5OiBcImJsb2NrXCIgfX1cbiAgICAgID48L2NhbnZhcz5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENhbnZhcztcbiJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZVJlZiIsInVzZUVmZmVjdCIsInVzZVN0YXRlIiwidXNlRHJvcCIsIkNhbnZhcyIsImNhbnZhc1JlZiIsImRyb3BwZWRJdGVtcyIsInNldERyb3BwZWRJdGVtcyIsImRyb3BSZWYiLCJhY2NlcHQiLCJkcm9wIiwiaXRlbSIsIm1vbml0b3IiLCJvZmZzZXQiLCJnZXRDbGllbnRPZmZzZXQiLCJjdXJyZW50IiwiY2FudmFzUmVjdCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsIngiLCJsZWZ0IiwieSIsInRvcCIsInByZXZJdGVtcyIsImNhbnZhcyIsImN0eCIsImdldENvbnRleHQiLCJjbGVhclJlY3QiLCJ3aWR0aCIsImhlaWdodCIsImZpbGxTdHlsZSIsImZpbGxSZWN0IiwiZm9yRWFjaCIsImltZyIsIkltYWdlIiwic3JjIiwic3ZnIiwib25sb2FkIiwiZHJhd0ltYWdlIiwiZGl2IiwicmVmIiwiY2xhc3NOYW1lIiwic3R5bGUiLCJwb3NpdGlvbiIsImRpc3BsYXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/(routes)/workspace/_components/Canvas.tsx\n"));

/***/ })

});