/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(routes)/workspace/[fileId]/page",{

/***/ "(app-pages-browser)/./app/(routes)/workspace/_components/Canvas.tsx":
/*!*******************************************************!*\
  !*** ./app/(routes)/workspace/_components/Canvas.tsx ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// import React, { useEffect, useState, useCallback } from 'react';\n// import { Excalidraw, MainMenu, WelcomeScreen } from \"@excalidraw/excalidraw\";\n// import type { ExcalidrawElement } from \"@excalidraw/excalidraw/types/element/types\";\n// import { FILE } from '../../dashboard/_components/FileList';\n// import { useMutation } from 'convex/react';\n// import { api } from '@/convex/_generated/api';\n// interface CanvasProps {\n//     onSaveTrigger: boolean;\n//     fileId: string;\n//     fileData: FILE | null;\n//     onComponentAdd: (component: any) => void;\n// }\n// function Canvas({ onSaveTrigger, fileId, fileData, onComponentAdd }: CanvasProps) {\n//     const [elements, setElements] = useState<ExcalidrawElement[]>([]);\n//     const updateWhiteboard = useMutation(api.files.updateWhiteboard);\n//     // Initialize elements from fileData\n//     useEffect(() => {\n//         if (fileData?.whiteboard) {\n//             try {\n//                 const parsedElements = JSON.parse(fileData.whiteboard);\n//                 if (Array.isArray(parsedElements)) {\n//                     setElements(parsedElements);\n//                 }\n//             } catch (error) {\n//                 console.error(\"Error parsing whiteboard data:\", error);\n//             }\n//         }\n//     }, [fileData]);\n//     // Save whiteboard when triggered\n//     useEffect(() => {\n//         if (onSaveTrigger) {\n//             updateWhiteboard({\n//                 _id: fileId,\n//                 whiteboard: JSON.stringify(elements)\n//             }).catch(error => {\n//                 console.error(\"Error saving whiteboard:\", error);\n//             });\n//         }\n//     }, [onSaveTrigger, elements, fileId, updateWhiteboard]);\n//     const handleDrop = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n//         e.preventDefault();\n//         try {\n//             const data = e.dataTransfer.getData('application/json');\n//             if (!data) return;\n//             const item = JSON.parse(data);\n//             const rect = e.currentTarget.getBoundingClientRect();\n//             const x = e.clientX - rect.left;\n//             const y = e.clientY - rect.top;\n//             const newElement = {\n//                 type: \"image\",\n//                 x,\n//                 y,\n//                 width: 100,\n//                 height: 100,\n//                 angle: 0,\n//                 strokeColor: \"#000000\",\n//                 backgroundColor: \"transparent\",\n//                 fillStyle: \"solid\",\n//                 strokeWidth: 2,\n//                 strokeStyle: \"solid\",\n//                 roughness: 1,\n//                 opacity: 100,\n//                 id: `${item.id}-${Date.now()}`,\n//                 customData: {\n//                     componentType: item.type,\n//                     name: item.name,\n//                     svg: item.svg\n//                 }\n//             } as ExcalidrawElement;\n//             setElements(prev => [...prev, newElement]);\n//             onComponentAdd({\n//                 name: item.name,\n//                 price: getComponentPrice(item.type),\n//                 quantity: 1,\n//                 type: item.type\n//             });\n//         } catch (error) {\n//             console.error(\"Error handling drop:\", error);\n//         }\n//     }, [onComponentAdd]);\n//     const getComponentPrice = (type: string): number => ({\n//         'breaker': 3650,\n//         'switch': 2920,\n//     }[type] || 0);\n//     return (\n//         <div\n//             className=\"h-full w-full relative\"\n//             onDragOver={(e) => e.preventDefault()}\n//             onDrop={handleDrop}\n//         >\n//             {fileData && (\n//                 <Excalidraw\n//                     theme=\"light\"\n//                     initialData={{\n//                         elements: elements,\n//                         appState: { viewBackgroundColor: \"#ffffff\" }\n//                     }}\n//                     onChange={(excalidrawElements) => setElements(excalidrawElements)}\n//                     UIOptions={{\n//                         canvasActions: {\n//                             saveToActiveFile: false,\n//                             loadScene: false,\n//                             export: false,\n//                             toggleTheme: false\n//                         },\n//                         tools: {\n//                             image: true\n//                         }\n//                     }}\n//                 >\n//                     <MainMenu>\n//                         <MainMenu.DefaultItems.ClearCanvas />\n//                         <MainMenu.DefaultItems.SaveAsImage />\n//                         {/* <MainMenu.DefaultItems.ChangeCanvasBackground /> */}\n//                     </MainMenu>\n//                     <WelcomeScreen>\n//                         <WelcomeScreen.Hints.MenuHint />\n//                         <WelcomeScreen.Hints.ToolbarHint />\n//                         <WelcomeScreen.Center>\n//                             <WelcomeScreen.Center.MenuItemHelp />\n//                         </WelcomeScreen.Center>\n//                     </WelcomeScreen>\n//                 </Excalidraw>\n//             )}\n//         </div>\n//     );\n// }\n// export default Canvas;\n// _components/Canvas.tsx\"use client\";\n// import React, { useRef, useEffect, useState } from \"react\";\n// import { useDrop } from \"react-dnd\";\n// interface CanvasProps {}\n// interface DroppedItem {\n//   id: string;\n//   name: string;\n//   svg: string;\n//   x: number;\n//   y: number;\n// }\n// const Canvas: React.FC<CanvasProps> = () => {\n//   const canvasRef = useRef<HTMLCanvasElement | null>(null);\n//   const [droppedItems, setDroppedItems] = useState<DroppedItem[]>([]);\n//   const [, dropRef] = useDrop(() => ({\n//     accept: \"COMPONENT\",\n//     drop: (item: { id: string; name: string; svg: string }, monitor) => {\n//       const offset = monitor.getClientOffset();\n//       if (canvasRef.current && offset) {\n//         const canvasRect = canvasRef.current.getBoundingClientRect();\n//         const x = offset.x - canvasRect.left;\n//         const y = offset.y - canvasRect.top;\n//         setDroppedItems((prevItems) => [\n//           ...prevItems,\n//           { ...item, x, y },\n//         ]);\n//       }\n//     },\n//   }));\n//   useEffect(() => {\n//     const canvas = canvasRef.current;\n//     if (canvas) {\n//       const ctx = canvas.getContext(\"2d\");\n//       if (ctx) {\n//         // Clear the canvas\n//         ctx.clearRect(0, 0, canvas.width, canvas.height);\n//         // Draw a custom teal background\n//         ctx.fillStyle = \"#317873\";\n//         ctx.fillRect(0, 0, canvas.width, canvas.height);\n//         // Render all dropped items\n//         droppedItems.forEach((item) => {\n//           const img = new Image();\n//           img.src = item.svg;\n//           img.onload = () => {\n//             ctx.drawImage(img, item.x, item.y, 50, 50);\n//           };\n//         });\n//       }\n//     }\n//   }, [droppedItems]);\n//   return (\n//     <div\n//       ref={dropRef}\n//       className=\"bg-custom-beige h-screen border-l relative\"\n//       style={{ position: \"relative\" }}\n//     >\n//       <canvas\n//         ref={canvasRef}\n//         width={800}\n//         height={600}\n//         className=\"w-full h-full\"\n//         style={{ display: \"block\" }}\n//       ></canvas>\n//     </div>\n//   );\n// };\n// export default Canvas;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/(routes)/workspace/_components/Canvas.tsx\n"));

/***/ })

});